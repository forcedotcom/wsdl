export type ID = string;
export type json = string;
export type QueryLocator = string;
export type briefcaseType = 'BriefcaseAndAccount' | 'BriefcaseAndActivity' | 'BriefcaseAndOpportunity' | 'Briefcase';
export type StatusCode = 'ALERT_NOTIFICATION_LIMIT_EXCEEDED' | 'ALL_OR_NONE_OPERATION_ROLLED_BACK' | 'ALREADY_APPLIED' | 'ALREADY_IN_PROCESS' | 'ALREADY_REDEEMED_VOUCHER' | 'APEX_DATA_ACCESS_RESTRICTION' | 'APEX_FAILED' | 'APPLICATION_ALREADY_EXISTS' | 'ASSIGNEE_TYPE_REQUIRED' | 'ATTRIBUTE_DEFINITION_LIMIT_EXCEEDED' | 'AURA_COMPILE_ERROR' | 'AUTH_PROVIDER_NEEDS_AUTH' | 'AUTH_PROVIDER_NOT_FOUND' | 'B2B_SEARCH_ADMIN_ERROR' | 'BAD_CUSTOM_ENTITY_PARENT_DOMAIN' | 'BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED' | 'BLOCKED_EXCLUSIVE' | 'CANNOT_CASCADE_PRODUCT_ACTIVE' | 'CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD' | 'CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD' | 'CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE' | 'CANNOT_DEACTIVATE_DIVISION' | 'CANNOT_DELETE_GLOBAL_ACTION_LIST' | 'CANNOT_DELETE_LAST_DATED_CONVERSION_RATE' | 'CANNOT_DELETE_MANAGED_OBJECT' | 'CANNOT_DISABLE_LAST_ADMIN' | 'CANNOT_ENABLE_IP_RESTRICT_REQUESTS' | 'CANNOT_EXECUTE_FLOW_TRIGGER' | 'CANNOT_FREEZE_SELF' | 'CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY' | 'CANNOT_MODIFY_MANAGED_OBJECT' | 'CANNOT_PASSWORD_LOCKOUT' | 'CANNOT_POST_TO_ARCHIVED_GROUP' | 'CANNOT_RENAME_APEX_REFERENCED_FIELD' | 'CANNOT_RENAME_APEX_REFERENCED_OBJECT' | 'CANNOT_RENAME_REFERENCED_FIELD' | 'CANNOT_RENAME_REFERENCED_OBJECT' | 'CANNOT_REPARENT_RECORD' | 'CANNOT_UPDATE_CONVERTED_LEAD' | 'CANNOT_UPDATE_IS_THIRD_PARTY' | 'CANNOT_UPDATE_PAYMENT_METHOD_SET' | 'CANT_DISABLE_CORP_CURRENCY' | 'CANT_UNSET_CORP_CURRENCY' | 'CART_DELIVERY_GROUP_NOT_FOUND' | 'CART_ITEM_NOT_FOUND' | 'CART_NOT_FOUND' | 'CHECKOUT_CONFLICT' | 'CHECKOUT_EXPIRED' | 'CHECKOUT_INVALIDATED' | 'CHECKOUT_LOCKED' | 'CHECKOUT_NOT_FOUND' | 'CHECKOUT_UNAUTHORIZED' | 'CHILD_SHARE_FAILS_PARENT' | 'CIRCULAR_DEPENDENCY' | 'CLEAN_SERVICE_ERROR' | 'CLONE_FIELD_INTEGRITY_EXCEPTION' | 'CLONE_NOT_SUPPORTED' | 'CMS_FOLDER_ITEM_MOVE_FAILED' | 'COLLISION_DETECTED' | 'COMMERCE_SEARCH_INDEXING_SYSTEM_ERROR' | 'COMMERCE_SEARCH_MQ_ERROR' | 'COMMERCE_SEARCH_PROVIDER_LIMIT_EXCEEDED' | 'COMMERCE_SEARCH_RESOURCE_NOT_FOUND' | 'COMMERCIAL_CONTROL_ERROR' | 'COMMUNITY_NOT_ACCESSIBLE' | 'CONFLICT' | 'CONFLICTING_ENVIRONMENT_HUB_MEMBER' | 'CONFLICTING_SSO_USER_MAPPING' | 'CONTENT_NOT_FOUND' | 'CONTENT_SEARCH_NOT_ENABLED' | 'CONTENT_TYPE_DISABLED_FOR_API' | 'CONTENT_TYPE_NOT_FOUND' | 'COUPON_REDEMPTION_LIMIT_EXCEEDED' | 'CUSTOM_APEX_ERROR' | 'CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED' | 'CUSTOM_ENTITY_OR_FIELD_LIMIT' | 'CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED' | 'CUSTOM_INDEX_EXISTS' | 'CUSTOM_LINK_LIMIT_EXCEEDED' | 'CUSTOM_METADATA_LIMIT_EXCEEDED' | 'CUSTOM_METADATA_REL_FIELD_MANAGEABILITY' | 'CUSTOM_SETTINGS_LIMIT_EXCEEDED' | 'CUSTOM_TAB_LIMIT_EXCEEDED' | 'DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR' | 'DATAASSESSMENT_CONFIG_SERVICE_ERROR' | 'DATACLOUDADDRESS_NO_RECORDS_FOUND' | 'DATACLOUDADDRESS_PROCESSING_ERROR' | 'DATACLOUDADDRESS_SERVER_ERROR' | 'DATA_MAPPING_NOT_FOUND' | 'DATA_MAPPING_SCHEMA_NOT_FOUND' | 'DATA_TRANSFER_RECORD_LIMIT_EXCEEDED' | 'DATA_TYPE_NOT_SUPPORTED' | 'DATE_OUT_OF_RANGE' | 'DELETE_FAILED' | 'DELETE_NOT_ALLOWED' | 'DELETE_OPERATION_TOO_LARGE' | 'DELETE_REQUIRED_ON_CASCADE' | 'DEPENDENCY_EXISTS' | 'DUPLICATES_DETECTED' | 'DUPLICATE_CASE_SOLUTION' | 'DUPLICATE_COMM_NICKNAME' | 'DUPLICATE_CUSTOM_ENTITY_DEFINITION' | 'DUPLICATE_CUSTOM_TAB_MOTIF' | 'DUPLICATE_DEVELOPER_NAME' | 'DUPLICATE_EXTERNAL_ID' | 'DUPLICATE_MASTER_LABEL' | 'DUPLICATE_SENDER_DISPLAY_NAME' | 'DUPLICATE_USERNAME' | 'DUPLICATE_VALUE' | 'EMAIL_ADDRESS_BOUNCED' | 'EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR' | 'EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR' | 'EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR' | 'EMAIL_EXTERNAL_TRANSPORT_TOO_LARGE_ERROR' | 'EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR' | 'EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR' | 'EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR' | 'EMAIL_OPTED_OUT' | 'EMAIL_TEMPLATE_FORMULA_ERROR' | 'EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR' | 'EMAIL_TEMPLATE_MERGEFIELD_ERROR' | 'EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR' | 'EMAIL_TEMPLATE_PROCESSING_ERROR' | 'EMPTY_CATALOG' | 'EMPTY_INGESTION_JOB' | 'EMPTY_SCONTROL_FILE_NAME' | 'ENHANCED_EMAIL_TEMPLATE_COMPILATION_ERROR' | 'ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE' | 'ENTITY_IS_ARCHIVED' | 'ENTITY_IS_DELETED' | 'ENTITY_IS_LOCKED' | 'ENTITY_SAVE_ERROR' | 'ENTITY_SAVE_VALIDATION_ERROR' | 'ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT' | 'ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB' | 'ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB' | 'ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN' | 'ERROR_CALCULATING_EXPIRY_DATE' | 'ERROR_IN_MAILER' | 'EXCEEDED_MAX_SEMIJOIN_SUBSELECTS_WRITE' | 'EXCHANGE_WEB_SERVICES_URL_INVALID' | 'EXTERNAL_RESOURCE_FORBIDDEN' | 'FAILED_ACTIVATION' | 'FAILED_DUE_TO_OTHER_INPUTS' | 'FAILED_TO_RESOLVE_MAPPING' | 'FAILED_TO_RESOLVE_SCHEMA_INFORMATION' | 'FIELD_CUSTOM_VALIDATION_EXCEPTION' | 'FIELD_FILTER_VALIDATION_EXCEPTION' | 'FIELD_INTEGRITY_EXCEPTION' | 'FIELD_KEYWORD_LIST_MATCH_LIMIT' | 'FIELD_MAPPING_ERROR' | 'FIELD_MODERATION_RULE_BLOCK' | 'FIELD_NOT_UPDATABLE' | 'FILE_EXTENSION_NOT_ALLOWED' | 'FILE_SIZE_LIMIT_EXCEEDED' | 'FILTERED_LOOKUP_LIMIT_EXCEEDED' | 'FIND_DUPLICATES_ERROR' | 'FLOW_EXCEPTION' | 'FUNCTIONALITY_NOT_ENABLED' | 'GET_EINSTEIN_TENANT_ERROR' | 'GUEST_INSUFFICIENT_ACCESS' | 'HAS_PUBLIC_REFERENCES' | 'HTML_FILE_UPLOAD_NOT_ALLOWED' | 'IAS_AM_AUTH_BAD_REQUEST' | 'IAS_AM_AUTH_UNAUTHORIZED' | 'IAS_INVALID_AUTH' | 'IAS_INVALID_REQUEST_PARAMETER' | 'IAS_RECORD_DOES_NOT_EXIST' | 'IAS_TENANT_NOT_PROVISIONED' | 'IAS_UNCOMMITTED_WORK' | 'IMAGE_TOO_LARGE' | 'INACTIVE_OWNER_OR_USER' | 'INACTIVE_RULE_ERROR' | 'INDEX_ITEM_LIMIT_EXCEEDED' | 'INDEX_PAYLOAD_NOT_FOUND' | 'INGESTION_JOB_RECORDS_LIMIT_EXCEEDED' | 'INGESTION_TOTAL_FILE_SIZE_LIMIT_EXCEEDED' | 'INPUTPARAM_INCOMPATIBLE_DATATYPE' | 'INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE' | 'INSUFFICIENT_ACCESS' | 'INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY' | 'INSUFFICIENT_ACCESS_OR_READONLY' | 'INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA' | 'INSUFFICIENT_BALANCE' | 'INSUFFICIENT_BENEFIT_REMAINING' | 'INSUFFICIENT_CREDITS' | 'INTEGRATION_CANCELLED' | 'INTERNAL_ERROR' | 'INVALID_ACCESS_LEVEL' | 'INVALID_ACCESS_TOKEN' | 'INVALID_ACCOUNT' | 'INVALID_ACTION_VERSION' | 'INVALID_API_INPUT' | 'INVALID_ARGUMENT_TYPE' | 'INVALID_ASSIGNEE_TYPE' | 'INVALID_ASSIGNMENT_RULE' | 'INVALID_AUTH_HEADER' | 'INVALID_BATCH_OPERATION' | 'INVALID_BUSINESS_HOURS_NAME' | 'INVALID_CATEGORY_NETWORK' | 'INVALID_CHECKOUT_INPUT' | 'INVALID_CONTACT' | 'INVALID_CONTENT_TYPE' | 'INVALID_CREDIT_CARD_INFO' | 'INVALID_CROSS_REFERENCE_KEY' | 'INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD' | 'INVALID_CURRENCY_CONV_RATE' | 'INVALID_CURRENCY_CORP_RATE' | 'INVALID_CURRENCY_ISO' | 'INVALID_DATASET_REFERENCE_INPUT' | 'INVALID_DATA_CATEGORY_GROUP_REFERENCE' | 'INVALID_DATA_URI' | 'INVALID_EBV_OPERATION' | 'INVALID_EMAIL_ADDRESS' | 'INVALID_EMPTY_KEY_OWNER' | 'INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR' | 'INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR' | 'INVALID_ENTITY_FOR_UPSERT' | 'INVALID_ENVIRONMENT_HUB_MEMBER' | 'INVALID_EVENT_DELIVERY' | 'INVALID_EVENT_INPUT' | 'INVALID_EVENT_SUBSCRIPTION' | 'INVALID_EXTENSION_ID' | 'INVALID_EXTERNAL_ID_FIELD_NAME' | 'INVALID_FIELD' | 'INVALID_FIELD_FOR_INSERT_UPDATE' | 'INVALID_FIELD_WHEN_USING_TEMPLATE' | 'INVALID_FILTER_ACTION' | 'INVALID_GOOGLE_DOCS_URL' | 'INVALID_ID_FIELD' | 'INVALID_INET_ADDRESS' | 'INVALID_INPUT' | 'INVALID_INPUT_FORMAT' | 'INVALID_KEY_FIELD_INPUT' | 'INVALID_LINEITEM_CLONE_STATE' | 'INVALID_MARKUP' | 'INVALID_MASTER_OR_TRANSLATED_SOLUTION' | 'INVALID_MERCHANT_ACCOUNT_MODE' | 'INVALID_MERCHANT_ACCOUNT_MODE_OR_STATUS' | 'INVALID_MERGE_RECORD' | 'INVALID_MESSAGE_ID_REFERENCE' | 'INVALID_NAMESPACE_PREFIX' | 'INVALID_OAUTH_URL' | 'INVALID_OPERATION' | 'INVALID_OPERATOR' | 'INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST' | 'INVALID_OWNER' | 'INVALID_PACKAGE_LICENSE' | 'INVALID_PACKAGE_VERSION' | 'INVALID_PARTNER_NETWORK_STATUS' | 'INVALID_PAYLOAD_VERSION' | 'INVALID_PERSON_ACCOUNT_OPERATION' | 'INVALID_PROFILE' | 'INVALID_PROMOTION' | 'INVALID_PROVIDER_TYPE' | 'INVALID_QUERY_KEY' | 'INVALID_QUERY_LOCATOR' | 'INVALID_QUERY_VALUE' | 'INVALID_READ_ONLY_USER_DML' | 'INVALID_RECEIVEDDOCUMENTID_ATTACHMENT' | 'INVALID_RECORD_ATTRIBUTE_VALUE' | 'INVALID_RECORD_TYPE' | 'INVALID_REFRESH_TOKEN' | 'INVALID_REORDER_PORTAL_RECORD_ASSOCIATION' | 'INVALID_REQUEST_STATE' | 'INVALID_RUNTIME_VALUE' | 'INVALID_SAVE_AS_ACTIVITY_FLAG' | 'INVALID_SCS_INBOUND_USER' | 'INVALID_SEARCH_PROVIDER_REQUEST' | 'INVALID_SESSION_ID' | 'INVALID_SETUP_OWNER' | 'INVALID_SIGNUP_COUNTRY' | 'INVALID_SIGNUP_OPTION' | 'INVALID_SITE_DELETE_EXCEPTION' | 'INVALID_SITE_FILE_IMPORTED_EXCEPTION' | 'INVALID_SITE_FILE_TYPE_EXCEPTION' | 'INVALID_SOURCE_OBJECT_ID' | 'INVALID_STATUS' | 'INVALID_SUBDOMAIN' | 'INVALID_TARGET_OBJECT_NAME' | 'INVALID_TEXT_REPRESENTATION' | 'INVALID_TYPE' | 'INVALID_TYPE_FOR_OPERATION' | 'INVALID_TYPE_ON_FIELD_IN_RECORD' | 'INVALID_UNMERGE_RECORD' | 'INVALID_USERID' | 'INVALID_USER_OBJECT' | 'IP_RANGE_LIMIT_EXCEEDED' | 'ITEM_NOT_FOUND' | 'JIGSAW_IMPORT_LIMIT_EXCEEDED' | 'LICENSE_LIMIT_EXCEEDED' | 'LIGHT_PORTAL_USER_EXCEPTION' | 'LIMIT_EXCEEDED' | 'LIST_PRICE_NOT_FOUND' | 'MALFORMED_ID' | 'MANAGER_NOT_DEFINED' | 'MASSMAIL_RETRY_LIMIT_EXCEEDED' | 'MASS_MAIL_LIMIT_EXCEEDED' | 'MATCH_DEFINITION_ERROR' | 'MATCH_OPERATION_ERROR' | 'MATCH_OPERATION_INVALID_ENGINE_ERROR' | 'MATCH_OPERATION_INVALID_RULE_ERROR' | 'MATCH_OPERATION_MISSING_ENGINE_ERROR' | 'MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR' | 'MATCH_OPERATION_MISSING_OPTIONS_ERROR' | 'MATCH_OPERATION_MISSING_RULE_ERROR' | 'MATCH_OPERATION_UNKNOWN_RULE_ERROR' | 'MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR' | 'MATCH_PRECONDITION_FAILED' | 'MATCH_PRECONDITION_REQUIRED' | 'MATCH_RUNTIME_ERROR' | 'MATCH_SERVICE_ERROR' | 'MATCH_SERVICE_TIMED_OUT' | 'MATCH_SERVICE_UNAVAILABLE_ERROR' | 'MAXIMUM_CCEMAILS_EXCEEDED' | 'MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED' | 'MAXIMUM_HIERARCHY_CHILDREN_REACHED' | 'MAXIMUM_HIERARCHY_LEVELS_REACHED' | 'MAXIMUM_HIERARCHY_TREE_SIZE_REACHED' | 'MAXIMUM_SIZE_OF_ATTACHMENT' | 'MAXIMUM_SIZE_OF_DOCUMENT' | 'MAX_ACTIONS_PER_RULE_EXCEEDED' | 'MAX_ACTIVE_RULES_EXCEEDED' | 'MAX_APPROVAL_STEPS_EXCEEDED' | 'MAX_DEPTH_IN_FLOW_EXECUTION' | 'MAX_FORMULAS_PER_RULE_EXCEEDED' | 'MAX_LIMIT_EXCEEDED' | 'MAX_RULES_EXCEEDED' | 'MAX_RULE_ENTRIES_EXCEEDED' | 'MAX_TASK_DESCRIPTION_EXCEEEDED' | 'MAX_TM_RULES_EXCEEDED' | 'MAX_TM_RULE_ITEMS_EXCEEDED' | 'MAX_TRIGGERS_EXCEEDED' | 'MERGE_FAILED' | 'METADATA_FIELD_UPDATE_ERROR' | 'METHOD_NOT_ALLOWED' | 'MISMATCHING_TYPES' | 'MISSING_ARGUMENT' | 'MISSING_OMNI_PROCESS_ID' | 'MISSING_PAY_NOW_SITE_URL_ORG_VALUE' | 'MISSING_RECEIVEDDOCUMENTID_ATTACHMENT' | 'MISSING_RECORD' | 'MIXED_DML_OPERATION' | 'MODEL_NOT_ACTIVE' | 'MULTIPLE_CONTENT_FOUND' | 'MULTIPLE_VOUCHERS' | 'NONUNIQUE_SHIPPING_ADDRESS' | 'NOT_FOUND' | 'NOT_RECOVERABLE_SEARCH_PROVIDER_ERROR' | 'NO_ACCESS_TOKEN' | 'NO_ACCESS_TOKEN_FROM_REFRESH' | 'NO_APPLICABLE_PROCESS' | 'NO_ATTACHMENT_PERMISSION' | 'NO_AUTH_PROVIDER' | 'NO_BUSINESS_HOURS_FOUND' | 'NO_INACTIVE_DIVISION_MEMBERS' | 'NO_MASS_MAIL_PERMISSION' | 'NO_MESSAGE_TYPE_MESSAGES' | 'NO_PARTNER_PERMISSION' | 'NO_REFRESH_TOKEN' | 'NO_SEARCH_ATTRIBUTES' | 'NO_SINGLE_MAIL_PERMISSION' | 'NO_SORT_PRICEBOOK_ASSOCIATED_ERROR' | 'NO_SUCH_USER_EXISTS' | 'NO_TOKEN_ENDPOINT' | 'NUMBER_OUTSIDE_VALID_RANGE' | 'NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED' | 'OCR_INVALID_REQUEST' | 'OPERATION_ENQUEUED' | 'OPERATION_WITH_CALLBACK_ENQUEUED' | 'OPTED_OUT_OF_MASS_MAIL' | 'OP_WITH_INVALID_USER_TYPE_EXCEPTION' | 'ORCHESTRATION_INVALID' | 'ORDER_MANAGEMENT_ACTION_NOT_ALLOWED' | 'ORDER_MANAGEMENT_INVALID_RECORD' | 'ORDER_MANAGEMENT_RECORD_EXISTS' | 'ORDER_MANAGEMENT_RECORD_NOT_FOUND' | 'ORG_SETTING_REQUIRED' | 'PACKAGE_DISABLED' | 'PACKAGE_LICENSE_REQUIRED' | 'PACKAGING_API_INSTALL_FAILED' | 'PACKAGING_API_UNINSTALL_FAILED' | 'PALI_INVALID_ACTION_ID' | 'PALI_INVALID_ACTION_NAME' | 'PALI_INVALID_ACTION_TYPE' | 'PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID' | 'PAL_INVALID_ENTITY_ID' | 'PAL_INVALID_FLEXIPAGE_ID' | 'PAL_INVALID_LAYOUT_ID' | 'PAL_INVALID_PARAMETERS' | 'PARAMETER_TOO_LARGE' | 'PARTICIPANT_RELATIONSHIP_EXISTS' | 'PAYLOAD_SIZE_EXCEEDED' | 'PA_API_EXCEPTION' | 'PA_AXIS_FAULT' | 'PA_INVALID_ID_EXCEPTION' | 'PA_NO_ACCESS_EXCEPTION' | 'PA_NO_DATA_FOUND_EXCEPTION' | 'PA_URI_SYNTAX_EXCEPTION' | 'PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION' | 'PENDING_COMMIT' | 'PICKLIST_INACTIVE_VALUES_EXCEEDED' | 'PLATFORM_EVENT_ENCRYPTION_ERROR' | 'PLATFORM_EVENT_PUBLISHING_UNAVAILABLE' | 'PLATFORM_EVENT_PUBLISH_FAILED' | 'PORTAL_NO_ACCESS' | 'PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT' | 'PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION' | 'PRICE_NOT_FOUND' | 'PRIVATE_CONTACT_ON_ASSET' | 'PROCESSING_HALTED' | 'PROGRAM_PROGRESS_NOT_ACTIVE' | 'PROMOTION_NOT_FOUND' | 'QA_INVALID_CREATE_FEED_ITEM' | 'QA_INVALID_SUCCESS_MESSAGE' | 'QUERY_REFINEMENT_VALUE_LIMIT_EXCEEDED' | 'QUERY_TIMEOUT' | 'QUERY_TOKEN_COUNT_LIMIT_EXCEEDED' | 'QUICK_ACTION_LIST_ITEM_NOT_ALLOWED' | 'QUICK_ACTION_LIST_NOT_ALLOWED' | 'RECORD_CREATION_FAILED' | 'RECORD_IN_USE_BY_WORKFLOW' | 'RECORD_MISSING_REQUIRED_FIELD' | 'RECORD_UPDATE_FAILED' | 'RECOVERABLE_SEARCH_PROVIDER_ERROR' | 'REFRESH_FAILED' | 'RELATED_ENTITY_FILTER_VALIDATION_EXCEPTION' | 'REL_FIELD_BAD_ACCESSIBILITY' | 'REPUTATION_MINIMUM_NUMBER_NOT_REACHED' | 'REQUEST_RUNNING_TOO_LONG' | 'REQUIRED_FEATURE_MISSING' | 'REQUIRED_FIELD_MISSING' | 'REQUIRE_CONNECTED_APP_SCS' | 'REQUIRE_CONNECTED_APP_SESSION_SCS' | 'REQUIRE_RUNAS_USER' | 'RESOURCE_NOT_AVAILABLE' | 'RETRIEVE_EXCHANGE_ATTACHMENT_FAILED' | 'RETRIEVE_EXCHANGE_EMAIL_FAILED' | 'RETRIEVE_EXCHANGE_EVENT_FAILED' | 'RETRIEVE_GOOGLE_EMAIL_FAILED' | 'RETRIEVE_GOOGLE_EVENT_FAILED' | 'RETRIEVE_USER_CONFIG_ERROR' | 'ROUTES_EVALUATION_LIMIT_EXCEEDED' | 'SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR' | 'SALESFORCE_INBOX_TRANSPORT_INVALID_INPUT_ERROR' | 'SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR' | 'SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR' | 'SCHEMA_OBJECT_NOT_FOUND' | 'SCREEN_POP_REQUIRED_INPUT_MISSING' | 'SEARCH_INCLUDE_RULES_MAX_RULE_DEFINITION_LIMIT_EXCEEDED' | 'SEARCH_INCLUDE_RULES_MIN_RULE_DEFINITION_NOT_MET' | 'SEARCH_PROVIDER_REQUEST_RATE_EXCEEDED' | 'SEGMENT_COUNT_LIMIT_EXCEEDED' | 'SELF_REFERENCE_FROM_FLOW' | 'SELF_REFERENCE_FROM_TRIGGER' | 'SERVICE_UNAVAILABLE' | 'SESSION_EXPIRED' | 'SESSION_INVALIDATED' | 'SHARE_NEEDED_FOR_CHILD_OWNER' | 'SINGLE_EMAIL_LIMIT_EXCEEDED' | 'SLACK_API_ERROR' | 'SOCIAL_ACCOUNT_NOT_FOUND' | 'SOCIAL_ACTION_INVALID' | 'SOCIAL_PERSONA_NOT_FOUND' | 'SOCIAL_POST_INVALID' | 'SOCIAL_POST_NOT_FOUND' | 'SPECIFICATION_GENERATION_EXCEPTION' | 'STANDARD_PRICE_NOT_DEFINED' | 'STORAGE_LIMIT_EXCEEDED' | 'STRING_TOO_LONG' | 'SUBDOMAIN_IN_USE' | 'TABSET_LIMIT_EXCEEDED' | 'TEMPLATE_NOT_ACTIVE' | 'TEMPLATE_NOT_FOUND' | 'TERMS_OF_SERVICE_UNREAD' | 'TERRITORY_REALIGN_IN_PROGRESS' | 'TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET' | 'TEXT_TO_PICKLIST_VALUES_EXCEEDED' | 'TOO_MANY_APEX_REQUESTS' | 'TOO_MANY_ENUM_VALUE' | 'TOO_MANY_JOBS' | 'TOO_MANY_POSSIBLE_USERS_EXIST' | 'TRANSFER_REQUIRES_READ' | 'TXN_SECURITY_NO_ACCESS' | 'UISF_ENTITY_QUERY_FAILED' | 'UISF_NO_MAPPINGS_FOUND' | 'UISF_TOKEN_NOT_FOUND' | 'UISF_UNKNOWN_EXCEPTION' | 'UISF_USER_MAPPING_FAILED' | 'UNABLE_TO_LOCK_ROW' | 'UNAUTHORIZED_SEARCH_PROVIDER_REQUEST' | 'UNAVAILABLE_RECORDTYPE_EXCEPTION' | 'UNAVAILABLE_REF' | 'UNDEFINED_MAPPING_DEFINITION' | 'UNDELETE_FAILED' | 'UNKNOWN_EXCEPTION' | 'UNKNOWN_TOKEN_ERROR' | 'UNPROCESSABLE_REQUEST' | 'UNQUALIFIED_CART' | 'UNRESOLVABLE_PAY_NOW_WEBSTORE' | 'UNSAFE_HTML_CONTENT' | 'UNSPECIFIED_EMAIL_ADDRESS' | 'UNSUPPORTED_APEX_TRIGGER_OPERATON' | 'UNSUPPORTED_MODE' | 'UNSUPPORTED_PAYMENT_GATEWAY_TYPE' | 'UNSUPPORTED_PAYMENT_REQUEST_TYPE' | 'UNSUPPORTED_SITE' | 'UNSUPPORTED_SITE_FILE_IMPORTED_EXCEPTION' | 'UNSUPPORTED_SOCIAL_PROVIDER' | 'UNVERIFIED_SENDER_ADDRESS' | 'UPDATE_GOOGLE_EMAIL_LABEL_FAILED' | 'USER_OWNS_PORTAL_ACCOUNT_EXCEPTION' | 'USER_WITHOUT_WEM_PERMISSION' | 'USER_WITH_APEX_SHARES_EXCEPTION' | 'VARIANT_NOT_FOUND' | 'VF_COMPILE_ERROR' | 'VOICE_CAPACITY_ERROR' | 'WEBLINK_SIZE_LIMIT_EXCEEDED' | 'WEBLINK_URL_INVALID' | 'WEM_SEGMENTS_CAN_NOT_HAVE_NON_ACTIVE_SEGMENT_TYPE' | 'WEM_SHIFT_SEGMENT_TIME_IS_OUTSIDE_OF_THE_SHIFT_DURATION' | 'WEM_USER_NOT_ORG_ADMIN' | 'WORKSPACE_NOT_FOUND' | 'WRONG_CONTROLLER_TYPE' | 'XCLEAN_DJ_MATCH_IGNORABLE_ERROR' | 'XCLEAN_DJ_MATCH_INTERNAL_DJ_ERROR' | 'XCLEAN_DJ_MATCH_NON_RETRIABLE_ERROR' | 'XCLEAN_DJ_MATCH_RETRIABLE_ERROR' | 'XCLEAN_DJ_MATCH_UNKNOWN_ERROR' | 'XCLEAN_UNEXPECTED_ERROR';
export type ExtendedErrorCode = 'ACTIONCALL_DUPLICATE_INPUT_PARAM' | 'ACTIONCALL_DUPLICATE_OUTPUT_PARAM' | 'ACTIONCALL_INPUT_VALIDATION_FAILED' | 'ACTIONCALL_INVALID_INPUT_PARAM_NAME' | 'ACTIONCALL_MISSING_NAME' | 'ACTIONCALL_MISSING_REQUIRED_PARAM' | 'ACTIONCALL_MISSING_REQUIRED_TYPE' | 'ACTIONCALL_NOT_FOUND_WITH_NAME_AND_TYPE' | 'ACTIONCALL_NOT_SUPPORTED_FOR_PROCESSTYPE' | 'ACTIONCALL_NOT_SUPPORTED_FOR_TRIGGERTYPE' | 'ACTIONCALL_TRANSACTION_MODEL_NOT_ALLOWED' | 'ACTIONCALL_TRANSACTION_MODEL_NOT_SUPPORTED' | 'ACTIONCALL_TRIGGERING_RECORD_MISMATCHED_OBJECTTYPE' | 'ACTION_CALL_INPUT_SETUPREFTYPE_REQUIRES_SETUPREFVALUE' | 'ACTION_CALL_INVALID_CONFIGURATION' | 'ACTION_CALL_INVALID_INPUT_PARAM' | 'ACTION_CALL_INVALID_OUTPUT_PARAM' | 'ACTION_INPUT_PARAMETER_REQUIRES_ID_TYPE_FOR_SETUP_REFERENCE' | 'ACTION_INPUT_PARAMETER_TYPE_AND_SETUP_REFERENCE_TYPE_DO_NOT_MATCH' | 'ACTION_TYPE_REQUIRED_FOR_STEP' | 'ADDING_ATTACHMENT_QUESTIONS_ADDITION_TO_EXISTING_SURVEY' | 'APEXCALLOUT_INPUT_DUPLICATE' | 'APEXCALLOUT_INPUT_INCOMPATIBLE_DATATYPE' | 'APEXCALLOUT_INVALID' | 'APEXCALLOUT_MISSING_CLASSNAME' | 'APEXCALLOUT_NOT_FOUND' | 'APEXCALLOUT_OUTPUT_INCOMPATIBLE_DATATYPE' | 'APEXCALLOUT_OUTPUT_INVALID' | 'APEXCALLOUT_REQUIRED_INPUT_MISSING' | 'APEXCLASS_MISSING_INTERFACE' | 'APEX_CLASS_VARIABLE_NOT_FOUND' | 'ASSIGNEE_AUTOPROC' | 'ASSIGNEE_USER_USERNAME' | 'ASSIGNMENTITEM_ELEMENT_MISSING_DATATYPE' | 'ASSIGNMENTITEM_ELEMENT_NOT_SUPPORTED' | 'ASSIGNMENTITEM_FIELD_INVALID_DATATYPE' | 'ASSIGNMENTITEM_FIELD_INVALID_DATATYPE_WITH_ELEMENT' | 'ASSIGNMENTITEM_INCOMPATIBLE_DATATYPES' | 'ASSIGNMENTITEM_INVALID_ASSIGNTOREFERENCE' | 'ASSIGNMENTITEM_INVALID_COLLECTION' | 'ASSIGNMENTITEM_INVALID_DATATYPE_IN_ELEMENT' | 'ASSIGNMENTITEM_INVALID_ELEMENTREFERENCE' | 'ASSIGNMENTITEM_INVALID_MERGE_FIELD' | 'ASSIGNMENTITEM_INVALID_OPERATOR' | 'ASSIGNMENTITEM_INVALID_REFERENCE' | 'ASSIGNMENTITEM_INVALID_VALUE' | 'ASSIGNMENTITEM_LEFT_DATATYPE_INVALID_FOR_OPERATOR' | 'ASSIGNMENTITEM_MODIFIES_NONVARIABLE' | 'ASSIGNMENTITEM_NONEXISTENT_REFERENCE' | 'ASSIGNMENTITEM_REQUIRED' | 'ASSIGNMENTITEM_RIGHT_DATATYPE_INVALID_FOR_OPERATOR' | 'AUTOLAUNCHED_CHOICELOOKUP_NOT_SUPPORTED' | 'AUTOLAUNCHED_CHOICE_NOT_SUPPORTED' | 'AUTOLAUNCHED_SCREEN_NOT_SUPPORTED' | 'AUTOLAUNCHED_STEP_NOT_SUPPORTED' | 'AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE' | 'AUTOLAUNCHED_WAIT_NOT_SUPPORTED' | 'BEFORE_SAVE_FLOW_RECORD_UPDATE_CANNOT_HAVE_FAULT_CONNECTOR' | 'BEFORE_SAVE_FLOW_RECORD_UPDATE_INVALID_REFERENCE' | 'BEFORE_SAVE_FLOW_RECORD_UPDATE_RELATED_RECORD_REQUIRES_INPUTASSIGNMENTS' | 'BEFORE_SAVE_FLOW_RECORD_UPDATE_REQUIRES_INPUTASSIGNMENTS' | 'BOTH_START_NODE_AND_REFERENCE_FOUND' | 'CHOICEFIELD_DEFAULT_CHOICE_NOT_FOUND' | 'CHOICEFIELD_MISSING_CHOICE' | 'CHOICELOOKUP_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD' | 'CHOICE_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD' | 'CHOICE_LOOKUP_COLLECTION_REFERENCE_NULL' | 'CHOICE_LOOKUP_INVALID_COLLECTION_REFERENCE' | 'CHOICE_NOT_SUPPORTED_FOR_SCREENFIELDTYPE' | 'CHOICE_USED_MULTIPLE_TIMES_IN_SAME_FIELD' | 'COLLECTION_PROCESSOR_DUPLICATE_MAPITEM' | 'COLLECTION_PROCESSOR_INVALID_COLLECTION_REFERENCE' | 'COLLECTION_PROCESSOR_INVALID_CONFIGURATION' | 'COLLECTION_PROCESSOR_INVALID_OUTPUTSOBJECTTYPE' | 'COLLECTION_PROCESSOR_MAX_SORT_FIELDS_LIMIT_EXCEEDED' | 'COLLECTION_PROCESSOR_MISMATCHED_OBJECTTYPE' | 'COLLECTION_PROCESSOR_MISSING_MAP' | 'COLLECTION_PROCESSOR_MISSING_OUTPUTSOBJECTTYPE' | 'COLLECTION_PROCESSOR_MISSING_PARAMETER' | 'COLLECTION_PROCESSOR_MISSING_SORT' | 'COLLECTION_PROCESSOR_NOT_SUPPORTED_FOR_API_VERSION' | 'COLLECTION_PROCESSOR_REQUIRES_PERM' | 'COLLECTION_PROCESSOR_SORT_FIELD_INVALID_FOR_OBJECT' | 'COLLECTION_PROCESSOR_TYPE_NOT_SUPPORTED' | 'COLLECTION_PROCESSOR_VARIABLE_NULL' | 'CONDITIONAL_SCREENFIELD_VISIBILITY_NOT_SUPPORTED_FOR_ENVIRONMENT' | 'CONDITION_BUILDER_MISSING_FLOW_VARIABLE' | 'CONDITION_BUILDER_MISSING_REQUIRED_PERMISSIONS' | 'CONDITION_BUILDER_UNSUPPORTED_FLOW_VARIABLE' | 'CONDITION_INVALID_LEFTOPERAND' | 'CONDITION_LOGIC_EXCEEDS_LIMIT' | 'CONDITION_LOGIC_INVALID' | 'CONDITION_LOGIC_MISSING' | 'CONDITION_MISSING_DATATYPE' | 'CONDITION_MISSING_OPERATOR' | 'CONDITION_OPERAND_DATATYPES_INCOMPATIBLE' | 'CONDITION_OPERAND_INCOMPATIBLE_WITH_ELEMENT' | 'CONDITION_OPERATOR_INCOMPATIBLE' | 'CONDITION_REFERENCED_ELEMENT_NOT_FOUND' | 'CONDITION_RIGHTOPERAND_NULL' | 'CONDITION_TRAVERSAL_TOO_DEEP' | 'CONNECTOR_MISSING_TARGET' | 'CONSTANT_INCLUDES_REFERENCES' | 'CONTENT_KEY_OR_ID_NOT_FOUND' | 'CUSTOMEVENTS_NOT_ENABLED' | 'CUSTOMEVENT_MISSING_PROCESSMETADATAVALUES' | 'CUSTOMEVENT_OBJECTTYPE_NOT_FOUND' | 'CUSTOMEVENT_OBJECTTYPE_NOT_SUPPORTED' | 'CUSTOMEVENT_PROCESSMETADATAVALUES_MISSING_NAME' | 'CUSTOMEVENT_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME' | 'DATATYPE_INVALID' | 'DATATYPE_MISSING' | 'DATA_TYPE_NOT_SUPPORTED_FOR_PROCESSTYPE' | 'DECISION_DEFAULT_CONNECTOR_MISSING_LABEL' | 'DECISION_MISSING_OUTCOME' | 'DETERMINATION_FLOW_ACTION_TYPE_REQUIRED' | 'DYNAMIC_TYPE_MAPPING_MISSING' | 'EITHER_CONDITIONS_OR_ACTION_NOT_SUPPORTED' | 'ELEMENT_CONNECTS_TO_SELF' | 'ELEMENT_COORDINATES_INVALID' | 'ELEMENT_INVALID_CONNECTOR' | 'ELEMENT_INVALID_REFERENCE' | 'ELEMENT_INVALID_REFERENCE_FOR_CONFLICTING_FIELD_VALUE' | 'ELEMENT_MISSING_CONNECTOR' | 'ELEMENT_MISSING_LABEL' | 'ELEMENT_MISSING_NAME' | 'ELEMENT_MISSING_REFERENCE' | 'ELEMENT_MORE_THAN_ONE_FIELD' | 'ELEMENT_NAME_INVALID' | 'ELEMENT_NEVER_USED' | 'ELEMENT_NOT_SUPPORTED_IN_SUBFLOW_FOR_TRIGGER_TYPE' | 'ELEMENT_SCALE_SMALLER_THAN_DEFAULTVALUE' | 'ELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_ELEMENTTYPE' | 'ELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_PROCESSTYPE' | 'ELEMENT_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT' | 'ENTRY_CONDITION_CONFLICTING_FILTERS' | 'ENVIRONMENTS_VALUE_CHANGED' | 'ENVIRONMENT_PERMISSION_REQUIRED' | 'ERROR_DETAIL_EXT_TEST_ERROR' | 'ERROR_DETAIL_EXT_TEST_INVALID_PROP_ERROR' | 'EXTERNAL_OBJECTS_NOT_SUPPORTED' | 'EXTERNAL_OBJECT_FIELDS_NOT_SUPPORTED' | 'EX_AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE' | 'FEATURE_DISABLED' | 'FIELDASSIGNMENT_FIELD_INCOMPATIBLE_DATATYPE' | 'FIELDASSIGNMENT_INVALID_DATATYPE' | 'FIELDASSIGNMENT_INVALID_ELEMENT' | 'FIELDASSIGNMENT_INVALID_REFERENCE' | 'FIELDASSIGNMENT_MULTIPLE_REFERENCES_SAME_FIELD' | 'FIELDASSIGNMENT_PICKLISTFIELD_INCOMPATIBLE_DATATYPE' | 'FIELDASSIGNMENT_REFERENCED_ELEMENT_MISSING_DATATYPE' | 'FIELDSERVICE_UNSUPPORTED_FIELD_TYPE' | 'FIELD_INVALID_VALUE' | 'FIELD_NOT_FOUND' | 'FIELD_RELATIONSHIP_NOT_SUPPORTED' | 'FIELD_TYPE_NOT_SUPPORTED_AS_CHILD_OF_SCREENFIELD_REGION_OR_REGIONCONTAINER' | 'FIELD_TYPE_NOT_SUPPORTED_AS_PARENT' | 'FIELD_VALUE_REQUIRES_PERM' | 'FLEXIPAGE_COMPONENT_ATTRIBUTE_EXPRESSION_EXCEPTION' | 'FLEXIPAGE_COMPONENT_ATTRIBUTE_GENERIC_EXCEPTION' | 'FLEXIPAGE_COMPONENT_ATTRIBUTE_MISSING_REQUIRED' | 'FLEXIPAGE_COMPONENT_ATTRIBUTE_TOO_LONG' | 'FLEXIPAGE_COMPONENT_CUSTOM_VALIDATION_EXCEPTION' | 'FLEXIPAGE_COMPONENT_DESIGN_EXCEPTION' | 'FLEXIPAGE_COMPONENT_EVENT_DUPLICATE_TARGET_EXCEPTION' | 'FLEXIPAGE_COMPONENT_EVENT_EMPTY_TARGET_MAPPING_EXCEPTION' | 'FLEXIPAGE_COMPONENT_EVENT_INVALID_FORMFACTOR_EXCEPTION' | 'FLEXIPAGE_COMPONENT_EVENT_INVALID_SERVICE_EXCEPTION' | 'FLEXIPAGE_COMPONENT_EVENT_SOURCE_EXCEPTION' | 'FLEXIPAGE_COMPONENT_MAX_LIMIT_EXCEPTION' | 'FLEXIPAGE_COMPONENT_RULE_VALIDATION_EXCEPTION' | 'FLEXIPAGE_DUPLICATE_PROPERTY_COMPONENT_EXCEPTION' | 'FLEXIPAGE_EVENT_ATTRIBUTE_GENERIC_EXCEPTION' | 'FLEXIPAGE_INVALID_ITEM_INSTANCE_TYPE_EXCEPTION' | 'FLEXIPAGE_INVALID_PROPERTY_TYPE_COMPONENT_EXCEPTION' | 'FLEXIPAGE_INVALID_PROPERTY_TYPE_EVENT_TARGET_EXCEPTION' | 'FLEXIPAGE_ITEM_INSTANCE_CUSTOM_VALIDATION_EXCEPTION' | 'FLEXIPAGE_MAX_INTERACTIONS_EXCEPTION' | 'FLEXIPAGE_PICKLIST_INVALID_VALUE_EXCEPTION' | 'FLEXIPAGE_RENAMED_COMPONENT_VALIDATION_EXCEPTION' | 'FLEXIPAGE_TEMPLATE_INVALID_SWITCH' | 'FLOW_ALREADY_OVERRIDDEN' | 'FLOW_CAPABILITY_INPUT_DATA_TYPE_INVALID' | 'FLOW_CAPABILITY_INPUT_INVALID' | 'FLOW_CAPABILITY_INPUT_MISSING' | 'FLOW_CAPABILITY_INVALID' | 'FLOW_CAPABILITY_MISSING' | 'FLOW_COMPLEX_VALUE_COLLECTION_TYPE_EXPECTED' | 'FLOW_COMPLEX_VALUE_INVALID_JSON' | 'FLOW_COMPLEX_VALUE_INVALID_MERGE_FIELD' | 'FLOW_COMPLEX_VALUE_NOT_SUPPORTED' | 'FLOW_COMPLEX_VALUE_SCALAR_TYPE_EXPECTED' | 'FLOW_CONTEXT_RECORD_ASSIGNMENT_VARIABLE_INVALID' | 'FLOW_CUSTOM_ERROR_COMPOUND_FIELD_NOT_SUPPORTED' | 'FLOW_CUSTOM_ERROR_EMPTY_MESSAGES_LIST' | 'FLOW_CUSTOM_ERROR_INVALID_OR_INCOMPLETE_FIELD' | 'FLOW_CUSTOM_ERROR_MULTIPLE_ERRORS_ON_FIELD' | 'FLOW_CUSTOM_ERROR_MULTIPLE_PAGE_ERRORS_EXCEPTION' | 'FLOW_CUSTOM_ERROR_NO_FIELD_SELECTION_FOR_FIELD_ERROR' | 'FLOW_ELEMENT_SCALE_LESS_THAN_ZERO' | 'FLOW_FORMULA_FIELD_MISSING' | 'FLOW_FORMULA_NOT_SUPPORTED' | 'FLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_CALLOUTS' | 'FLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_OBJECTS' | 'FLOW_INCLUDES_STEP' | 'FLOW_INPUTPARAM_MISMATCHED_APEX_CLASS' | 'FLOW_INTERVIEW_BULK_EXECUTION' | 'FLOW_INTERVIEW_HANDLED_ERROR' | 'FLOW_INTERVIEW_INPUT_VALIDATION' | 'FLOW_INTERVIEW_INTERACTION_NOT_FOUND' | 'FLOW_INTERVIEW_INVALID_CHOICE_USER_INPUT' | 'FLOW_INTERVIEW_INVALID_FIELD_VALUE' | 'FLOW_INTERVIEW_INVALID_START_REQUEST' | 'FLOW_INTERVIEW_LIMIT_EXCEEDED' | 'FLOW_INTERVIEW_MISSING_CHOICE_FOR_REQUIRED_CHOICE_FIELD' | 'FLOW_INTERVIEW_MISSING_VALUE_FOR_REQUIRED_INPUT_FIELD' | 'FLOW_INTERVIEW_NAVIGATE' | 'FLOW_INTERVIEW_RANGE_VALIDATION' | 'FLOW_INTERVIEW_REGEX_VALIDATION' | 'FLOW_INTERVIEW_RESUME_INTERVIEW' | 'FLOW_INTERVIEW_SAVE_RESULT' | 'FLOW_INTERVIEW_SET_CHOICE_SELECTED' | 'FLOW_INTERVIEW_START_INTERVIEW' | 'FLOW_INTERVIEW_TYPE_CONVERSION' | 'FLOW_INVALID_NAME' | 'FLOW_NAME_USED_IN_OTHER_CLIENT' | 'FLOW_OVERRIDABLE_CANNOT_BE_OVERRIDE' | 'FLOW_OVERRIDABLE_CANNOT_BE_TEMPLATE' | 'FLOW_OVERRIDDEN_FLOW_INVALID_REFERENCE' | 'FLOW_OVERRIDE_EXTRA_VARIABLE' | 'FLOW_OVERRIDE_INCOMPATIBLE_PROCESS_TYPE' | 'FLOW_OVERRIDE_INCOMPATIBLE_TYPE' | 'FLOW_OVERRIDE_INCOMPATIBLE_VARIABLE' | 'FLOW_RECORD_PRIOR_AUTOLAUNCH_UPDATE_ONLY' | 'FLOW_RECORD_PRIOR_INVALID_IN_RECORD_CREATE' | 'FLOW_RECORD_PRIOR_INVALID_IN_RECORD_DELETE' | 'FLOW_RECORD_PRIOR_INVALID_IN_RECORD_UPDATE' | 'FLOW_RECORD_PRIOR_READ_ONLY' | 'FLOW_REFERENCES_APEX_CLASS_NOT_IN_SAME_PACKAGE' | 'FLOW_RESOURCE_NOT_SUPPORTED_FOR_ENVIRONMENT' | 'FLOW_RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED_FOR_RECORD_PRIOR' | 'FLOW_SCHEDULED_PATH_ALLOWED_ONE_ASYNCAFTERCOMMIT_PATH' | 'FLOW_SCHEDULED_PATH_ASYNCAFTERCOMMIT_REQUIRES_RECORD_CHANGED_OR_ISCHANGED' | 'FLOW_SCHEDULED_PATH_CANNOT_USE_IS_CHANGED' | 'FLOW_SCHEDULED_PATH_INCOMPATIBLE_TIME_SOURCE' | 'FLOW_SCHEDULED_PATH_INCOMPATIBLE_WHEN_DECISION_REQUIRES_RECORD_CHANGED' | 'FLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_FLOW_TRIGGER_TYPE' | 'FLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_RECORD_PRIOR' | 'FLOW_SCHEDULED_PATH_INVALID_BATCH_SIZE' | 'FLOW_SCHEDULED_PATH_INVALID_OFFSET' | 'FLOW_SCHEDULED_PATH_REQUIRED_FIELDS_MISSING' | 'FLOW_SCHEDULED_PATH_REQUIRES_DEFAULT_WORKFLOW_USER' | 'FLOW_SCHEDULED_PATH_REQUIRES_RECORD_CHANGED_TO_MEET_CRITERIA' | 'FLOW_SCHEDULE_INFORMATION_INCOMPLETE' | 'FLOW_SOBJECT_VARIABLE_NOT_PERSISTED' | 'FLOW_SOURCE_TEMPLATE_INVALID_REFERENCE' | 'FLOW_STAGE_INCLUDES_REFERENCES' | 'FLOW_STAGE_ORDER_DUPLICATE' | 'FLOW_STAGE_ORDER_OUT_OF_RANGE' | 'FLOW_SYSTEM_VARIABLE_NOT_SUPPORTED_FOR_TRIGGERTYPE' | 'FLOW_TEST_API_NAME_DUPLICATED' | 'FLOW_TEST_ASSERTION_MISSING' | 'FLOW_TEST_ASSERTION_NOT_SUPPORTED' | 'FLOW_TEST_CONDITION_INCOMPATIBLE' | 'FLOW_TEST_CONDITION_INVALID_DATATYPE_MAPPING' | 'FLOW_TEST_CONDITION_LIMIT' | 'FLOW_TEST_CONDITION_NOT_SUPPORTED' | 'FLOW_TEST_DATATYPE_INVALID' | 'FLOW_TEST_FLOW_INVALID' | 'FLOW_TEST_IMMEDIATE_PATH_MISSING' | 'FLOW_TEST_MERGE_FIELD_INVALID' | 'FLOW_TEST_MERGE_FIELD_NOT_SUPPORTED' | 'FLOW_TEST_OPERATOR_INVALID' | 'FLOW_TEST_PARAMETER_DUPLICATED' | 'FLOW_TEST_PARAMETER_INCOMPATIBLE' | 'FLOW_TEST_PARAMETER_INVALID' | 'FLOW_TEST_PARAMETER_LEFTVALUEREFERENCE_INVALID' | 'FLOW_TEST_PARAMETER_MISSING' | 'FLOW_TEST_PARAMETER_NOT_SUPPORTED' | 'FLOW_TEST_PARAMETER_TYPE_INVALID' | 'FLOW_TEST_PARAMETER_VALUE_INVALID' | 'FLOW_TEST_PARAMETER_VALUE_MISSING' | 'FLOW_TEST_PARAMS_REQUIRED' | 'FLOW_TEST_POINTS_DUPLICATED' | 'FLOW_TEST_POINT_MISSING' | 'FLOW_TEST_POINT_NOT_SUPPORTED' | 'FLOW_TEST_PROCESSTYPE_INVALID' | 'FLOW_TEST_RIGHTVALUE_INVALID' | 'FLOW_TRANSFORM_APEX_CLASS_INCOMPATIBLE' | 'FLOW_TRANSFORM_API_VERSION_NOT_SUPPORTED' | 'FLOW_TRANSFORM_ELEMENT_REFERENCE_INVALID' | 'FLOW_TRANSFORM_ELEMENT_REFERENCE_TYPE_INCOMPATIBLE' | 'FLOW_TRANSFORM_FMLA_COLL_MULT_RSRC' | 'FLOW_TRANSFORM_MAP_COLL_MISSING' | 'FLOW_TRANSFORM_MAP_COLL_MULT_SOURCE' | 'FLOW_TRANSFORM_MAP_COLL_NUM_OF_REF' | 'FLOW_TRANSFORM_MAP_COLL_RELA_RECORDS' | 'FLOW_TRANSFORM_MAP_COL_PRIMITIVE_INCOMPA' | 'FLOW_TRANSFORM_MAP_RSRC_TYPE_NOT_SUPPORTED' | 'FLOW_TRANSFORM_OUTPUT_FIELD_API_NAME_INVALID' | 'FLOW_TRANSFORM_TYPE_NOT_SUPPORTED' | 'FLOW_TRANSFORM_VALUES_MISSING' | 'FLOW_TRANSFORM_VALUE_INVALID' | 'FLOW_TRIGGER_DERIVED_FIELD_NOT_SUPPORTED' | 'FLOW_TRIGGER_ORDER_OUT_OF_BOUNDS' | 'FLOW_TRIGGER_TYPE_INCOMPATIBLE_WITH_RECORD_TRIGGER_TYPE' | 'FORMULA_CMT_LIMIT_EXCEEDED' | 'FORMULA_EXPRESSION_INVALID' | 'FORM_ALREADY_IN_USE_BY_DRAFT_VERSION' | 'FORM_ALREADY_IN_USE_BY_FLOW' | 'FTEST_EXTENSION_CODE_FOR_TEST' | 'GLOBAL_VARIABLE_NOT_SUPPORTED_FOR_PROCESSTYPE' | 'HTTP_METHOD_NOT_SUPPORTED' | 'INCONSISTENT_ACTION_VERSIONS' | 'INCONSISTENT_DYNAMIC_TYPE_MAPPING' | 'INCONSISTENT_VALUE_FOR_DYNAMIC_VALUE_FIELD' | 'INDIVIDUAL_CONTACT_POINT_NOT_FOUND' | 'INDIVIDUAL_NOT_FOUND' | 'INPUTPARAM_CONFIGURATION_NOT_FOUND' | 'INPUTPARAM_INCOMPATIBLE_CONFIGURATION_ONLY' | 'INPUTPARAM_INCOMPATIBLE_DATATYPE' | 'INPUTPARAM_INCOMPATIBLE_WITH_COLLECTION_VARIABLE' | 'INPUTPARAM_INCOMPATIBLE_WITH_NONCOLLECTION_VARIABLE' | 'INPUTPARAM_MISMATCHED_OBJECTTYPE' | 'INPUTVARIABLE_COLLECTION_NOT_SUPPORTED_FOR_DYNAMIC_ACTION' | 'INPUTVARIABLE_COLLECTION_NOT_SUPPORTED_FOR_ENVIRONMENT' | 'INPUTVARIABLE_DATATYPE_NOT_SUPPORTED_FOR_DYNAMIC_ACTION' | 'INPUTVARIABLE_DATATYPE_NOT_SUPPORTED_FOR_ENVIRONMENT' | 'INVALID_ACTION_TYPE_FOR_STEP' | 'INVALID_ASSIGNEE' | 'INVALID_CONTENT_TYPE' | 'INVALID_EMAIL_ADDRESS' | 'INVALID_ENVIRONMENTS_VALUE' | 'INVALID_FLOW' | 'INVALID_FLOW_INTERVIEW' | 'INVALID_PROCESSTYPE_ENVIRONMENT_COMBINATION' | 'INVALID_QUERY_LOCATOR_FORMAT' | 'INVALID_REGEX_IN_SURVEY_QUESTIONS' | 'INVALID_SEGMENT_STATUS_FOR_ACTIVATION' | 'INVALID_SENDER_TYPE' | 'INVALID_SETUP_REFERENCE_TYPE' | 'INVALID_SURVEY_VARIABLE_NAME_OR_TYPE' | 'INVALID_TIME_ZONE' | 'INVOCABLE_ACTION_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT' | 'LOCATOR_LOCATION_EXCEEDS_SIZE' | 'LOOP_ASSIGNNEXTVALUETO_MISMATCHED_APEXCLASSTYPE' | 'LOOP_ASSIGNNEXTVALUETO_MISMATCHED_DATATYPE' | 'LOOP_ASSIGNNEXTVALUETO_MISMATCHED_OBJECTTYPE' | 'LOOP_ASSIGNNEXTVALUETO_MISSING' | 'LOOP_ASSIGNNEXTVALUETO_MISSING_VARIABLE' | 'LOOP_ASSIGNNEXTVALUETO_REFERENCE_NOT_FOUND' | 'LOOP_COLLECTION_ELEMENT_NOT_FOUND' | 'LOOP_COLLECTION_NOT_FOUND' | 'LOOP_COLLECTION_NOT_SUPPORTED_FOR_FIELD' | 'LOOP_MISSING_COLLECTION' | 'MAX_CHILD_TYPES' | 'MAX_EXTERNAL_REFERENCES_IN_QUERY' | 'MAX_STATEMENT_SIZE' | 'MESSAGING_API_ENTITLEMENT_REACHED' | 'MESSAGING_INACTIVE_CHANNEL' | 'MISSING_ASSIGNEE' | 'MISSING_ASSIGNEE_TYPE' | 'MISSING_EMAIL_RECIPIENTS' | 'MULTIPLE_ASSIGNEES_NOT_ALLOWED' | 'NON_EXPOSED_COMPONENT_IN_FLOW' | 'NON_GLOBAL_COMPONENT_IN_EXPORTED_FLOW' | 'NUMBER_OF_SCREENFIELD_REGIONS_EXCEEDS_LIMIT' | 'OBJECTTYPE_INVALID' | 'OBJECT_CANNOT_BE_CREATED' | 'OBJECT_CANNOT_BE_DELETED' | 'OBJECT_CANNOT_BE_QUERIED' | 'OBJECT_CANNOT_BE_UPDATED' | 'OBJECT_ENCRYPTED_FIELDS_NOT_SUPPORTED' | 'OBJECT_NOT_FOUND' | 'OBJECT_TYPE_DOES_NOT_EXIST' | 'OBJECT_TYPE_NOT_CDC_ENABLED' | 'ORCHESTRATION_REQUIRESASYNCPROCESSING_NOT_SUPPORTED' | 'ORCHESTRATION_REQUIRESASYNCPROCESSING_REQUIRED' | 'ORG_WIDE_EMAIL_INVALID' | 'ORG_WIDE_EMAIL_NOT_USED' | 'OUTPUTPARAM_ASSIGNTOREFERENCE_INVALID' | 'OUTPUTPARAM_ASSIGNTOREFERENCE_NOTFOUND' | 'OUTPUTPARAM_INCOMPATIBLE_DATATYPE' | 'OUTPUTPARAM_MISMATCHED_OBJECTTYPE' | 'OUTPUTPARAM_MISMATCHED_WITH_COLLECTION_VARIABLE' | 'OUTPUTPARAM_MISSING_ASSIGNTOREFERENCE' | 'OUTPUTPARAM_MISTMATCHED_WITH_NONCOLLECTION_VARIABLE' | 'PARAM_DATATYPE_NOT_SUPPORTED' | 'PAST_SCHEDULE_FLOW_WILL_NOT_RUN' | 'PLATFORM_EVENT_TRIGGERED_FLOW_REQUIRES_DEFAULT_WORKFLOW_USER' | 'PRICE_ADJUSTMENT_TIER_VALIDATION_ERROR' | 'PROCESSMETADATAVALUES_NOT_SUPPORTED_FOR_PROCESSTYPE' | 'PROCESSMETADATAVALUE_NONEXISTENT_ELEMENT' | 'PROCESSTYPE_COMPONENTTYPE_NOT_SUPPORTED' | 'PROCESSTYPE_ELEMENT_CONFIG_NOT_SUPPORTED' | 'PROCESSTYPE_ELEMENT_NOT_SUPPORTED' | 'PROCESSTYPE_EVALUATIONFLOW_REQUIRED' | 'PROCESSTYPE_NOT_SUPPORTED' | 'PROCESSTYPE_SCREEN_FIELDTYPE_NOT_SUPPORTED' | 'PROCESS_TYPE_ELEMENT_ATTRIBUTE_REQUIRED' | 'PROCESS_TYPE_INCOMPATIBLE' | 'PROMPT_FLOW_CONTAINS_INVALID_VARIABLE' | 'QUERY_LOCATOR_EXPIRED' | 'QUERY_LOCATOR_NOT_FOUND' | 'RECOMMENDATION_STRATEGY_EXCEPTION' | 'RECORDFILTER_ENCRYPTED_FIELDS_NOT_SUPPORTED' | 'RECORDFILTER_GEOLOCATION_FIELDS_NOT_SUPPORTED' | 'RECORDFILTER_INVALID_DATATYPE' | 'RECORDFILTER_INVALID_ELEMENT' | 'RECORDFILTER_INVALID_OPERATOR' | 'RECORDFILTER_INVALID_REFERENCE' | 'RECORDFILTER_MISSING_DATATYPE' | 'RECORDFILTER_MULTIPLE_QUERIES_SAME_FIELD' | 'RECORDFILTER_NON_PRIMITIVE' | 'RECORDLOOKUP_IDASSIGNMENT_VARIABLE_INCOMPATIBLE_DATATYPE' | 'RECORDLOOKUP_IDASSIGNMENT_VARIABLE_NOT_FOUND' | 'RECORDUPDATE_MISSING_FILTERS' | 'RECORD_CHANGE_LISTENER_CONDITIONS_NON_RECORD_GLOBAL_VARIABLE' | 'RECORD_CHANGE_LISTENER_CONDITIONS_NOT_SUPPORTED' | 'RECORD_CHANGE_LISTENER_CONDITIONS_THRESHOLD_BREACHED' | 'RECORD_PRIOR_VALUE_REMAIN_SAME_BEFORE_TRIGGER' | 'REFERENCED_ELEMENT_NOT_FOUND' | 'REQUIRED_VARIABLE_INVALID' | 'REQUIRED_VARIABLE_MISSING' | 'RESOURCE_NOT_SUPPORTED' | 'RULE_MISSING_CONDITION' | 'RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED' | 'RUN_AS_USER_NOT_SUPPORTED' | 'RUN_AS_USER_REQUIRED_WHEN_SPECIFYING_ASSIGNEE' | 'SCHEDULE_TRIGGERED_FLOW_REQUIRES_DEFAULT_WORKFLOW_USER' | 'SCREENACTIONTYPE_NOT_SUPPORTED_IN_ORG' | 'SCREENACTION_NOT_SUPPORTED_IN_ORG' | 'SCREENACTION_TRIGGER_EVENT_SOURCE_NOT_ON_SAME_SCREEN' | 'SCREENACTION_TRIGGER_HANDLER_NOT_VALID_SCREEN_ACTION' | 'SCREENCOMPONENT_CONTAINS_VISIBILITY_RULE' | 'SCREENFIELD_API_VERSION_NOT_SUPPORTED' | 'SCREENFIELD_BOOLEAN_ISREQUIRED_IS_FALSE' | 'SCREENFIELD_CANNOT_HAVE_BOTH_DEFAULTVALUE_AND_DEFAULTSELECTEDCHOICEREFERENCE' | 'SCREENFIELD_DEFAULTVALUE_NOT_SUPPORTED' | 'SCREENFIELD_EXTENSION_DUPLICATE_INPUT_PARAM' | 'SCREENFIELD_EXTENSION_DUPLICATE_OUTPUT_PARAM' | 'SCREENFIELD_EXTENSION_IMPLEMENTATION_INVALID' | 'SCREENFIELD_EXTENSION_INPUT_ATTRIBUTE_INVALID' | 'SCREENFIELD_EXTENSION_NAME_INVALID' | 'SCREENFIELD_EXTENSION_NAME_MISSING' | 'SCREENFIELD_EXTENSION_NAME_NOT_SUPPORTED' | 'SCREENFIELD_EXTENSION_OUTPUT_ATTRIBUTE_INVALID' | 'SCREENFIELD_EXTENSION_REQUIRED_INPUT_MISSING' | 'SCREENFIELD_INPUTS_NOT_SUPPORTED' | 'SCREENFIELD_INPUTS_ON_NEXT_NAV_TO_ASSOC_SCRN_NOT_SUPPORTED' | 'SCREENFIELD_INVALID_DATATYPE' | 'SCREENFIELD_MULTISELECTCHOICE_SEMICOLON_NOT_SUPPORTED' | 'SCREENFIELD_OBJECTFIELDREFERENCE_INVALID_FORMAT' | 'SCREENFIELD_OBJECTPROVIDED_CANNOT_HAVE_DEFAULTVALUE' | 'SCREENFIELD_OBJECTPROVIDED_CANNOT_HAVE_HELPTEXT' | 'SCREENFIELD_OBJECTPROVIDED_INVALID_DATATYPE' | 'SCREENFIELD_OBJECTPROVIDED_ISREQUIRED_NOT_SUPPORTED' | 'SCREENFIELD_OBJECTPROVIDED_LIGHTNING_RUNTIME_DISABLED' | 'SCREENFIELD_OBJECTPROVIDED_MISSING_OBJECTFIELDREFERENCE' | 'SCREENFIELD_OUTPUTS_NOT_SUPPORTED' | 'SCREENFIELD_REGION_CONTAINS_DUPLICATE_INPUT_PARAMETER_VALUES' | 'SCREENFIELD_REGION_INPUT_PARAMETER_NOT_SUPPORTED' | 'SCREENFIELD_REGION_MISSING_REQUIRED_PERMISSIONS' | 'SCREENFIELD_REGION_NOT_IN_CONTAINER' | 'SCREENFIELD_REGION_REQUIRED_INPUT_PARAMETER_MISSING' | 'SCREENFIELD_REGION_WIDTH_SUM_EXCEEDS_LIMIT' | 'SCREENFIELD_REGION_WIDTH_VALUE_INVALID' | 'SCREENFIELD_TYPE_NOT_SUPPORTED' | 'SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_API_VERSION' | 'SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT' | 'SCREENFIELD_USERINPUT_NOT_SUPPORTED_FOR_CHOICETYPE' | 'SCREENFIELD_VALIDATIONRULE_NOT_SUPPORTED' | 'SCREENFIELD_VALIDATION_RULES_NOT_SUPPORTED_FOR_ENVIRONMENT' | 'SCREENFIELD_VALIDATION_RULES_NOT_SUPPORTED_FOR_EXTENSIONS_WITHOUT_OUTPUTS' | 'SCREENFOOTER_MERGEFIELD_NOT_SUPPORTED' | 'SCREENRULE_ACTION_INVALID_ATTRIBUTE' | 'SCREENRULE_ACTION_INVALID_ATTRIBUTE_FOR_API_VERSION' | 'SCREENRULE_ACTION_INVALID_VALUE' | 'SCREENRULE_ACTION_MISSING_ATTRIBUTE' | 'SCREENRULE_ACTION_MISSING_FIELDREFERENCE' | 'SCREENRULE_ACTION_MISSING_VALUE' | 'SCREENRULE_ATTRIBUTE_NOT_SUPPORTED_FOR_SCREENFIELD' | 'SCREENRULE_FIELD_NOT_FOUND_ON_SCREEN' | 'SCREENRULE_MISSING_ACTION' | 'SCREENRULE_NOT_SUPPORTED_IN_ORG' | 'SCREENRULE_SCREENFIELD_NOT_VISIBLE' | 'SCREENRULE_VISIBILITY_NOT_SUPPORTED_IN_ORG' | 'SCREEN_ACTION_MISSING_REQUIRED_NAME' | 'SCREEN_ACTION_MISSING_REQUIRED_TYPE' | 'SCREEN_ACTION_NOT_FOUND_WITH_NAME_AND_TYPE' | 'SCREEN_ALLOWBACK_ALLOWFINISH_BOTH_FALSE' | 'SCREEN_CONTAINS_LIGHTNING_COMPONENT' | 'SCREEN_CONTAINS_REGION_CONTAINER_COMPONENT' | 'SCREEN_FIELD_REGION_CONTAINER_TYPE_INVALID_VALUE' | 'SCREEN_FIELD_REGION_CONTAINER_TYPE_MISSING' | 'SCREEN_FIELD_SECTION_HEADER_INVALID_VALUE' | 'SCREEN_FIELD_SECTION_HEADER_MISSING' | 'SCREEN_MISSING_FOOTER_AND_LIGHTNING_COMPONENT' | 'SCREEN_MISSING_LABEL' | 'SCREEN_MULTISELECTFIELD_DOESNT_SUPPORT_CHOICE_WITH_USERINPUT' | 'SCREEN_PAUSEDTEXT_NOT_SHOWN_WHEN_ALLOWPAUSE_IS_FALSE' | 'SETTING_FIELD_MAKES_OTHER_FIELD_REQUIRED' | 'SETTING_FIELD_MAKES_OTHER_FIELD_UNSUPPORTED' | 'SETTING_FIELD_VALUE_MAKES_OTHER_FIELD_UNSUPPORTED' | 'SETTING_FIELD_VALUE_MAKES_OTHER_FIELD_VALUE_UNSUPPORTED' | 'SETUP_REFERENCE_ALLOWED_ONLY_IN_ACTION_INPUT' | 'SETUP_REFERENCE_TYPE_NOT_PACKAGEABLE' | 'SETUP_REFERENCE_VALUE_REQUIRES_DEVELOPER_NAMES' | 'SLACK_API_EXCEPTION_EXTENSION' | 'SOBJECT_ELEMENT_INCOMPATIBLE_DATATYPE' | 'SOBJECT_ELEMENT_MISMATCHED_OBJECTTYPE' | 'SORT_ENCRYPTED_FIELDS_NOT_SUPPORTED' | 'SORT_FIELD_MISSING' | 'SORT_FIELD_NOT_SUPPORTED' | 'SORT_GEOLOCATION_FIELDS_NOT_SUPPORTED' | 'SORT_LIMIT_INVALID' | 'SORT_ORDER_MISSING' | 'SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_REQUIRED' | 'SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_VALUE_REQUIRED' | 'STAGE_NAME_NOT_FULLY_QUALIFIED' | 'START_ELEMENT_MISSING' | 'SUBFLOW_DESKTOP_DESIGNER_FLOWS_NOT_SUPPORTED' | 'SUBFLOW_DIFFERENT_RUNMODE' | 'SUBFLOW_INPUT_MISSING_NAME' | 'SUBFLOW_INPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE' | 'SUBFLOW_INPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE' | 'SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW' | 'SUBFLOW_INPUT_VARIABLE_NO_INPUT_ACCESS' | 'SUBFLOW_INVALID_NAME' | 'SUBFLOW_INVALID_REFERENCE' | 'SUBFLOW_MASTER_FLOW_TYPE_NOT_AUTOLAUNCHED' | 'SUBFLOW_MISSING_NAME' | 'SUBFLOW_NO_ACTIVE_VERSION' | 'SUBFLOW_OUTPUT_INCOMPATIBLE_DATATYPES' | 'SUBFLOW_OUTPUT_MISMATCHED_APEX_CLASS' | 'SUBFLOW_OUTPUT_MISMATCHED_COLLECTIONTYPES' | 'SUBFLOW_OUTPUT_MISMATCHED_OBJECTS' | 'SUBFLOW_OUTPUT_MISSING_ASSIGNTOREFERENCE' | 'SUBFLOW_OUTPUT_MISSING_NAME' | 'SUBFLOW_OUTPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE' | 'SUBFLOW_OUTPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE' | 'SUBFLOW_OUTPUT_TARGET_DOES_NOT_EXIST_IN_MASTER_FLOW' | 'SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW' | 'SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW' | 'SUBFLOW_OUTPUT_VARIABLE_NO_OUTPUT_ACCESS' | 'SUBFLOW_PROCESSTYPE_NOT_SUPPORTED' | 'SUBFLOW_PROCESS_TYPE_INCOMPATIBLE' | 'SUBFLOW_REFERENCES_MASTERFLOW' | 'SURVEY_ADVANCED_CONDITION_LOGIC_NOT_SUPPORTED' | 'SURVEY_CHOICE_NOT_REFERENCED_BY_A_QUESTION' | 'SURVEY_CHOICE_REFERENCED_BY_MULTIPLE_QUESTIONS' | 'SURVEY_ELEMENT_NEVER_REACHED' | 'SURVEY_ENRICH_INVALID_CONFIGURATION' | 'SURVEY_INACTIVE_SUBFLOWS' | 'SURVEY_INVALID_ATTACHMENT_QUESTION_CONFIGURATION' | 'SURVEY_INVALID_CMT_CONFIGURED' | 'SURVEY_INVALID_CUSTOM_THANK_YOU_CONFIGURATION' | 'SURVEY_INVALID_LINK_TARGET_IN_QUESTION_LABEL' | 'SURVEY_INVALID_MATRIX_QUESTION_CONFIGURATION' | 'SURVEY_INVALID_MERGE_FIELD_CONFIGURATION' | 'SURVEY_INVALID_OUTPUT_VARIABLE' | 'SURVEY_MISSING_QUESTION_OR_SUBFLOW' | 'SURVEY_MISSING_REQUIRED_VARIABLES' | 'SURVEY_MULTIPLE_SCREENS_CANNOT_CONNECT_TO_SAME_DECISION' | 'SURVEY_NESTED_SUBFLOWS' | 'SURVEY_NONSURVEY_SUBFLOWS' | 'SURVEY_RULE_INVALID_LEFT_OPERAND' | 'SURVEY_RULE_INVALID_RIGHT_OPERAND' | 'SURVEY_SAVE_ERROR' | 'SURVEY_SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_QUESTION' | 'SURVEY_START_ELEMENT_INVALID' | 'SURVEY_VARIABLE_ACCESS_INVALID' | 'SYSTEM_MODE_NOT_ALLOWED' | 'SYSTEM_VARIABLE_MISSING_FIELD_REFERENCE' | 'TEMPORARY_QUERY_MORE_FAILURE' | 'TRIGGERED_FLOW_REDUNDANT_QUERY' | 'TRIGGERING_RECORD_UPDATE_REQUIRES_INPUTASSIGNMENTS' | 'TRIGGER_ORDER_NOT_SUPPORTED' | 'TRIGGER_TYPE_CONTEXT_OBJECT_NOT_SUPPORTED' | 'TRIGGER_TYPE_ELEMENT_NOT_SUPPORTED' | 'TRIGGER_TYPE_INCOMPATIBLE_WITH_PROCESS_TYPE' | 'TRIGGER_TYPE_NOT_ALLOWED_FOR_SUBFLOW' | 'TYPE_MAPPING_DUPLICATED' | 'TYPE_MAPPING_NAME_MISSING' | 'TYPE_MAPPING_NOT_FOUND' | 'TYPE_MAPPING_NOT_SUPPORTED' | 'TYPE_MAPPING_NOT_SUPPORTED_FOR_API_VERSION' | 'TYPE_MAPPING_NOT_SUPPORTED_FOR_PROCESS_TYPE' | 'UNAUTHORIZED_USER_FOR_CURSOR' | 'UNEXPECTED_ERROR' | 'VALIDATION_EXCEPTION' | 'VALUE_CHAR_LIMIT_EXCEEDED' | 'VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE' | 'VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE_AND_COLLECTION' | 'VARIABLE_FIELD_REQUIRED_FOR_DATATYPE' | 'VARIABLE_NAME_IS_RESERVED_FOR_PROCESS_TYPE' | 'VARIABLE_SCALE_EXCEEDS_LIMIT' | 'VARIABLE_SCALE_NEGATIVE_INTEGER' | 'VARIABLE_SCALE_NULL' | 'VERSION_NOT_VALID' | 'VISIBILITY_RULE_EXCEEDS_CONDITION_LIMIT' | 'VISIBILITY_RULE_NOT_AVAILABLE_IN_ORG' | 'VISIBILITY_RULE_NOT_SUPPORTED_FOR_API_VERSION' | 'VISIBILITY_RULE_NOT_SUPPORTED_FOR_PROCESSTYPE' | 'VISIBILITY_RULE_NO_CONDITIONS' | 'WAITEVENT_BATCH_SIZE_NOT_SUPPORTED_FOR_EVENTTYPE' | 'WAITEVENT_DEFAULT_CONNECTOR_MISSING_LABEL' | 'WAITEVENT_DUPLICATE_INPUT_PARAM' | 'WAITEVENT_INPUT_NOT_SUPPORTED_FOR_EVENTTYPE' | 'WAITEVENT_INPUT_REQUIRES_LITERAL_VALUE' | 'WAITEVENT_INVALID_CONDITION_LOGIC' | 'WAITEVENT_INVALID_VALUE' | 'WAITEVENT_MISSING' | 'WAITEVENT_MISSING_CONNECTOR' | 'WAITEVENT_MISSING_EVENTTYPE' | 'WAITEVENT_OBJECT_NOT_SUPPORTED_FOR_EVENTTYPE' | 'WAITEVENT_OUTPUT_NOT_SUPPORTED_FOR_EVENTTYPE' | 'WAITEVENT_RELATIVEALARM_INVALID_DATETIME_FIELD' | 'WAITEVENT_RELATIVEALARM_INVALID_FIELD' | 'WAITEVENT_RELATIVEALARM_INVALID_OBJECTTYPE' | 'WAITEVENT_RELATIVEALARM_INVALID_OFFSETNUMBER' | 'WAITEVENT_RELATIVEALARM_INVALID_OFFSETUNIT' | 'WAITEVENT_REQUIRED_INPUT_MISSING' | 'WAITEVENT_RESUME_DATE_IN_PAST' | 'WAITEVENT_TYPE_INVALID_OR_NOT_SUPPORTED' | 'WORKFLOW_MISSING_PROCESSMETADATAVALUES' | 'WORKFLOW_OBJECTTYPE_NOT_FOUND' | 'WORKFLOW_OBJECTTYPE_NOT_SUPPORTED' | 'WORKFLOW_OBJECTVARIABLE_AND_OLDOBJECTVARIABLE_REFERENCE_SAME_SOBJECT_VARIABLE' | 'WORKFLOW_OBJECTVARIABLE_DOESNT_SUPPORT_INPUT' | 'WORKFLOW_OLDOBJECTVARIABLE_DOESNT_SUPPORT_INPUT' | 'WORKFLOW_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME' | 'WORKFLOW_PROCESS_METADATAVALUES_MISSING_NAME' | 'WORKFLOW_RECURSIVECOUNTVARIABLE_DOESNT_SUPPORT_INPUT' | 'WORKFLOW_RULE_NOT_DEACTIVATED' | 'WORKFLOW_TRIGGERTYPE_INVALID_VALUE';
export type ShareAccessLevel = 'Read' | 'Edit' | 'All';
export type changeEventType = 'CREATE' | 'UPDATE' | 'DELETE' | 'UNDELETE' | 'GAP_CREATE' | 'GAP_UPDATE' | 'GAP_DELETE' | 'GAP_UNDELETE';
export type fieldType = 'string' | 'picklist' | 'multipicklist' | 'combobox' | 'reference' | 'base64' | 'boolean' | 'currency' | 'textarea' | 'int' | 'double' | 'percent' | 'phone' | 'id' | 'date' | 'datetime' | 'time' | 'url' | 'email' | 'encryptedstring' | 'datacategorygroupreference' | 'location' | 'address' | 'anyType' | 'json' | 'complexvalue' | 'long' | 'floatarray';
export type soapType = 'tns_ID' | 'base64Binary' | 'boolean' | 'double' | 'int' | 'long' | 'string' | 'date' | 'dateTime' | 'time' | 'tns_location' | 'tns_address' | 'anyType' | 'tns_json' | 'urn:RelationshipReferenceTo' | 'urn:JunctionIdListNames' | 'urn:SearchLayoutFieldsDisplayed' | 'urn:SearchLayoutField' | 'urn:SearchLayoutButtonsDisplayed' | 'urn:SearchLayoutButton' | 'urn:RecordTypesSupported' | 'tns_FieldCriteria' | 'tns_FieldCriterion' | 'tns_DurableIdList' | 'tns_StringList' | 'tns_ChangeEventHeader';
export type differenceType = 'DIFFERENT' | 'NULL' | 'SAME' | 'SIMILAR';
export type Article = 'None' | 'Indefinite' | 'Definite';
export type CaseType = 'Nominative' | 'Accusative' | 'Genitive' | 'Dative' | 'Inessive' | 'Elative' | 'Illative' | 'Adessive' | 'Ablative' | 'Allative' | 'Essive' | 'Translative' | 'Partitive' | 'Objective' | 'Subjective' | 'Instrumental' | 'Prepositional' | 'Locative' | 'Vocative' | 'Sublative' | 'Superessive' | 'Delative' | 'Causalfinal' | 'Essiveformal' | 'Termanative' | 'Distributive' | 'Ergative' | 'Adverbial' | 'Abessive' | 'Comitative';
export type Gender = 'Neuter' | 'Masculine' | 'Feminine' | 'AnimateMasculine' | 'ClassI' | 'ClassIII' | 'ClassV' | 'ClassVII' | 'ClassIX' | 'ClassXI' | 'ClassXIV' | 'ClassXV' | 'ClassXVI' | 'ClassXVII' | 'ClassXVIII';
export type GrammaticalNumber = 'Singular' | 'Plural' | 'Dual';
export type Possessive = 'None' | 'First' | 'Second';
export type StartsWith = 'Consonant' | 'Vowel' | 'Special';
export type DuplicateActionType = 'Allow' | 'Block';
export type DuplicateSecurityOptionType = 'EnforceSharingRules' | 'BypassSharingRules';
export type ComponentInstancePropertyTypeEnum = 'decorator';
export type FlexipageContextTypeEnum = 'ENTITYNAME';
export type FeedLayoutFilterType = 'AllUpdates' | 'FeedItemType' | 'Custom';
export type TabOrderType = 'LeftToRight' | 'TopToBottom';
export type WebLinkWindowType = 'newWindow' | 'sidebar' | 'noSidebar' | 'replace' | 'onClickJavaScript';
export type WebLinkPosition = 'fullScreen' | 'none' | 'topLeft';
export type WebLinkType = 'url' | 'sControl' | 'javascript' | 'page' | 'flow';
export type layoutComponentType = 'ReportChart' | 'Field' | 'Separator' | 'SControl' | 'EmptySpace' | 'VisualforcePage' | 'ExpandedLookup' | 'AuraComponent' | 'Canvas' | 'CustomLink' | 'AnalyticsCloud';
export type ReportChartSize = 'SMALL' | 'MEDIUM' | 'LARGE';
export type EmailPriority = 'Highest' | 'High' | 'Normal' | 'Low' | 'Lowest';
export type SendEmailOptOutPolicy = 'SEND' | 'FILTER' | 'REJECT';
export type AttachmentRetrievalOption = 'None' | 'MetadataOnly' | 'MetadataWithBody';
export type orderByDirection = 'ascending' | 'descending';
export type orderByNullsPosition = 'first' | 'last';
export type soqlOperator = 'equals' | 'excludes' | 'greaterThan' | 'greaterThanOrEqualTo' | 'in' | 'includes' | 'lessThan' | 'lessThanOrEqualTo' | 'like' | 'notEquals' | 'notIn' | 'within' | 'notLike';
export type soqlConjunction = 'and' | 'or';
export type EmailSyncDirection = 'None' | 'Import' | 'Export' | 'Sync' | 'S2X' | 'X2S';
export type EmailSyncConflictResolution = 'SFDCWins' | 'ClientWins' | 'ServerWins';
export type EmailSyncMatchPreference = 'LastModified' | 'LastActivity' | 'Oldest';
export type EmailSyncClientFieldType = 'date' | 'datetime' | 'string' | 'int' | 'double' | 'boolean' | 'picklist' | 'reference' | 'EventSensitivityType' | 'ReminderType';
export type SchemaScope = 'Salesforce' | 'Organization';
export type SchemaType = 'All' | 'Custom';
export type EventName = 'ListViewEvent' | 'LightningURIEvent';
export type AppMenuType = 'AppSwitcher' | 'Salesforce1' | 'NetworkTabs';
export type UiType = 'Aloha' | 'Lightning';
export type listViewIsSoqlCompatible = 'TRUE' | 'FALSE' | 'ALL';
export type PerfOption = 'NONE' | 'BASIC' | 'DETAILED';
export type queryOptionsScope = 'Briefcase' | 'Mine' | 'Mru' | 'ContactList';
export type DebugLevel = 'None' | 'DebugOnly' | 'Db' | 'Profiling' | 'Callout' | 'Detail';
export type MetadataVersionCheckFact = 'DescribeLayoutVersion' | 'DescribeSObjectVersion' | 'SystemConfigurationVersion';
export type Operation = 'RetrieveTokens' | 'ErrorOnNewerVersion' | 'SkipOnSameVersion';
export type LogCategory = 'Db' | 'Workflow' | 'Validation' | 'Callout' | 'Apex_code' | 'Apex_profiling' | 'Visualforce' | 'System' | 'All';
export type LogCategoryLevel = 'None' | 'Finest' | 'Finer' | 'Fine' | 'Debug' | 'Info' | 'Warn' | 'Error';
export type OwnerChangeOptionType = 'EnforceNewOwnerHasReadAccess' | 'TransferOpenActivities' | 'TransferNotesAndAttachments' | 'TransferOthersOpenOpportunities' | 'TransferOwnedOpenOpportunities' | 'TransferOwnedClosedOpportunities' | 'TransferOwnedOpenCases' | 'TransferAllOwnedCases' | 'TransferContracts' | 'TransferOrders' | 'TransferContacts' | 'TransferArticleOwnedPublishedVersion' | 'TransferArticleOwnedArchivedVersions' | 'TransferArticleAllVersions' | 'KeepAccountTeam' | 'KeepSalesTeam' | 'KeepSalesTeamGrantCurrentOwnerReadWriteAccess';
export type RequestOrigin = 'ListViewMetadata' | 'ListViewRecords';
export type ExceptionCode = 'ADAPTER_ERROR' | 'ADAPTER_VALIDATION_EXCEPTION' | 'APEX_REST_SERVICES_DISABLED' | 'APEX_TRIGGER_COUPLING_LIMIT' | 'API_CURRENTLY_DISABLED' | 'API_DISABLED_FOR_ORG' | 'ARGUMENT_OBJECT_PARSE_ERROR' | 'ASYNC_OPERATION_LOCATOR' | 'ASYNC_QUERY_UNSUPPORTED_QUERY' | 'BAD_REQUEST' | 'BATCH_PROCESSING_HALTED' | 'BIG_OBJECT_UNSUPPORTED_OPERATION' | 'BILLING_ENTITIES_NO_ACCESS' | 'BUYER_ACCOUNT_NOT_FOUND' | 'CANNOT_DELETE_ENTITY' | 'CANNOT_DELETE_OWNER' | 'CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY' | 'CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY' | 'CATEGORY_NOT_FOUND' | 'CIRCULAR_OBJECT_GRAPH' | 'CLIENT_NOT_ACCESSIBLE_FOR_USER' | 'CLIENT_REQUIRE_UPDATE_FOR_USER' | 'CLONE_FIELD_INTEGRITY_EXCEPTION' | 'CLONE_NOT_SUPPORTED' | 'COMMERCE_ADMIN_MISCONFIGURATION' | 'CONFIG_PUBLISH_FAILED' | 'CONTENT_ALREADY_AN_ASSET_EXCEPTION' | 'CONTENT_CUSTOM_DOWNLOAD_EXCEPTION' | 'CONTENT_HUB_AUTHENTICATION_EXCEPTION' | 'CONTENT_HUB_FILE_DOWNLOAD_EXCEPTION' | 'CONTENT_HUB_FILE_HAS_NO_URL_EXCEPTION' | 'CONTENT_HUB_FILE_NOT_FOUND_EXCEPTION' | 'CONTENT_HUB_INVALID_OBJECT_TYPE_EXCEPTION' | 'CONTENT_HUB_INVALID_PAGE_NUMBER_EXCEPTION' | 'CONTENT_HUB_INVALID_PAYLOAD' | 'CONTENT_HUB_INVALID_RENDITION_PAGE_NUMBER_EXCEPTION' | 'CONTENT_HUB_ITEM_TYPE_NOT_FOUND_EXCEPTION' | 'CONTENT_HUB_OBJECT_NOT_FOUND_EXCEPTION' | 'CONTENT_HUB_OPERATION_NOT_SUPPORTED_EXCEPTION' | 'CONTENT_HUB_SECURITY_EXCEPTION' | 'CONTENT_HUB_TIMEOUT_EXCEPTION' | 'CONTENT_HUB_UNEXPECTED_EXCEPTION' | 'CONTENT_IMAGE_SCALING_INVALID_ARGUMENTS_EXCEPTION' | 'CONTENT_IMAGE_SCALING_INVALID_IMAGE_EXCEPTION' | 'CONTENT_IMAGE_SCALING_MAX_RENDITIONS_EXCEPTION' | 'CONTENT_IMAGE_SCALING_TIMEOUT_EXCEPTION' | 'CONTENT_IMAGE_SCALING_UNKNOWN_EXCEPTION' | 'CUSTOM_METADATA_LIMIT_EXCEEDED' | 'CUSTOM_SETTINGS_LIMIT_EXCEEDED' | 'DATACLOUD_API_CLIENT_EXCEPTION' | 'DATACLOUD_API_DISABLED_EXCEPTION' | 'DATACLOUD_API_INVALID_QUERY_EXCEPTION' | 'DATACLOUD_API_SERVER_BUSY_EXCEPTION' | 'DATACLOUD_API_SERVER_EXCEPTION' | 'DATACLOUD_API_TIMEOUT_EXCEPTION' | 'DATACLOUD_API_UNAVAILABLE' | 'DATA_INTEGRATION_INPUT_ERROR' | 'DATA_INTEGRATION_NOT_FOUND' | 'DATA_INTEGRATION_NO_ACCESS' | 'DATA_INTEGRATION_PACKAGE_ERROR' | 'DATA_INTEGRATION_SERVER_ERROR' | 'DATA_INTEGRATION_VENDOR_SETUP_ERROR' | 'DEPENDENCY_API_UNSUPPORTED_EXCEPTION' | 'DUPLICATE_ARGUMENT_VALUE' | 'DUPLICATE_VALUE' | 'EASY_ROUTING_CREATION_NOT_ALLOWED' | 'EMAIL_BATCH_SIZE_LIMIT_EXCEEDED' | 'EMAIL_TO_CASE_INVALID_ROUTING' | 'EMAIL_TO_CASE_LIMIT_EXCEEDED' | 'EMAIL_TO_CASE_NOT_ENABLED' | 'ENTITY_NOT_QUERYABLE' | 'ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT' | 'EXCEEDED_ID_LIMIT' | 'EXCEEDED_LEAD_CONVERT_LIMIT' | 'EXCEEDED_MAX_FILTER_ENTITIES' | 'EXCEEDED_MAX_SEMIJOIN_SUBSELECTS' | 'EXCEEDED_MAX_SIZE_REQUEST' | 'EXCEEDED_MAX_SOBJECTS' | 'EXCEEDED_MAX_TYPES_LIMIT' | 'EXCEEDED_QUOTA' | 'EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION' | 'EXTERNAL_OBJECT_CONNECTION_EXCEPTION' | 'EXTERNAL_OBJECT_EXCEPTION' | 'EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION' | 'EXTERNAL_SERVICE_AUTHENTICATION_EXCEPTION' | 'EXTERNAL_SERVICE_CONNECTION_EXCEPTION' | 'EXTERNAL_SERVICE_DATA_EXCEPTION' | 'EXTERNAL_SERVICE_EXCEPTION' | 'EXTERNAL_SERVICE_INVALID_STATE_EXCEPTION' | 'EXTERNAL_SERVICE_UNSUPPORTED_EXCEPTION' | 'FEDERATED_SEARCH_ERROR' | 'FEED_NOT_ENABLED_FOR_OBJECT' | 'FUNCTIONALITY_NOT_ENABLED' | 'FUNCTIONALITY_TEMPORARILY_UNAVAILABLE' | 'GMAIL_ROUTING_CREATION_NOT_ALLOWED' | 'GONE' | 'IAS_NOT_FOUND' | 'IAS_TIMEOUT_EXCEPTION' | 'IDEMPOTENCY_AUTHENTICATION_FAILED' | 'IDEMPOTENCY_BACKEND_CONNECTION_TIMEOUT' | 'IDEMPOTENCY_BACKEND_OPERATION_ERROR' | 'IDEMPOTENCY_CONCURRENT_REQUEST' | 'IDEMPOTENCY_FEATURE_NOT_ENABLED' | 'IDEMPOTENCY_KEY_ALREADY_USED' | 'IDEMPOTENCY_KEY_USED_DIFFERENT_USER' | 'IDEMPOTENCY_NOT_SUPPORTED' | 'ID_REQUIRED' | 'ILLEGAL_QUERY_PARAMETER_VALUE' | 'INACTIVE_OWNER_OR_USER' | 'INACTIVE_PORTAL' | 'INDEX_NOT_FOUND' | 'INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE' | 'INSTALL_KEY_INVALID' | 'INSTALL_KEY_REQUIRED' | 'INSUFFICIENT_ACCESS' | 'INSUFFICIENT_ACCESS_APEX_METADATA_DEPLOY' | 'INTERNAL_CANVAS_ERROR' | 'INTERNAL_ERROR' | 'INTERNAL_SERVER_ERROR' | 'INVALID_ACCOUNTING_SET' | 'INVALID_ASSIGNMENT_RULE' | 'INVALID_AUTH_HEADER' | 'INVALID_BATCH_REQUEST' | 'INVALID_BATCH_SIZE' | 'INVALID_CLIENT' | 'INVALID_CROSS_REFERENCE_KEY' | 'INVALID_DATE_FORMAT' | 'INVALID_DEFINITION' | 'INVALID_FIELD' | 'INVALID_FIELD_ACCESS_RULE' | 'INVALID_FILTER_LANGUAGE' | 'INVALID_FILTER_VALUE' | 'INVALID_IDEMPOTENCY_KEY' | 'INVALID_ID_FIELD' | 'INVALID_INPUT_COMBINATION' | 'INVALID_LOCALE_LANGUAGE' | 'INVALID_LOCATOR' | 'INVALID_LOGIN' | 'INVALID_MULTIPART_REQUEST' | 'INVALID_NEW_PASSWORD' | 'INVALID_OLD_PASSWORD' | 'INVALID_OPERATION' | 'INVALID_OPERATION_WITH_EXPIRED_PASSWORD' | 'INVALID_PACKAGE_VERSION' | 'INVALID_PAGING_OPTION' | 'INVALID_QUERY_FILTER_OPERATOR' | 'INVALID_QUERY_KEY' | 'INVALID_QUERY_LOCATOR' | 'INVALID_QUERY_SCOPE' | 'INVALID_QUERY_VALUE' | 'INVALID_RECORD_ACCESS_RULE' | 'INVALID_REPLICATION_DATE' | 'INVALID_SEARCH' | 'INVALID_SEARCH_SCOPE' | 'INVALID_SESSION_ID' | 'INVALID_SOAP_HEADER' | 'INVALID_SORT_OPTION' | 'INVALID_SSO_GATEWAY_URL' | 'INVALID_TYPE' | 'INVALID_TYPE_FOR_OPERATION' | 'JIGSAW_ACTION_DISABLED' | 'JIGSAW_IMPORT_LIMIT_EXCEEDED' | 'JIGSAW_REQUEST_NOT_SUPPORTED' | 'JSON_PARSER_ERROR' | 'KEY_HAS_BEEN_DESTROYED' | 'LANGUAGE_PARAM_CONFLICT' | 'LICENSING_DATA_ERROR' | 'LICENSING_UNKNOWN_ERROR' | 'LIMIT_EXCEEDED' | 'LOGIN_CHALLENGE_ISSUED' | 'LOGIN_CHALLENGE_PENDING' | 'LOGIN_DURING_RESTRICTED_DOMAIN' | 'LOGIN_DURING_RESTRICTED_TIME' | 'LOGIN_MUST_USE_SECURITY_TOKEN' | 'MALFORMED_ID' | 'MALFORMED_QUERY' | 'MALFORMED_SEARCH' | 'MISMATCHING_VERSIONS' | 'MISSING_ARGUMENT' | 'MISSING_RECORD' | 'MODIFIED' | 'MULTIPLE_RECORDS_FOUND' | 'MUTUAL_AUTHENTICATION_FAILED' | 'NOT_ACCEPTABLE' | 'NOT_MODIFIED' | 'NO_ACTIVE_DUPLICATE_RULE' | 'NO_DEFINITION_ASSOCIATED' | 'NO_RECIPIENTS' | 'NO_SOFTPHONE_LAYOUT' | 'NUMBER_OUTSIDE_VALID_RANGE' | 'OCR_INVALID_REQUEST' | 'OPERATION_TOO_LARGE' | 'ORDER_MANAGEMENT_ACTION_NOT_ALLOWED' | 'ORG_IN_MAINTENANCE' | 'ORG_IS_DOT_ORG' | 'ORG_IS_SIGNING_UP' | 'ORG_LOCKED' | 'ORG_NOT_OWNED_BY_INSTANCE' | 'PASSWORD_LOCKOUT' | 'PAYLOAD_ITEM_MAP_ERROR' | 'PENDING_COMMIT' | 'PORTAL_NO_ACCESS' | 'POST_BODY_PARSE_ERROR' | 'POST_TAX_PROCESSING_ERROR' | 'PRODUCT_NOT_FOUND' | 'QAT_HETEROGENOUS_CONTEXT_IDS' | 'QAT_INVALID_CONTEXT_ID' | 'QAT_INVALID_QUICK_ACTION' | 'QUERY_TIMEOUT' | 'QUERY_TOO_COMPLICATED' | 'REALTIME_PROCESSING_TIME_EXCEEDED_LIMIT' | 'RECORD_NOT_FOUND' | 'REPORT_EXPORT_LIMIT_EXCEEDED' | 'REQUEST_LIMIT_EXCEEDED' | 'REQUEST_RUNNING_TOO_LONG' | 'SERVER_UNAVAILABLE' | 'SERVICE_DESK_NOT_ENABLED' | 'SITE_PUBLISH_FAILED' | 'SLACK_SERVICE_ALREADY_REACTED' | 'SLACK_SERVICE_INVALID_REACTION' | 'SLACK_SERVICE_INVALID_REQUEST' | 'SLACK_SERVICE_MISSING_DATA' | 'SLACK_SERVICE_NO_REACTION' | 'SLACK_SERVICE_REACTION_LIMIT_REACHED' | 'SLACK_SERVICE_RESOURCE_NOT_FOUND' | 'SLACK_SERVICE_SLACK_USER_SCOPES_NOT_FOUND' | 'SLACK_SERVICE_SLACK_USER_TOKEN_NOT_FOUND' | 'SLACK_SERVICE_UNKNOWN_ERROR' | 'SLACK_USER_MAPPING_NOT_FOUND' | 'SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION' | 'SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION' | 'SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE' | 'SPECIFICATION_GENERATION_EXCEPTION' | 'SSO_SERVICE_DOWN' | 'SST_ADMIN_FILE_DOWNLOAD_EXCEPTION' | 'STATE_TRANSITION_NOT_ALLOWED' | 'TAX_INTERNAL_ERROR' | 'TOO_MANY_APEX_REQUESTS' | 'TOO_MANY_JOBS' | 'TOO_MANY_RECIPIENTS' | 'TOO_MANY_RECORDS' | 'TRIAL_EXPIRED' | 'TXN_SECURITY_APEX_ERROR' | 'TXN_SECURITY_END_A_SESSION' | 'TXN_SECURITY_FAIL_CLOSE' | 'TXN_SECURITY_METERING_ERROR' | 'TXN_SECURITY_NO_ACCESS' | 'TXN_SECURITY_RUNTIME_ERROR' | 'TXN_SECURITY_TWO_FA_REQUIRED' | 'UNABLE_TO_LOCK_ROW' | 'UNKNOWN_ATTACHMENT_EXCEPTION' | 'UNKNOWN_EXCEPTION' | 'UNKNOWN_ORG_SETTING' | 'UNSUPPORTED_API_VERSION' | 'UNSUPPORTED_ATTACHMENT_ENCODING' | 'UNSUPPORTED_CLIENT' | 'UNSUPPORTED_DML_OPERATION' | 'UNSUPPORTED_MEDIA_TYPE' | 'UNSUPPORTED_QUERY' | 'USER_EMAIL_NOT_CONNECTED' | 'VERSION_NOT_FOUND' | 'WEBSTORE_NOT_FOUND' | 'XML_PARSER_ERROR';
export type FaultCode = 'fns_ADAPTER_ERROR' | 'fns_ADAPTER_VALIDATION_EXCEPTION' | 'fns_APEX_REST_SERVICES_DISABLED' | 'fns_APEX_TRIGGER_COUPLING_LIMIT' | 'fns_API_CURRENTLY_DISABLED' | 'fns_API_DISABLED_FOR_ORG' | 'fns_ARGUMENT_OBJECT_PARSE_ERROR' | 'fns_ASYNC_OPERATION_LOCATOR' | 'fns_ASYNC_QUERY_UNSUPPORTED_QUERY' | 'fns_BAD_REQUEST' | 'fns_BATCH_PROCESSING_HALTED' | 'fns_BIG_OBJECT_UNSUPPORTED_OPERATION' | 'fns_BILLING_ENTITIES_NO_ACCESS' | 'fns_BUYER_ACCOUNT_NOT_FOUND' | 'fns_CANNOT_DELETE_ENTITY' | 'fns_CANNOT_DELETE_OWNER' | 'fns_CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY' | 'fns_CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY' | 'fns_CATEGORY_NOT_FOUND' | 'fns_CIRCULAR_OBJECT_GRAPH' | 'fns_CLIENT_NOT_ACCESSIBLE_FOR_USER' | 'fns_CLIENT_REQUIRE_UPDATE_FOR_USER' | 'fns_CLONE_FIELD_INTEGRITY_EXCEPTION' | 'fns_CLONE_NOT_SUPPORTED' | 'fns_COMMERCE_ADMIN_MISCONFIGURATION' | 'fns_CONFIG_PUBLISH_FAILED' | 'fns_CONTENT_ALREADY_AN_ASSET_EXCEPTION' | 'fns_CONTENT_CUSTOM_DOWNLOAD_EXCEPTION' | 'fns_CONTENT_HUB_AUTHENTICATION_EXCEPTION' | 'fns_CONTENT_HUB_FILE_DOWNLOAD_EXCEPTION' | 'fns_CONTENT_HUB_FILE_HAS_NO_URL_EXCEPTION' | 'fns_CONTENT_HUB_FILE_NOT_FOUND_EXCEPTION' | 'fns_CONTENT_HUB_INVALID_OBJECT_TYPE_EXCEPTION' | 'fns_CONTENT_HUB_INVALID_PAGE_NUMBER_EXCEPTION' | 'fns_CONTENT_HUB_INVALID_PAYLOAD' | 'fns_CONTENT_HUB_INVALID_RENDITION_PAGE_NUMBER_EXCEPTION' | 'fns_CONTENT_HUB_ITEM_TYPE_NOT_FOUND_EXCEPTION' | 'fns_CONTENT_HUB_OBJECT_NOT_FOUND_EXCEPTION' | 'fns_CONTENT_HUB_OPERATION_NOT_SUPPORTED_EXCEPTION' | 'fns_CONTENT_HUB_SECURITY_EXCEPTION' | 'fns_CONTENT_HUB_TIMEOUT_EXCEPTION' | 'fns_CONTENT_HUB_UNEXPECTED_EXCEPTION' | 'fns_CONTENT_IMAGE_SCALING_INVALID_ARGUMENTS_EXCEPTION' | 'fns_CONTENT_IMAGE_SCALING_INVALID_IMAGE_EXCEPTION' | 'fns_CONTENT_IMAGE_SCALING_MAX_RENDITIONS_EXCEPTION' | 'fns_CONTENT_IMAGE_SCALING_TIMEOUT_EXCEPTION' | 'fns_CONTENT_IMAGE_SCALING_UNKNOWN_EXCEPTION' | 'fns_CUSTOM_METADATA_LIMIT_EXCEEDED' | 'fns_CUSTOM_SETTINGS_LIMIT_EXCEEDED' | 'fns_DATACLOUD_API_CLIENT_EXCEPTION' | 'fns_DATACLOUD_API_DISABLED_EXCEPTION' | 'fns_DATACLOUD_API_INVALID_QUERY_EXCEPTION' | 'fns_DATACLOUD_API_SERVER_BUSY_EXCEPTION' | 'fns_DATACLOUD_API_SERVER_EXCEPTION' | 'fns_DATACLOUD_API_TIMEOUT_EXCEPTION' | 'fns_DATACLOUD_API_UNAVAILABLE' | 'fns_DATA_INTEGRATION_INPUT_ERROR' | 'fns_DATA_INTEGRATION_NOT_FOUND' | 'fns_DATA_INTEGRATION_NO_ACCESS' | 'fns_DATA_INTEGRATION_PACKAGE_ERROR' | 'fns_DATA_INTEGRATION_SERVER_ERROR' | 'fns_DATA_INTEGRATION_VENDOR_SETUP_ERROR' | 'fns_DEPENDENCY_API_UNSUPPORTED_EXCEPTION' | 'fns_DUPLICATE_ARGUMENT_VALUE' | 'fns_DUPLICATE_VALUE' | 'fns_EASY_ROUTING_CREATION_NOT_ALLOWED' | 'fns_EMAIL_BATCH_SIZE_LIMIT_EXCEEDED' | 'fns_EMAIL_TO_CASE_INVALID_ROUTING' | 'fns_EMAIL_TO_CASE_LIMIT_EXCEEDED' | 'fns_EMAIL_TO_CASE_NOT_ENABLED' | 'fns_ENTITY_NOT_QUERYABLE' | 'fns_ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT' | 'fns_EXCEEDED_ID_LIMIT' | 'fns_EXCEEDED_LEAD_CONVERT_LIMIT' | 'fns_EXCEEDED_MAX_FILTER_ENTITIES' | 'fns_EXCEEDED_MAX_SEMIJOIN_SUBSELECTS' | 'fns_EXCEEDED_MAX_SIZE_REQUEST' | 'fns_EXCEEDED_MAX_SOBJECTS' | 'fns_EXCEEDED_MAX_TYPES_LIMIT' | 'fns_EXCEEDED_QUOTA' | 'fns_EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION' | 'fns_EXTERNAL_OBJECT_CONNECTION_EXCEPTION' | 'fns_EXTERNAL_OBJECT_EXCEPTION' | 'fns_EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION' | 'fns_EXTERNAL_SERVICE_AUTHENTICATION_EXCEPTION' | 'fns_EXTERNAL_SERVICE_CONNECTION_EXCEPTION' | 'fns_EXTERNAL_SERVICE_DATA_EXCEPTION' | 'fns_EXTERNAL_SERVICE_EXCEPTION' | 'fns_EXTERNAL_SERVICE_INVALID_STATE_EXCEPTION' | 'fns_EXTERNAL_SERVICE_UNSUPPORTED_EXCEPTION' | 'fns_FEDERATED_SEARCH_ERROR' | 'fns_FEED_NOT_ENABLED_FOR_OBJECT' | 'fns_FUNCTIONALITY_NOT_ENABLED' | 'fns_FUNCTIONALITY_TEMPORARILY_UNAVAILABLE' | 'fns_GMAIL_ROUTING_CREATION_NOT_ALLOWED' | 'fns_GONE' | 'fns_IAS_NOT_FOUND' | 'fns_IAS_TIMEOUT_EXCEPTION' | 'fns_IDEMPOTENCY_AUTHENTICATION_FAILED' | 'fns_IDEMPOTENCY_BACKEND_CONNECTION_TIMEOUT' | 'fns_IDEMPOTENCY_BACKEND_OPERATION_ERROR' | 'fns_IDEMPOTENCY_CONCURRENT_REQUEST' | 'fns_IDEMPOTENCY_FEATURE_NOT_ENABLED' | 'fns_IDEMPOTENCY_KEY_ALREADY_USED' | 'fns_IDEMPOTENCY_KEY_USED_DIFFERENT_USER' | 'fns_IDEMPOTENCY_NOT_SUPPORTED' | 'fns_ID_REQUIRED' | 'fns_ILLEGAL_QUERY_PARAMETER_VALUE' | 'fns_INACTIVE_OWNER_OR_USER' | 'fns_INACTIVE_PORTAL' | 'fns_INDEX_NOT_FOUND' | 'fns_INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE' | 'fns_INSTALL_KEY_INVALID' | 'fns_INSTALL_KEY_REQUIRED' | 'fns_INSUFFICIENT_ACCESS' | 'fns_INSUFFICIENT_ACCESS_APEX_METADATA_DEPLOY' | 'fns_INTERNAL_CANVAS_ERROR' | 'fns_INTERNAL_ERROR' | 'fns_INTERNAL_SERVER_ERROR' | 'fns_INVALID_ACCOUNTING_SET' | 'fns_INVALID_ASSIGNMENT_RULE' | 'fns_INVALID_AUTH_HEADER' | 'fns_INVALID_BATCH_REQUEST' | 'fns_INVALID_BATCH_SIZE' | 'fns_INVALID_CLIENT' | 'fns_INVALID_CROSS_REFERENCE_KEY' | 'fns_INVALID_DATE_FORMAT' | 'fns_INVALID_DEFINITION' | 'fns_INVALID_FIELD' | 'fns_INVALID_FIELD_ACCESS_RULE' | 'fns_INVALID_FILTER_LANGUAGE' | 'fns_INVALID_FILTER_VALUE' | 'fns_INVALID_IDEMPOTENCY_KEY' | 'fns_INVALID_ID_FIELD' | 'fns_INVALID_INPUT_COMBINATION' | 'fns_INVALID_LOCALE_LANGUAGE' | 'fns_INVALID_LOCATOR' | 'fns_INVALID_LOGIN' | 'fns_INVALID_MULTIPART_REQUEST' | 'fns_INVALID_NEW_PASSWORD' | 'fns_INVALID_OLD_PASSWORD' | 'fns_INVALID_OPERATION' | 'fns_INVALID_OPERATION_WITH_EXPIRED_PASSWORD' | 'fns_INVALID_PACKAGE_VERSION' | 'fns_INVALID_PAGING_OPTION' | 'fns_INVALID_QUERY_FILTER_OPERATOR' | 'fns_INVALID_QUERY_KEY' | 'fns_INVALID_QUERY_LOCATOR' | 'fns_INVALID_QUERY_SCOPE' | 'fns_INVALID_QUERY_VALUE' | 'fns_INVALID_RECORD_ACCESS_RULE' | 'fns_INVALID_REPLICATION_DATE' | 'fns_INVALID_SEARCH' | 'fns_INVALID_SEARCH_SCOPE' | 'fns_INVALID_SESSION_ID' | 'fns_INVALID_SOAP_HEADER' | 'fns_INVALID_SORT_OPTION' | 'fns_INVALID_SSO_GATEWAY_URL' | 'fns_INVALID_TYPE' | 'fns_INVALID_TYPE_FOR_OPERATION' | 'fns_JIGSAW_ACTION_DISABLED' | 'fns_JIGSAW_IMPORT_LIMIT_EXCEEDED' | 'fns_JIGSAW_REQUEST_NOT_SUPPORTED' | 'fns_JSON_PARSER_ERROR' | 'fns_KEY_HAS_BEEN_DESTROYED' | 'fns_LANGUAGE_PARAM_CONFLICT' | 'fns_LICENSING_DATA_ERROR' | 'fns_LICENSING_UNKNOWN_ERROR' | 'fns_LIMIT_EXCEEDED' | 'fns_LOGIN_CHALLENGE_ISSUED' | 'fns_LOGIN_CHALLENGE_PENDING' | 'fns_LOGIN_DURING_RESTRICTED_DOMAIN' | 'fns_LOGIN_DURING_RESTRICTED_TIME' | 'fns_LOGIN_MUST_USE_SECURITY_TOKEN' | 'fns_MALFORMED_ID' | 'fns_MALFORMED_QUERY' | 'fns_MALFORMED_SEARCH' | 'fns_MISMATCHING_VERSIONS' | 'fns_MISSING_ARGUMENT' | 'fns_MISSING_RECORD' | 'fns_MODIFIED' | 'fns_MULTIPLE_RECORDS_FOUND' | 'fns_MUTUAL_AUTHENTICATION_FAILED' | 'fns_NOT_ACCEPTABLE' | 'fns_NOT_MODIFIED' | 'fns_NO_ACTIVE_DUPLICATE_RULE' | 'fns_NO_DEFINITION_ASSOCIATED' | 'fns_NO_RECIPIENTS' | 'fns_NO_SOFTPHONE_LAYOUT' | 'fns_NUMBER_OUTSIDE_VALID_RANGE' | 'fns_OCR_INVALID_REQUEST' | 'fns_OPERATION_TOO_LARGE' | 'fns_ORDER_MANAGEMENT_ACTION_NOT_ALLOWED' | 'fns_ORG_IN_MAINTENANCE' | 'fns_ORG_IS_DOT_ORG' | 'fns_ORG_IS_SIGNING_UP' | 'fns_ORG_LOCKED' | 'fns_ORG_NOT_OWNED_BY_INSTANCE' | 'fns_PASSWORD_LOCKOUT' | 'fns_PAYLOAD_ITEM_MAP_ERROR' | 'fns_PENDING_COMMIT' | 'fns_PORTAL_NO_ACCESS' | 'fns_POST_BODY_PARSE_ERROR' | 'fns_POST_TAX_PROCESSING_ERROR' | 'fns_PRODUCT_NOT_FOUND' | 'fns_QAT_HETEROGENOUS_CONTEXT_IDS' | 'fns_QAT_INVALID_CONTEXT_ID' | 'fns_QAT_INVALID_QUICK_ACTION' | 'fns_QUERY_TIMEOUT' | 'fns_QUERY_TOO_COMPLICATED' | 'fns_REALTIME_PROCESSING_TIME_EXCEEDED_LIMIT' | 'fns_RECORD_NOT_FOUND' | 'fns_REPORT_EXPORT_LIMIT_EXCEEDED' | 'fns_REQUEST_LIMIT_EXCEEDED' | 'fns_REQUEST_RUNNING_TOO_LONG' | 'fns_SERVER_UNAVAILABLE' | 'fns_SERVICE_DESK_NOT_ENABLED' | 'fns_SITE_PUBLISH_FAILED' | 'fns_SLACK_SERVICE_ALREADY_REACTED' | 'fns_SLACK_SERVICE_INVALID_REACTION' | 'fns_SLACK_SERVICE_INVALID_REQUEST' | 'fns_SLACK_SERVICE_MISSING_DATA' | 'fns_SLACK_SERVICE_NO_REACTION' | 'fns_SLACK_SERVICE_REACTION_LIMIT_REACHED' | 'fns_SLACK_SERVICE_RESOURCE_NOT_FOUND' | 'fns_SLACK_SERVICE_SLACK_USER_SCOPES_NOT_FOUND' | 'fns_SLACK_SERVICE_SLACK_USER_TOKEN_NOT_FOUND' | 'fns_SLACK_SERVICE_UNKNOWN_ERROR' | 'fns_SLACK_USER_MAPPING_NOT_FOUND' | 'fns_SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION' | 'fns_SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION' | 'fns_SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE' | 'fns_SPECIFICATION_GENERATION_EXCEPTION' | 'fns_SSO_SERVICE_DOWN' | 'fns_SST_ADMIN_FILE_DOWNLOAD_EXCEPTION' | 'fns_STATE_TRANSITION_NOT_ALLOWED' | 'fns_TAX_INTERNAL_ERROR' | 'fns_TOO_MANY_APEX_REQUESTS' | 'fns_TOO_MANY_JOBS' | 'fns_TOO_MANY_RECIPIENTS' | 'fns_TOO_MANY_RECORDS' | 'fns_TRIAL_EXPIRED' | 'fns_TXN_SECURITY_APEX_ERROR' | 'fns_TXN_SECURITY_END_A_SESSION' | 'fns_TXN_SECURITY_FAIL_CLOSE' | 'fns_TXN_SECURITY_METERING_ERROR' | 'fns_TXN_SECURITY_NO_ACCESS' | 'fns_TXN_SECURITY_RUNTIME_ERROR' | 'fns_TXN_SECURITY_TWO_FA_REQUIRED' | 'fns_UNABLE_TO_LOCK_ROW' | 'fns_UNKNOWN_ATTACHMENT_EXCEPTION' | 'fns_UNKNOWN_EXCEPTION' | 'fns_UNKNOWN_ORG_SETTING' | 'fns_UNSUPPORTED_API_VERSION' | 'fns_UNSUPPORTED_ATTACHMENT_ENCODING' | 'fns_UNSUPPORTED_CLIENT' | 'fns_UNSUPPORTED_DML_OPERATION' | 'fns_UNSUPPORTED_MEDIA_TYPE' | 'fns_UNSUPPORTED_QUERY' | 'fns_USER_EMAIL_NOT_CONNECTED' | 'fns_VERSION_NOT_FOUND' | 'fns_WEBSTORE_NOT_FOUND' | 'fns_XML_PARSER_ERROR';
export type findDuplicates = string;
export type findDuplicatesByIds = string;
export type findDuplicatesByIdsResponse = string;
export type findDuplicatesResponse = string;
export type createSnapshot = string;
export type createSnapshotResponse = string;
export type moreSnapshot = string;
export type moreSnapshotResponse = string;
export type ackSnapshot = string;
export type ackSnapshotResponse = string;
export type syncOfflineData = string;
export type syncOfflineDataResponse = string;
export type ackSyncOfflineData = string;
export type ackSyncOfflineDataResponse = string;
export type describeMobile = string;
export type describeMobileResponse = string;
export type loginXi = string;
export type loginXiResponse = string;
export type login = string;
export type loginResponse = string;
export type describeSObject = string;
export type describeSObjectResponse = string;
export type discoverSchemas = string;
export type discoverSchemasResponse = string;
export type describeSchema = string;
export type describeSchemaResponse = string;
export type describePicklists = string;
export type describePicklistsResponse = string;
export type captureCommonEvent = string;
export type captureCommonEventResponse = string;
export type describeSObjects = string;
export type describeSObjectsResponse = string;
export type describeGlobal = string;
export type describeGlobalResponse = string;
export type describeGlobalTheme = string;
export type describeGlobalThemeResponse = string;
export type describeTheme = string;
export type describeThemeResponse = string;
export type describeDataCategoryGroups = string;
export type describeDataCategoryGroupsResponse = string;
export type describeDataCategoryGroupStructures = string;
export type describeDataCategoryGroupStructuresResponse = string;
export type describeDataCategoryMappings = string;
export type describeDataCategoryMappingsResponse = string;
export type describeKnowledgeSettings = string;
export type describeKnowledgeSettingsResponse = string;
export type describeDuplicateRules = string;
export type describeDuplicateRulesResponse = string;
export type ftestPatch = string;
export type ftestPatchResponse = string;
export type ftestPatchPreviousVersion = string;
export type ftestPatchPreviousVersionResponse = string;
export type describeFlexiPages = string;
export type describeFlexiPagesResponse = string;
export type describeAppMenu = string;
export type describeAppMenuResponse = string;
export type describeLayout = string;
export type describeLayoutByUiType = string;
export type describeLayoutByUiTypeResponse = string;
export type describeLayoutResponse = string;
export type describeMiniLayout = string;
export type describeMiniLayoutResponse = string;
export type describeCompactLayouts = string;
export type describeCompactLayoutsResponse = string;
export type describePrimaryCompactLayouts = string;
export type describePrimaryCompactLayoutsResponse = string;
export type describePathAssistants = string;
export type describePathAssistantsResponse = string;
export type describeApprovalLayout = string;
export type describeApprovalLayoutResponse = string;
export type describeSoftphoneLayout = string;
export type describeSoftphoneLayoutResponse = string;
export type describeListViews = string;
export type describeListViewsResponse = string;
export type describeLookupLayouts = string;
export type describeLookupLayoutsResponse = string;
export type describeSoqlListViews = string;
export type describeSoqlListViewsResponse = string;
export type executeListView = string;
export type executeListViewResponse = string;
export type describeSObjectListViews = string;
export type describeSObjectListViewsResponse = string;
export type describeSearchLayouts = string;
export type describeSearchLayoutsResponse = string;
export type describeSearchScopeOrder = string;
export type describeSearchScopeOrderResponse = string;
export type describeSearchableEntities = string;
export type describeSearchableEntitiesResponse = string;
export type describeTabs = string;
export type describeTabsResponse = string;
export type describeAllTabs = string;
export type describeAllTabsResponse = string;
export type describeNouns = string;
export type describeNounsResponse = string;
export type create = string;
export type createResponse = string;
export type sendEmail = string;
export type sendEmailResponse = string;
export type renderEmailTemplate = string;
export type renderEmailTemplateResponse = string;
export type renderStoredEmailTemplate = string;
export type renderStoredEmailTemplateResponse = string;
export type sendEmailMessage = string;
export type sendEmailMessageResponse = string;
export type emailMerge = string;
export type emailMergeResponse = string;
export type update = string;
export type updateResponse = string;
export type upsert = string;
export type upsertResponse = string;
export type merge = string;
export type mergeResponse = string;
export type delete_ = string;
export type deleteResponse = string;
export type deleteByExample = string;
export type deleteByExampleResponse = string;
export type undelete = string;
export type undeleteResponse = string;
export type updateSettings = string;
export type updateSettingsResponse = string;
export type emptyRecycleBin = string;
export type emptyRecycleBinResponse = string;
export type process = string;
export type processResponse = string;
export type performQuickActions = string;
export type performQuickActionsResponse = string;
export type retrieveMassQuickActionTemplates = string;
export type retrieveMassQuickActionTemplatesResponse = string;
export type retrieveQuickActionTemplates = string;
export type retrieveQuickActionTemplatesResponse = string;
export type describeQuickActions = string;
export type describeQuickActionsResponse = string;
export type describeQuickActionsForRecordType = string;
export type describeQuickActionsForRecordTypeResponse = string;
export type describeAvailableQuickActions = string;
export type describeAvailableQuickActionsResponse = string;
export type describeVisualForce = string;
export type describeVisualForceResponse = string;
export type describeWorkitemActions = string;
export type describeWorkitemActionsResponse = string;
export type retrieve = string;
export type retrieveResponse = string;
export type retrieveDefaultValues = string;
export type retrieveDefaultValuesResponse = string;
export type convertLead = string;
export type convertLeadResponse = string;
export type addCampaignMember = string;
export type addCampaignMemberResponse = string;
export type getUpdated = string;
export type getUpdatedResponse = string;
export type getDeleted = string;
export type getDeletedResponse = string;
export type impersonateUser = string;
export type impersonateUserResponse = string;
export type logout = string;
export type logoutResponse = string;
export type invalidateSessions = string;
export type invalidateSessionsResponse = string;
export type canViewFlow = string;
export type canViewFlowResponse = string;
export type startFlowInterview = string;
export type startFlowInterviewResponse = string;
export type resumeFlowInterview = string;
export type resumeFlowInterviewResponse = string;
export type runFlowTest = string;
export type runFlowTestResponse = string;
export type generateFlowTest = string;
export type generateFlowTestResponse = string;
export type getFlowInterviewHistory = string;
export type getFlowInterviewHistoryResponse = string;
export type navigateFlowInterview = string;
export type navigateFlowInterviewResponse = string;
export type query = string;
export type queryResponse = string;
export type queryAll = string;
export type queryAllResponse = string;
export type queryMore = string;
export type queryMoreResponse = string;
export type setupBriefcase = string;
export type setupBriefcaseResponse = string;
export type search = string;
export type searchResponse = string;
export type outlookSearch = string;
export type outlookSearchResponse = string;
export type outlookDescribe = string;
export type outlookDescribeResponse = string;
export type getServerTimestamp = string;
export type getServerTimestampResponse = string;
export type setPassword = string;
export type setPasswordResponse = string;
export type changeOwnPassword = string;
export type changeOwnPasswordResponse = string;
export type resetPassword = string;
export type resetPasswordResponse = string;
export type getAccessInfo = string;
export type getAccessInfoResponse = string;
export type getUserInfo = string;
export type getUserInfoResponse = string;
export type activate = string;
export type activateResponse = string;
export type generateJwtToken = string;
export type generateJwtTokenResponse = string;
export type SessionHeader = string;
export type LoginScopeHeader = string;
export type CallOptions = string;
export type QueryOptions = string;
export type APIPerformanceInfo = string;
export type MetadataVersionCheck = string;
export type DebuggingHeader = string;
export type DebuggingInfo = string;
export type PackageVersionHeader = string;
export type AllowFieldTruncationHeader = string;
export type DisableFeedTrackingHeader = string;
export type StreamingEnabledHeader = string;
export type AllOrNoneHeader = string;
export type CurrencyConversionHeader = string;
export type DuplicateRuleHeader = string;
export type LimitInfoHeader = string;
export type PatchHeader = string;
export type match = string;
export type matchResponse = string;
export type MruHeader = string;
export type EmailHeader = string;
export type AssignmentRuleHeader = string;
export type ConditionalRequestHeader = string;
export type UserTerritoryDeleteHeader = string;
export type PartnerNetworkHeader = string;
export type LocaleOptions = string;
export type OwnerChangeOptions = string;
export type CommonEventRequestInformation = string;
export type fault = string;
export type LoginFault = string;
export type InvalidQueryLocatorFault = string;
export type InvalidNewPasswordFault = string;
export type InvalidOldPasswordFault = string;
export type InvalidIdFault = string;
export type UnexpectedErrorFault = string;
export type InvalidFieldFault = string;
export type InvalidSObjectFault = string;
export type MalformedQueryFault = string;
export type MalformedSearchFault = string;
export type sObject = {
    type: string;
    fieldsToNull?: string[];
    Id?: ID;
};
export type address = location & {
    city?: string;
    country?: string;
    countryCode?: string;
    geocodeAccuracy?: string;
    postalCode?: string;
    state?: string;
    stateCode?: string;
    street?: string;
};
export type location = {
    latitude?: number;
    longitude?: number;
};
export type QueryResult = {
    done: boolean;
    queryLocator?: QueryLocator;
    records?: sObject[];
    size: number;
};
export type SetupBriefcaseResult = {
    briefcaseType?: briefcaseType;
};
export type SearchResult = {
    queryId?: string;
    searchRecords: SearchRecord[];
    searchResultsMetadata?: SearchResultsMetadata;
};
export type SearchRecord = {
    record: sObject;
    searchRecordMetadata?: SearchRecordMetadata;
    snippet?: SearchSnippet;
};
export type SearchRecordMetadata = {
    searchPromoted: boolean;
    spellCorrected: boolean;
};
export type SearchSnippet = {
    text?: string;
    wholeFields: NameValuePair[];
};
export type SearchResultsMetadata = {
    entityLabelMetadata?: LabelsSearchMetadata[];
    entityMetadata?: EntitySearchMetadata[];
};
export type LabelsSearchMetadata = {
    entityFieldLabels?: NameValuePair[];
    entityName?: string;
};
export type EntitySearchMetadata = {
    entityName?: string;
    errorMetadata?: EntityErrorMetadata;
    fieldMetadata?: FieldLevelSearchMetadata[];
    intentQueryMetadata?: EntityIntentQueryMetadata;
    searchPromotionMetadata?: EntitySearchPromotionMetadata;
    spellCorrectionMetadata?: EntitySpellCorrectionMetadata;
};
export type FieldLevelSearchMetadata = {
    label?: string;
    name?: string;
    type?: string;
};
export type EntitySpellCorrectionMetadata = {
    correctedQuery?: string;
    hasNonCorrectedResults?: boolean;
};
export type EntitySearchPromotionMetadata = {
    promotedResultCount?: number;
};
export type EntityIntentQueryMetadata = {
    intentQuery?: boolean;
    message?: string;
};
export type EntityErrorMetadata = {
    errorCode?: string;
    message?: string;
};
export type RelationshipReferenceTo = {
    referenceTo: string[];
};
export type RecordTypesSupported = {
    recordTypeInfos: RecordTypeInfo[];
};
export type JunctionIdListNames = {
    names: string[];
};
export type SearchLayoutButtonsDisplayed = {
    applicable: boolean;
    buttons: SearchLayoutButton[];
};
export type SearchLayoutButton = {
    apiName: string;
    label: string;
};
export type SearchLayoutFieldsDisplayed = {
    applicable: boolean;
    fields: SearchLayoutField[];
};
export type SearchLayoutField = {
    apiName: string;
    label: string;
    sortable: boolean;
};
export type NameValuePair = {
    name: string;
    value: string;
};
export type NameObjectValuePair = {
    isVisible?: boolean;
    name: string;
    value: any[];
};
export type NameValueTypeTriple = {
    name: string;
    type: string;
    value: string;
};
export type SimpleNameObjectValuePair = {
    name: string;
    value: any;
};
export type FlowInterviewWrapperContext = {
    inputs: SimpleNameObjectValuePair[];
    wrapperContextType: string;
};
export type StartFlowInterviewRequest = {
    flowName: string;
    inputs: NameObjectValuePair[];
    versionId: string;
    debug?: FlowInterviewDebugInput;
    wrapperContext?: FlowInterviewWrapperContext;
};
export type NavigateFlowInterviewRequest = {
    action: string;
    screenInputs: NameObjectValuePair[];
    state: string;
    debug?: FlowInterviewDebugInput;
    lcErrors: NameValuePair[];
};
export type ResumeFlowInterviewRequest = {
    guid: string;
};
export type RunFlowTestInput = {
    testIdOrName: string[];
    showTrace?: boolean;
    flowVersionId: string;
};
export type RunFlowTestResult = {
    assertionResults: FlowTestAssertionResult[];
    endDateTime: Date;
    flowTestId: string;
    flowTestName: string;
    interviewErrors: string[];
    interviewStatus: string;
    startDateTime: Date;
    status: string;
    trace: string;
};
export type GetFlowInterviewHistoryRequest = {
    debug?: FlowInterviewDebugInput;
    guid: string;
};
export type FlowAccessInput = {
    flowEnumOrDefId: string;
    flowVersionId: string;
    isBasedOnCommUserAccessCheck: boolean;
};
export type CanViewFlowResult = {
    canView: boolean;
    errors?: Error[];
};
export type FlowInterviewAction = {
    id: string;
    label: string;
};
export type FlowTest = {
    description?: string;
    label: string;
    referenceFlow: string;
    testPoints: FlowTestPoint[];
};
export type FlowTestPoint = {
    asserts: FlowTestAssert[];
    elementDeveloperName: string;
    parameters: FlowTestParameter[];
};
export type FlowTestAssert = {
    assertErrorMessage?: string;
    conditions: FlowTestCondition[];
};
export type FlowTestAssertionResult = {
    conditionsText: string[];
    failMessage: string;
    errorMessage: string;
    status?: string;
};
export type FlowTestCondition = {
    leftValueReference: string;
    Operator?: string;
    rightValue?: FlowTestReferenceOrValue;
};
export type FlowTestReferenceOrValue = {
    booleanValue?: boolean;
    dateTimeValue?: Date;
    dateValue?: Date;
    numberValue?: number;
    sobjectValue?: string;
    stringValue?: string;
};
export type FlowTestParameter = {
    leftValueReference: string;
    type: string;
    value: FlowTestReferenceOrValue;
};
export type GenerateFlowTestResult = {
    flowTest?: FlowTest;
};
export type NavigateFlowInterviewResult = {
    activeStages: FlowInterviewStage[];
    apiVersionRuntime?: number;
    availableActions: FlowInterviewAction[];
    currentFlowVersionId?: string;
    currentStage?: FlowInterviewStage;
    debug?: FlowInterviewDebugOutput;
    errorMessages: string[];
    flowLabel: string;
    formulas: FlowInterviewReactiveFormula[];
    guid: string;
    helpText?: string;
    interviewStatus: string;
    localActionName?: string;
    localActionInputs: FlowInterviewLocalActionInput[];
    localActionOutputs: FlowInterviewLocalActionOutput[];
    locationName?: string;
    outputVariables: FlowInterviewOutputVariable[];
    pausedText?: string;
    reactiveActions: FlowInterviewReactiveAction[];
    reactiveAssignments: FlowInterviewReactiveAssignment[];
    reactiveDataProviders: FlowInterviewReactiveDataProvider[];
    reactiveTriggers: FlowInterviewReactiveTrigger[];
    screenFields: FlowInterviewScreenField[];
    showFooter: boolean;
    showHeader: boolean;
    state?: string;
};
export type FlowInterviewScreenField = {
    choices: FlowInterviewChoice[];
    contextMap: NameValuePair[];
    dataType: string;
    errorMessages: string[];
    extensionName?: string;
    extensionType?: string;
    fields: FlowInterviewScreenField[];
    fieldType: string;
    helpText?: string;
    inputs: FlowInterviewScreenFieldInput[];
    isDisabled: boolean;
    isReactiveOnInit: boolean;
    isReadOnly: boolean;
    isRequired: boolean;
    isValidValue: boolean;
    label: string;
    metadataValues: FlowInterviewMetadataValue[];
    name: string;
    objectFieldReference?: FlowInterviewObjectFieldReference[];
    outputs: FlowInterviewScreenFieldOutput[];
    regionContainerType?: string;
    scale?: number;
    templateField?: FlowInterviewScreenField;
    triggersUpdate: boolean;
    value?: any;
    valueSources: string[];
    visibilityRule: string;
};
export type FlowInterviewReactiveTrigger = {
    eventHandlers: FlowInterviewReactiveHandler[];
    eventName: string;
    eventSources: string[];
};
export type FlowInterviewReactiveHandler = {
    actionName: string;
    actionType: string;
    conditionContextMap: NameValueTypeTriple[];
    conditionExpression: string;
    conditionSources: string[];
    initBehavior: string;
    lockLevel: string;
};
export type FlowInterviewReactiveAction = {
    actionName: string;
    actionType: string;
    inputs: FlowInterviewScreenFieldInput[];
    name: string;
    outputs: FlowInterviewScreenFieldOutput[];
    prefillValues: FlowInterviewScreenFieldInput[];
};
export type FlowInterviewReactiveAssignment = {
    assigmentType: string;
    name: string;
    source: string;
    target: string;
};
export type FlowInterviewReactiveDataProvider = {
    filterLogic: string;
    filters: FlowInterviewReactiveDataProviderFilter[];
    initBehavior: string;
    limit: number;
    name: string;
    objectSuperType?: string;
    objectType?: string;
    prefillValue: any[];
    sortFieldName: string;
    sortOrder: string;
};
export type FlowInterviewReactiveDataProviderFilter = {
    isRhsReference: boolean;
    lhsFieldName: string;
    operator: string;
    rhsDataType: string;
    rhsValue?: string;
};
export type FlowInterviewReactiveFormula = {
    contextMap: NameValueTypeTriple[];
    expression: string;
    formulaType: string;
    name: string;
    outputType: string;
    scale?: number;
    valueSources: string[];
};
export type FlowInterviewScreenFieldInput = {
    dataType: string;
    isCollection: boolean;
    name: string;
    objectType?: string;
    value: any[];
    valueSources: string[];
};
export type FlowInterviewScreenFieldOutput = {
    dataType: string;
    isCollection: boolean;
    name: string;
    objectType?: string;
};
export type FlowInterviewLocalActionInput = {
    dataType: string;
    isCollection: boolean;
    name: string;
    objectType?: string;
    value: any[];
};
export type FlowInterviewLocalActionOutput = {
    dataType: string;
    isCollection: boolean;
    name: string;
    objectType?: string;
};
export type FlowInterviewMetadataValue = {
    name: string;
    value: any[];
};
export type FlowInterviewReactiveChoiceSource = {
    dataType: string;
    labelFieldName: string;
    sourceElement: string;
    valueFieldName: string;
};
export type FlowInterviewChoice = {
    choiceSource?: FlowInterviewReactiveChoiceSource;
    choiceValue?: string;
    isSelected: boolean;
    label: string;
    name: string;
    text?: string;
    userInput?: FlowInterviewChoiceUserInput;
};
export type FlowInterviewChoiceUserInput = {
    dataType: string;
    errorMessages: string[];
    isRequired: boolean;
    isValidValue: boolean;
    label: string;
    name: string;
    value?: any;
};
export type FlowInterviewOutputVariable = {
    dataType: string;
    description?: string;
    isCollection: boolean;
    name: string;
    objectType?: string;
    flowName: string;
    value: any[];
};
export type FlowInterviewStage = {
    label: string;
    name: string;
};
export type FlowInterviewDebugInput = {
    collectApexLimitUsage?: boolean;
    debugAsUserId?: string;
    debugWaitInput?: FlowInterviewDebugWaitInput;
    debugWaits?: boolean;
    enableRollbackMode?: boolean;
    enableTrace?: boolean;
    isForNewDebugging?: boolean;
    useLatestSubflow?: boolean;
};
export type FlowInterviewDebugWaitInput = {
    eventOutputs: NameObjectValuePair[];
    waitEventName?: string;
};
export type FlowInterviewDebugOutput = {
    trace?: string;
    waitDebugOutput: FlowInterviewDebugWaitOutput[];
};
export type FlowInterviewDebugWaitOutput = {
    eventOutputs: NameObjectValuePair[];
    waitEventName?: string;
};
export type FlowInterviewObjectFieldReference = {
    objectFieldName?: string;
    objectName?: string;
    objectResourceName?: string;
    recordId?: string;
    recordTypeId?: string;
};
export type ClaimsMapping = {
    claimKey: string;
    claimValue: string;
};
export type GetUpdatedResult = {
    ids: ID[];
    latestDateCovered: Date;
};
export type GetDeletedResult = {
    deletedRecords: DeletedRecord[];
    earliestDateAvailable: Date;
    latestDateCovered: Date;
};
export type DeletedRecord = {
    deletedDate: Date;
    id: ID;
};
export type OutlookSearchResult = {
    records?: sObject[];
    size: number;
};
export type OutlookDescribeResult = {
    inboundEmailType?: string;
    outboundEmailType?: string;
    priority?: string;
    recordTypeId?: ID;
    status?: string;
};
export type GetServerTimestampResult = {
    timestamp: Date;
};
export type ImpersonateUserResult = {
    errors: Error[];
    sessionId?: string;
    success: boolean;
    userId?: ID;
};
export type InvalidateSessionsResult = {
    errors: Error[];
    success: boolean;
};
export type SetPasswordResult = string;
export type ChangeOwnPasswordResult = string;
export type ResetPasswordResult = {
    password: string;
};
export type GetAccessInfoResult = {
    accessMap: AccessMapping[];
};
export type AccessMapping = {
    accessName: string;
    accessible: boolean;
};
export type GetUserInfoResult = {
    accessibilityMode: boolean;
    chatterExternal: boolean;
    currencySymbol?: string;
    defaultAppIdForProfile?: ID;
    orgAttachmentFileSizeLimit: number;
    orgDefaultCurrencyIsoCode?: string;
    orgDefaultCurrencyLocale?: string;
    orgDisallowHtmlAttachments: boolean;
    orgHasPersonAccounts: boolean;
    organizationId: ID;
    organizationMultiCurrency: boolean;
    organizationName: string;
    profileId: ID;
    roleId?: ID;
    sessionSecondsValid: number;
    userDefaultCurrencyIsoCode?: string;
    userEmail: string;
    userFullName: string;
    userId: ID;
    userLanguage: string;
    userLocale: string;
    userName: string;
    userTimeZone: string;
    userType: string;
    userUiSkin: string;
};
export type LoginResult = {
    metadataServerUrl?: string;
    passwordExpired: boolean;
    sandbox: boolean;
    serverUrl?: string;
    sessionId?: string;
    upgradeMessage?: string;
    upgradeURL?: string;
    userId?: ID;
    userInfo?: GetUserInfoResult;
};
export type ExtendedErrorDetails = {
    extendedErrorCode: ExtendedErrorCode;
};
export type Error = {
    extendedErrorDetails?: ExtendedErrorDetails[];
    fields?: string[];
    message: string;
    statusCode: StatusCode;
};
export type SendEmailError = {
    fields?: string[];
    message: string;
    statusCode: StatusCode;
    targetObjectId?: ID;
};
export type SaveResult = {
    errors: Error[];
    id?: ID;
    success: boolean;
};
export type RenderEmailTemplateError = {
    fieldName: string;
    message: string;
    offset: number;
    statusCode: StatusCode;
};
export type UpsertResult = {
    created: boolean;
    errors: Error[];
    id?: ID;
    success: boolean;
};
export type PerformQuickActionResult = {
    contextId?: ID;
    created: boolean;
    errors: Error[];
    feedItemIds?: ID[];
    ids?: ID[];
    success: boolean;
    successMessage?: string;
};
export type QuickActionTemplateResult = {
    contextId?: string;
    defaultValueFormulas?: sObject;
    defaultValues?: sObject;
    errors: Error[];
    success: boolean;
};
export type MergeRequest = {
    additionalInformationMap: AdditionalInformationMap[];
    masterRecord: sObject;
    recordToMergeIds: ID[];
};
export type MergeResult = {
    errors: Error[];
    id?: ID;
    mergedRecordIds: ID[];
    success: boolean;
    updatedRelatedIds: ID[];
};
export type ProcessRequest = {
    comments?: string;
    nextApproverIds?: ID[];
};
export type ProcessSubmitRequest = ProcessRequest & {
    objectId: ID;
    submitterId?: ID;
    processDefinitionNameOrId?: string;
    skipEntryCriteria?: boolean;
};
export type ProcessWorkitemRequest = ProcessRequest & {
    action: string;
    workitemId: ID;
};
export type PerformQuickActionRequest = {
    contextId?: ID;
    quickActionName: string;
    records?: sObject[];
};
export type DescribeAvailableQuickActionResult = {
    actionEnumOrId: string;
    label: string;
    name: string;
    type: string;
};
export type DescribeQuickActionResult = {
    accessLevelRequired?: ShareAccessLevel;
    actionEnumOrId: string;
    canvasApplicationId?: ID;
    canvasApplicationName?: string;
    colors: DescribeColor[];
    contextSobjectType?: string;
    defaultValues?: DescribeQuickActionDefaultValue[];
    flowDevName?: string;
    flowRecordIdVar?: string;
    height?: number;
    iconName?: string;
    iconUrl?: string;
    icons: DescribeIcon[];
    label: string;
    layout?: DescribeLayoutSection;
    lightningComponentBundleId?: ID;
    lightningComponentBundleName?: string;
    lightningComponentQualifiedName?: string;
    lightningWebComponentBundleId?: ID;
    lightningWebComponentBundleName?: string;
    lightningWebComponentQualifiedName?: string;
    miniIconUrl?: string;
    mobileExtensionId?: string;
    name: string;
    showQuickActionLcHeader: boolean;
    showQuickActionVfHeader: boolean;
    targetParentField?: string;
    targetRecordTypeId?: ID;
    targetSobjectType?: string;
    type: string;
    visualforcePageName?: string;
    visualforcePageUrl?: string;
    width?: number;
};
export type DescribeQuickActionDefaultValue = {
    defaultValue?: string;
    field?: string;
};
export type DescribeVisualForceResult = {
    domain: string;
};
export type ProcessArticleRequest = ProcessWorkitemRequest & {
    version: string;
};
export type ProcessResult = {
    actorIds?: ID[];
    entityId?: ID;
    errors: Error[];
    instanceId?: ID;
    instanceStatus?: string;
    newWorkitemIds?: ID[];
    success: boolean;
};
export type DescribeWorkitemActionResult = {
    actions: AllowedWorkitemAction[];
    errors: Error[];
    success: boolean;
    targetObjectId: ID;
    workitemId: ID;
};
export type AllowedWorkitemAction = {
    versionRequired: boolean;
    commentsRequired: boolean;
    label: string;
    name: string;
    nextOwnerRequired: boolean;
};
export type DeleteResult = {
    errors?: Error[];
    id?: ID;
    success: boolean;
};
export type UndeleteResult = {
    errors: Error[];
    id?: ID;
    success: boolean;
};
export type DeleteByExampleResult = {
    entity?: sObject;
    errors?: Error[];
    rowCount?: number;
    success: boolean;
};
export type EmptyRecycleBinResult = {
    errors: Error[];
    id?: ID;
    success: boolean;
};
export type LeadConvert = {
    accountId?: ID;
    accountRecord?: sObject;
    bypassAccountDedupeCheck?: boolean;
    bypassContactDedupeCheck?: boolean;
    contactId?: ID;
    contactRecord?: sObject;
    convertedStatus: string;
    doNotCreateOpportunity: boolean;
    leadId: ID;
    opportunityId?: ID;
    opportunityName?: string;
    opportunityRecord?: sObject;
    overwriteLeadSource: boolean;
    ownerId?: ID;
    relatedPersonAccountId?: ID;
    relatedPersonAccountRecord?: sObject;
    sendNotificationEmail: boolean;
};
export type LeadConvertResult = {
    accountId?: ID;
    contactId?: ID;
    errors: Error[];
    leadId?: ID;
    opportunityId?: ID;
    relatedPersonAccountId?: ID;
    success: boolean;
};
export type AddCampaignMemberOptions = {
    campaignId?: ID;
    keepExistingStatus: boolean;
    leadOrContactIds?: ID;
    newStatus: string;
    reportId?: ID;
    reportMetadata: string;
};
export type AddCampaignMemberResult = {
    errors: Error[];
    numInserts: number;
    numUpdates: number;
    saveError: string;
    success: boolean;
};
export type DescribeSObjectResult = {
    actionOverrides?: ActionOverride[];
    activateable: boolean;
    associateEntityType?: string;
    associateParentEntity?: string;
    childRelationships: ChildRelationship[];
    compactLayoutable: boolean;
    createable: boolean;
    custom: boolean;
    customSetting: boolean;
    dataTranslationEnabled?: boolean;
    deepCloneable: boolean;
    defaultImplementation?: string;
    deletable: boolean;
    deprecatedAndHidden: boolean;
    feedEnabled: boolean;
    fields?: Field[];
    hasSubtypes: boolean;
    idEnabled: boolean;
    implementedBy?: string;
    implementsInterfaces?: string;
    isInterface: boolean;
    isSubtype: boolean;
    keyPrefix?: string;
    label: string;
    labelPlural: string;
    layoutable: boolean;
    listviewable?: boolean;
    lookupLayoutable?: boolean;
    mergeable: boolean;
    mruEnabled: boolean;
    name: string;
    namedLayoutInfos: NamedLayoutInfo[];
    networkScopeFieldName?: string;
    queryable: boolean;
    recordTypeInfos: RecordTypeInfo[];
    replicateable: boolean;
    retrieveable: boolean;
    searchLayoutable?: boolean;
    searchable: boolean;
    supportedScopes?: ScopeInfo[];
    triggerable?: boolean;
    undeletable: boolean;
    updateable: boolean;
    urlDetail?: string;
    urlEdit?: string;
    urlNew?: string;
};
export type DescribePicklistResult = {
    defaultValue?: PicklistEntry;
    multiSelectable: boolean;
    picklistValues: PicklistEntry[];
};
export type DescribePicklistsParam = {
    entityName: string;
    fieldNames: string;
    recordTypeId?: string;
};
export type DescribeGlobalSObjectResult = {
    activateable: boolean;
    associateEntityType?: string;
    associateParentEntity?: string;
    createable: boolean;
    custom: boolean;
    customSetting: boolean;
    dataTranslationEnabled?: boolean;
    deepCloneable: boolean;
    deletable: boolean;
    deprecatedAndHidden: boolean;
    feedEnabled: boolean;
    hasSubtypes: boolean;
    idEnabled: boolean;
    isInterface: boolean;
    isSubtype: boolean;
    keyPrefix?: string;
    label: string;
    labelPlural: string;
    layoutable: boolean;
    mergeable: boolean;
    mruEnabled: boolean;
    name: string;
    queryable: boolean;
    replicateable: boolean;
    retrieveable: boolean;
    searchable: boolean;
    triggerable: boolean;
    undeletable: boolean;
    updateable: boolean;
};
export type ChildRelationship = {
    cascadeDelete: boolean;
    childSObject: string;
    deprecatedAndHidden: boolean;
    field: string;
    junctionIdListNames?: string[];
    junctionReferenceTo?: string[];
    relationshipName?: string;
    restrictedDelete?: boolean;
};
export type DescribeGlobalResult = {
    encoding?: string;
    maxBatchSize: number;
    sobjects: DescribeGlobalSObjectResult[];
};
export type DescribeGlobalTheme = {
    global: DescribeGlobalResult;
    theme: DescribeThemeResult;
};
export type DiscoverSchemasResult = {
    schemas: Schema[];
};
export type Schema = {
    name: string;
};
export type DescribeSchemaResult = {
    fields: SchemaField[];
    keyPrefix?: string;
    name: string;
};
export type SchemaField = {
    digits: number;
    length: number;
    name: string;
    nillable: boolean;
    precision: number;
    scale: number;
    type: fieldType;
    unique: boolean;
};
export type ScopeInfo = {
    label: string;
    name: string;
};
export type DurableIdList = {
    ids: string[];
};
export type StringList = {
    values: string[];
};
export type ChangeEventHeader = {
    entityName: string;
    recordIds: string[];
    commitTimestamp: number;
    commitNumber: number;
    commitUser: string;
    diffFields: string[];
    changeType: changeEventType;
    changeOrigin: string;
    transactionKey: string;
    sequenceNumber: number;
    nulledFields: string[];
    changedFields: string[];
};
export type FilteredLookupInfo = {
    controllingFields: string[];
    dependent: boolean;
    optionalFilter: boolean;
};
export type Field = {
    aggregatable: boolean;
    aiPredictionField: boolean;
    autoNumber: boolean;
    byteLength: number;
    calculated: boolean;
    calculatedFormula?: string;
    cascadeDelete?: boolean;
    caseSensitive: boolean;
    compoundFieldName?: string;
    controllerName?: string;
    createable: boolean;
    custom: boolean;
    dataTranslationEnabled?: boolean;
    defaultValue?: any;
    defaultValueFormula?: string;
    defaultedOnCreate: boolean;
    dependentPicklist?: boolean;
    deprecatedAndHidden: boolean;
    digits: number;
    displayLocationInDecimal?: boolean;
    encrypted?: boolean;
    externalId?: boolean;
    extraTypeInfo?: string;
    filterable: boolean;
    filteredLookupInfo?: FilteredLookupInfo;
    formulaTreatNullNumberAsZero?: boolean;
    groupable: boolean;
    highScaleNumber?: boolean;
    htmlFormatted?: boolean;
    idLookup: boolean;
    inlineHelpText?: string;
    label: string;
    length: number;
    mask?: string;
    maskType?: string;
    name: string;
    nameField: boolean;
    namePointing?: boolean;
    nillable: boolean;
    permissionable: boolean;
    picklistValues?: PicklistEntry[];
    polymorphicForeignKey: boolean;
    precision: number;
    queryByDistance: boolean;
    referenceTargetField?: string;
    referenceTo?: string[];
    relationshipName?: string;
    relationshipOrder?: number;
    restrictedDelete?: boolean;
    restrictedPicklist: boolean;
    scale: number;
    searchPrefilterable: boolean;
    soapType: soapType;
    sortable?: boolean;
    type: fieldType;
    unique: boolean;
    updateable: boolean;
    writeRequiresMasterRead?: boolean;
};
export type PicklistEntry = {
    active: boolean;
    defaultValue: boolean;
    label?: string;
    validFor?: string;
    value: string;
};
export type DescribeDataCategoryGroupResult = {
    categoryCount: number;
    description: string;
    label: string;
    name: string;
    sobject: string;
};
export type DescribeDataCategoryGroupStructureResult = {
    description: string;
    label: string;
    name: string;
    sobject: string;
    topCategories: DataCategory[];
};
export type DataCategoryGroupSobjectTypePair = {
    dataCategoryGroupName: string;
    sobject: string;
};
export type DataCategory = {
    childCategories: DataCategory[];
    label: string;
    name: string;
};
export type DescribeDataCategoryMappingResult = {
    dataCategoryGroupId: string;
    dataCategoryGroupLabel: string;
    dataCategoryGroupName: string;
    dataCategoryId: string;
    dataCategoryLabel: string;
    dataCategoryName: string;
    id: string;
    mappedEntity: string;
    mappedField: string;
};
export type CommonEventResult = {
    success: boolean;
};
export type KnowledgeSettings = {
    defaultLanguage?: string;
    knowledgeEnabled: boolean;
    languages: KnowledgeLanguageItem[];
};
export type KnowledgeLanguageItem = {
    active: boolean;
    assigneeId?: string;
    name: string;
};
export type FieldDiff = {
    difference?: differenceType;
    name: string;
};
export type AdditionalInformationMap = {
    name: string;
    value: string;
};
export type MatchRecord = {
    additionalInformation: AdditionalInformationMap[];
    fieldDiffs: FieldDiff[];
    matchConfidence: number;
    record: sObject;
};
export type MatchResult = {
    entityType: string;
    errors: Error[];
    matchEngine: string;
    matchRecords: MatchRecord[];
    rule: string;
    size: number;
    success: boolean;
};
export type DuplicateResult = {
    allowSave: boolean;
    duplicateRule: string;
    duplicateRuleEntityType: string;
    errorMessage?: string;
    matchResults: MatchResult[];
};
export type DuplicateError = Error & {
    duplicateResult: DuplicateResult;
};
export type DescribeNounResult = {
    caseValues: NameCaseValue[];
    developerName: string;
    gender?: Gender;
    name: string;
    pluralAlias?: string;
    startsWith?: StartsWith;
};
export type NameCaseValue = {
    article?: Article;
    caseType?: CaseType;
    number?: GrammaticalNumber;
    possessive?: Possessive;
    value?: string;
};
export type ObjectMapping = {
    inputObject?: string;
    objectMappingFields?: ObjectMappingField[];
    outputObject?: string;
};
export type ObjectMappingField = {
    inputField?: string;
    inputLookupObject?: string;
    outputField?: string;
    outputLookupObject?: string;
};
export type DescribeDuplicateRuleResult = {
    actionOnInsert?: DuplicateActionType;
    actionOnUpdate?: DuplicateActionType;
    active: boolean;
    alertMessage?: string;
    developerName: string;
    duplicateFilters: DuplicateRuleFilter[];
    duplicateRuleMatchInfos: DuplicateRuleMatchInfo[];
    name: string;
    operationsOnInsert?: string[];
    operationsOnUpdate?: string[];
    securityOption?: DuplicateSecurityOptionType;
    sortOrder: number;
};
export type DuplicateRuleFilter = {
    booleanFilter: string;
    filterItems: DuplicateRuleFilterItem[];
    ruleCritera: string;
};
export type DuplicateRuleFilterItem = {
    field: string;
    operation: string;
    sortOrder: number;
    value: string;
};
export type DuplicateRuleMatchInfo = {
    entityType?: string;
    mapped: boolean;
    matchEngine?: string;
    matchFields?: string[];
    matchRuleName?: string;
    objectMapping?: ObjectMapping;
};
export type FindDuplicatesResult = {
    duplicateResults: DuplicateResult[];
    errors: Error[];
    success: boolean;
};
export type DescribeFlexiPageResult = {
    id: ID;
    label: string;
    name: string;
    quickActionList?: DescribeQuickActionListResult;
    regions: DescribeFlexiPageRegion[];
    sobjectType?: string;
    template?: string;
    type: string;
};
export type DescribeFlexiPageRegion = {
    components: DescribeComponentInstance[];
    name: string;
};
export type DescribeComponentInstance = {
    properties: DescribeComponentInstanceProperty[];
    typeName: string;
    typeNamespace: string;
};
export type DescribeComponentInstanceProperty = {
    name: string;
    region?: DescribeFlexiPageRegion;
    type?: ComponentInstancePropertyTypeEnum;
    value?: string;
};
export type FlexipageContext = {
    type: FlexipageContextTypeEnum;
    value: string;
};
export type DescribeAppMenuResult = {
    appMenuItems: DescribeAppMenuItem[];
};
export type DescribeAppMenuItem = {
    colors: DescribeColor[];
    content: string;
    icons: DescribeIcon[];
    label: string;
    name: string;
    type: string;
    url: string;
};
export type DescribeThemeResult = {
    themeItems: DescribeThemeItem[];
};
export type DescribeThemeItem = {
    colors: DescribeColor[];
    icons: DescribeIcon[];
    name: string;
};
export type DescribeSoftphoneLayoutResult = {
    callTypes: DescribeSoftphoneLayoutCallType[];
    id: ID;
    name: string;
};
export type DescribeSoftphoneLayoutCallType = {
    infoFields: DescribeSoftphoneLayoutInfoField[];
    name: string;
    screenPopOptions: DescribeSoftphoneScreenPopOption[];
    screenPopsOpenWithin?: string;
    sections: DescribeSoftphoneLayoutSection[];
};
export type DescribeSoftphoneScreenPopOption = {
    matchType: string;
    screenPopData: string;
    screenPopType: string;
};
export type DescribeSoftphoneLayoutInfoField = {
    name: string;
};
export type DescribeSoftphoneLayoutSection = {
    entityApiName: string;
    items: DescribeSoftphoneLayoutItem[];
};
export type DescribeSoftphoneLayoutItem = {
    itemApiName: string;
};
export type DescribeCompactLayoutsResult = {
    compactLayouts: DescribeCompactLayout[];
    defaultCompactLayoutId: ID;
    recordTypeCompactLayoutMappings: RecordTypeCompactLayoutMapping[];
};
export type DescribeCompactLayout = {
    actions: DescribeLayoutButton[];
    fieldItems: DescribeLayoutItem[];
    id: ID;
    imageItems: DescribeLayoutItem[];
    label: string;
    name: string;
    objectType: string;
};
export type RecordTypeCompactLayoutMapping = {
    available: boolean;
    compactLayoutId?: ID;
    compactLayoutName: string;
    recordTypeId: ID;
    recordTypeName: string;
};
export type DescribePathAssistantsResult = {
    pathAssistants: DescribePathAssistant[];
};
export type DescribePathAssistant = {
    active: boolean;
    animationRule?: DescribeAnimationRule[];
    apiName: string;
    label: string;
    pathPicklistField: string;
    picklistsForRecordType?: PicklistForRecordType[];
    recordTypeId?: ID;
    steps: DescribePathAssistantStep[];
};
export type DescribePathAssistantStep = {
    closed: boolean;
    converted: boolean;
    fields: DescribePathAssistantField[];
    info?: string;
    layoutSection?: DescribeLayoutSection;
    picklistLabel: string;
    picklistValue: string;
    won: boolean;
};
export type DescribePathAssistantField = {
    apiName: string;
    label: string;
    readOnly: boolean;
    required: boolean;
};
export type DescribeAnimationRule = {
    animationFrequency: string;
    isActive: boolean;
    recordTypeContext: string;
    recordTypeId?: string;
    targetField: string;
    targetFieldChangeToValues: string;
};
export type DescribeApprovalLayoutResult = {
    approvalLayouts: DescribeApprovalLayout[];
};
export type DescribeApprovalLayout = {
    id: ID;
    label: string;
    layoutItems: DescribeLayoutItem[];
    name: string;
};
export type DescribeLayoutResult = {
    layouts: DescribeLayout[];
    recordTypeMappings: RecordTypeMapping[];
    recordTypeSelectorRequired: boolean;
};
export type DescribeLayout = {
    buttonLayoutSection?: DescribeLayoutButtonSection;
    detailLayoutSections: DescribeLayoutSection[];
    editLayoutSections: DescribeLayoutSection[];
    feedView?: DescribeLayoutFeedView;
    highlightsPanelLayoutSection?: DescribeLayoutSection;
    id?: ID;
    multirowEditLayoutSections: DescribeLayoutSection[];
    offlineLinks: OfflineLink[];
    quickActionList?: DescribeQuickActionListResult;
    relatedContent?: RelatedContent;
    relatedLists: RelatedList[];
    saveOptions: DescribeLayoutSaveOption[];
};
export type DescribeMiniLayoutResult = {
    layouts: DescribeLayout[];
    recordTypeMappings: RecordTypeMapping[];
    recordTypeSelectorRequired: boolean;
};
export type DescribeQuickActionListResult = {
    quickActionListItems: DescribeQuickActionListItemResult[];
};
export type DescribeQuickActionListItemResult = {
    accessLevelRequired?: ShareAccessLevel;
    colors: DescribeColor[];
    iconUrl?: string;
    icons: DescribeIcon[];
    label: string;
    miniIconUrl: string;
    quickActionName: string;
    targetSobjectType?: string;
    type: string;
};
export type DescribeLayoutFeedView = {
    feedFilters: DescribeLayoutFeedFilter[];
};
export type DescribeLayoutFeedFilter = {
    label: string;
    name: string;
    type: FeedLayoutFilterType;
};
export type DescribeLayoutSaveOption = {
    defaultValue: boolean;
    isDisplayed: boolean;
    label: string;
    name: string;
    restHeaderName: string;
    soapHeaderName: string;
};
export type DescribeLayoutSection = {
    collapsed: boolean;
    columns: number;
    heading?: string;
    layoutRows: DescribeLayoutRow[];
    layoutSectionId?: ID;
    parentLayoutId: ID;
    rows: number;
    tabOrder: TabOrderType;
    useCollapsibleSection: boolean;
    useHeading: boolean;
};
export type DescribeLayoutButtonSection = {
    detailButtons: DescribeLayoutButton[];
};
export type DescribeLayoutRow = {
    layoutItems: DescribeLayoutItem[];
    numItems: number;
};
export type DescribeLayoutItem = {
    editableForNew: boolean;
    editableForUpdate: boolean;
    label?: string;
    layoutComponents: DescribeLayoutComponent[];
    placeholder: boolean;
    required: boolean;
};
export type DescribeLayoutButton = {
    behavior?: WebLinkWindowType;
    colors: DescribeColor[];
    content?: string;
    contentSource?: WebLinkType;
    custom: boolean;
    encoding?: string;
    height?: number;
    icons: DescribeIcon[];
    label?: string;
    menubar?: boolean;
    name?: string;
    overridden: boolean;
    resizeable?: boolean;
    scrollbars?: boolean;
    showsLocation?: boolean;
    showsStatus?: boolean;
    toolbar?: boolean;
    url?: string;
    width?: number;
    windowPosition?: WebLinkPosition;
};
export type DescribeLayoutComponent = {
    displayLines: number;
    tabOrder: number;
    type: layoutComponentType;
    value?: string;
};
export type FieldComponent = DescribeLayoutComponent & {
    field: Field;
};
export type FieldLayoutComponent = DescribeLayoutComponent & {
    components: DescribeLayoutComponent[];
    fieldType: fieldType;
};
export type VisualforcePage = DescribeLayoutComponent & {
    showLabel: boolean;
    showScrollbars: boolean;
    suggestedHeight: string;
    suggestedWidth: string;
    url: string;
};
export type Canvas = DescribeLayoutComponent & {
    displayLocation: string;
    referenceId: string;
    showLabel: boolean;
    showScrollbars: boolean;
    suggestedHeight: string;
    suggestedWidth: string;
};
export type ReportChartComponent = DescribeLayoutComponent & {
    cacheData: boolean;
    contextFilterableField: string;
    error: string;
    hideOnError: boolean;
    includeContext: boolean;
    showTitle: boolean;
    size: ReportChartSize;
};
export type AnalyticsCloudComponent = DescribeLayoutComponent & {
    error: string;
    filter: string;
    height: string;
    hideOnError: boolean;
    showSharing: boolean;
    showTitle: boolean;
    width: string;
};
export type FieldCriteria = {
    criteria: FieldCriterion[];
};
export type FieldCriterion = {
    columnName: string;
    operand: string;
    operator: string;
};
export type CustomLinkComponent = DescribeLayoutComponent & {
    customLink: DescribeLayoutButton;
};
export type NamedLayoutInfo = {
    name: string;
};
export type RecordTypeInfo = {
    active: boolean;
    available: boolean;
    defaultRecordTypeMapping: boolean;
    developerName: string;
    master: boolean;
    name: string;
    recordTypeId?: ID;
};
export type RecordTypeMapping = {
    active: boolean;
    available: boolean;
    defaultRecordTypeMapping: boolean;
    developerName: string;
    layoutId: ID;
    master: boolean;
    name: string;
    picklistsForRecordType?: PicklistForRecordType[];
    recordTypeId?: ID;
};
export type PicklistForRecordType = {
    picklistName: string;
    picklistValues?: PicklistEntry[];
};
export type RelatedContent = {
    relatedContentItems: DescribeRelatedContentItem[];
};
export type DescribeRelatedContentItem = {
    describeLayoutItem: DescribeLayoutItem;
};
export type RelatedList = {
    accessLevelRequiredForCreate?: ShareAccessLevel;
    buttons?: DescribeLayoutButton[];
    columns: RelatedListColumn[];
    custom: boolean;
    field?: string;
    label: string;
    limitRows: number;
    name: string;
    sobject?: string;
    sort: RelatedListSort[];
};
export type RelatedListColumn = {
    field?: string;
    fieldApiName: string;
    format?: string;
    label: string;
    lookupId?: string;
    name: string;
    sortable: boolean;
};
export type RelatedListSort = {
    ascending: boolean;
    column: string;
};
export type OfflineLink = {
    name: string;
    openType: string;
    position: string;
    properties: string;
    url: string;
    x: number;
    y: number;
};
export type EmailAttachment = {
    body?: string;
    contentId?: string;
    contentType: string;
    fileName: string;
};
export type HandledEmailMessage = {
    attachments: EmailAttachment[];
    headers: NameValuePair[];
    htmlBody: string;
    subject: string;
    textBody: string;
};
export type EmailFileAttachment = {
    body?: string;
    contentType?: string;
    fileName: string;
    id?: ID;
    inline?: boolean;
};
export type Email = {
    bccSender?: boolean;
    emailPriority?: EmailPriority;
    replyTo?: string;
    saveAsActivity?: boolean;
    senderDisplayName?: string;
    subject?: string;
    useSignature?: boolean;
};
export type MassEmailMessage = Email & {
    description?: string;
    targetObjectIds?: ID;
    templateId: ID;
    whatIds?: ID;
};
export type SingleEmailMessage = Email & {
    bccAddresses?: string;
    ccAddresses?: string;
    charset?: string;
    documentAttachments: ID[];
    entityAttachments: ID[];
    fileAttachments: EmailFileAttachment[];
    htmlBody?: string;
    inReplyTo?: string;
    optOutPolicy?: SendEmailOptOutPolicy;
    orgWideEmailAddressId?: ID;
    plainTextBody?: string;
    references?: string;
    targetObjectId?: ID;
    templateId?: ID;
    templateName?: string;
    toAddresses?: string;
    treatBodiesAsTemplate?: boolean;
    treatTargetObjectAsRecipient?: boolean;
    whatId?: ID;
};
export type SendEmailResult = {
    errors: SendEmailError[];
    success: boolean;
};
export type DescribeListViewResult = {
    listViews: DescribeListView[];
};
export type DescribeListView = {
    filterLanguage?: string;
    id: ID;
    limitRows: number;
    listViewAdvancedFilter?: string;
    listViewColumns: DescribeColumn[];
    listViewFilters: DescribeFilter[];
    listViewName: string;
    listViewScopeFilters: DescribeFilter[];
    relatedEntityId?: ID;
    scope?: queryOptionsScope;
    scopeEntityId?: ID;
    sobjectName?: string;
};
export type DescribeFilter = {
    column: string;
    negated: boolean;
    operator: string;
    value: string[];
    valueSeparator: string;
};
export type DescribeColumn = {
    field: string;
    format?: string;
    label: string;
    name: string;
};
export type DescribeSort = {
    ascending: boolean;
    column: string;
};
export type DescribeLookupLayoutResult = {
    label: string;
    limitRows: number;
    lookupColumns: DescribeColumn[];
};
export type ListViewColumn = {
    ascendingLabel?: string;
    descendingLabel?: string;
    fieldNameOrPath: string;
    hidden: boolean;
    label: string;
    searchable: boolean;
    selectListItem: string;
    sortDirection?: orderByDirection;
    sortIndex?: number;
    sortable: boolean;
    type: fieldType;
};
export type ListViewOrderBy = {
    fieldNameOrPath: string;
    nullsPosition?: orderByNullsPosition;
    sortDirection?: orderByDirection;
};
export type DescribeSoqlListView = {
    columns: ListViewColumn[];
    id: ID;
    orderBy: ListViewOrderBy[];
    query: string;
    relatedEntityId?: ID;
    scope?: string;
    scopeEntityId?: ID;
    sobjectType: string;
    whereCondition?: SoqlWhereCondition;
};
export type DescribeSoqlListViewsRequest = {
    listViewParams: DescribeSoqlListViewParams[];
};
export type DescribeSoqlListViewParams = {
    developerNameOrId: string;
    sobjectType?: string;
};
export type DescribeSoqlListViewResult = {
    describeSoqlListViews: DescribeSoqlListView[];
};
export type ExecuteListViewRequest = {
    developerNameOrId: string;
    limit?: number;
    offset?: number;
    orderBy: ListViewOrderBy[];
    sobjectType: string;
};
export type ExecuteListViewResult = {
    columns: ListViewColumn[];
    developerName: string;
    done: boolean;
    id: ID;
    label: string;
    records: ListViewRecord[];
    size: number;
};
export type ListViewRecord = {
    columns: ListViewRecordColumn[];
};
export type ListViewRecordColumn = {
    fieldNameOrPath: string;
    value?: string;
};
export type SoqlWhereCondition = string;
export type SoqlCondition = SoqlWhereCondition & {
    field: string;
    operator: soqlOperator;
    values: string[];
};
export type SoqlNotCondition = SoqlWhereCondition & {
    condition: SoqlWhereCondition;
};
export type SoqlConditionGroup = SoqlWhereCondition & {
    conditions: SoqlWhereCondition[];
    conjunction: soqlConjunction;
};
export type SoqlSubQueryCondition = SoqlWhereCondition & {
    field: string;
    operator: soqlOperator;
    subQuery: string;
};
export type DescribeSearchLayoutResult = {
    errorMsg?: string;
    label?: string;
    limitRows?: number;
    objectType: string;
    searchColumns?: DescribeColumn[];
};
export type DescribeSearchScopeOrderResult = {
    keyPrefix: string;
    name: string;
};
export type DescribeSearchableEntityResult = {
    label: string;
    name: string;
    pluralLabel: string;
};
export type DescribeTabSetResult = {
    description: string;
    label: string;
    logoUrl: string;
    namespace?: string;
    selected: boolean;
    tabSetId: string;
    tabs: DescribeTab[];
};
export type DescribeTab = {
    colors: DescribeColor[];
    custom: boolean;
    iconUrl: string;
    icons: DescribeIcon[];
    label: string;
    miniIconUrl: string;
    name: string;
    sobjectName?: string;
    url: string;
};
export type DescribeColor = {
    color: string;
    context: string;
    theme: string;
};
export type DescribeIcon = {
    contentType: string;
    height?: number;
    theme: string;
    url: string;
    width?: number;
};
export type ActionOverride = {
    formFactor?: string;
    isAvailableInTouch: boolean;
    name: string;
    pageId: ID;
    url?: string;
};
export type ActivateResult = {
    errors: Error[];
    id?: ID;
    success: boolean;
};
export type SnapshotItem = {
    oid: ID;
    uid: ID;
};
export type SnapshotResult = {
    add: SnapshotItem[];
    fullSnapshot: boolean;
    id: ID;
    locator?: string;
    remove: SnapshotItem[];
};
export type SyncOfflineDataResult = {
    lastConfigChange: Date;
    lastFullQuery: Date;
    lastQuery: Date;
    lastReset: Date;
    removed: ID[];
    timestamp: Date;
    token: string;
    updates: QueryResult;
};
export type EmailSyncAdvancedSetting = {
    name: string;
    type: string;
    value: string;
};
export type EmailSyncEntity = {
    clientFolderName?: string;
    conflictResolution: EmailSyncConflictResolution;
    dataSetFilter?: string;
    fieldMapping: EmailSyncFieldMapping[];
    matchPreference?: EmailSyncMatchPreference;
    name: string;
    recordTypeId?: ID;
    syncDirection: EmailSyncDirection;
    syncFollowed: boolean;
};
export type EmailSyncFieldMapping = {
    clientName: string;
    clientType: EmailSyncClientFieldType;
    name: string;
    type: fieldType;
    usedForMatching: boolean;
    valueMapping: EmailSyncFieldValueMapping[];
};
export type EmailSyncFieldValueMapping = {
    clientValue: string;
    value: string;
};
export type EmailSyncRoutingAddress = {
    emailAddress: string;
    fromAddressFilter: string[];
    name: string;
};
export type DescribeEmailSyncSettings = {
    addCase: boolean;
    addEmail: boolean;
    addEmailAttachment: boolean;
    advancedSetting: EmailSyncAdvancedSetting[];
    attachmentSizeLimit?: number;
    automaticallySyncOutlookObjects: boolean;
    cannotChangeClientSyncSetting: boolean;
    clientVersionNumber?: string;
    emailToCaseRoutingAddress: EmailSyncRoutingAddress[];
    entitySetting: EmailSyncEntity[];
    expandedRecurringEventSyncWindow: boolean;
    isSyncThrottlingEnabled: boolean;
    logActivityEmailAddress?: string;
    personAccountRecordTypeId?: ID;
    recurringEvents: boolean;
    recurringTasks: boolean;
    showPersonAccountsAsAccounts: boolean;
    showPersonAccountsAsContacts: boolean;
    sidePanel: boolean;
    upgradeNotification: boolean;
};
export type DescribeMobileResult = {
    configured: boolean;
    defaultConfiguration: boolean;
    emailSyncSettings?: DescribeEmailSyncSettings;
    feedEnabledObjects: DescribeMobileSObject[];
    mobileSObject: DescribeMobileSObject[];
    mobileSettings?: DescribeMobileSettings;
    mobileView: DescribeMobileView[];
    mobileViewDispColumn: DescribeMobileViewDispColumn[];
    mobileViewFilter: DescribeMobileViewFilter[];
    mobileViewSortOrder: DescribeMobileViewSortOrder[];
    tabSet: DescribeTabSetResult[];
};
export type DescribeMobileSObject = {
    iconUrl?: string;
    layout?: DescribeLayoutResult;
    searchLayout?: DescribeSearchLayoutResult;
    sobject: DescribeSObjectResult;
};
export type DescribeMobileView = {
    SObject: string;
    matchAll: boolean;
    name: string;
    viewId: ID;
};
export type DescribeMobileViewDispColumn = {
    column: number;
    field: string;
    viewId: ID;
};
export type DescribeMobileViewFilter = {
    field: string;
    operator: string;
    value: string;
    viewId: ID;
};
export type DescribeMobileViewSortOrder = {
    ascending: boolean;
    field: string;
    order: number;
    viewId: ID;
};
export type DescribeMobileSettings = {
    lockUserToMobileDevice: boolean;
    mappingURL: string;
    maxTextFieldSize?: number;
    mobileDeviceHelpUrl?: string;
    mobileLite: boolean;
    mobilizeFollowed: boolean;
    multiDayEventsEnabled: boolean;
};
export type RenderEmailTemplateRequest = {
    escapeHtmlInMergeFields?: boolean;
    templateBodies?: string;
    whatId?: ID;
    whoId?: ID;
};
export type RenderEmailTemplateBodyResult = {
    errors: RenderEmailTemplateError[];
    mergedBody?: string;
    success: boolean;
};
export type RenderEmailTemplateResult = {
    bodyResults?: RenderEmailTemplateBodyResult;
    errors: Error[];
    success: boolean;
};
export type RenderStoredEmailTemplateRequest = {
    attachmentRetrievalOption?: AttachmentRetrievalOption;
    templateId?: ID;
    updateTemplateUsage?: boolean;
    whatId?: ID;
    whoId?: ID;
};
export type RenderStoredEmailTemplateResult = {
    errors: Error[];
    renderedEmail?: SingleEmailMessage;
    success: boolean;
};
export type Fact = {
    fact: MetadataVersionCheckFact;
    subject: string;
    token: string;
};
export type LogInfo = {
    category: LogCategory;
    level: LogCategoryLevel;
};
export type PackageVersion = {
    majorNumber: number;
    minorNumber: number;
    namespace: string;
};
export type LimitInfo = {
    appName?: string;
    current: number;
    limit: number;
    type: string;
};
export type MatchOptions = {
    fields: string;
    matchEngine: string;
    maxMatchResults: number;
    minMatchConfidence: number;
    rule: string;
    sObjectType: string;
};
export type OwnerChangeOption = {
    type: OwnerChangeOptionType;
    execute: boolean;
};
export type ApiFault = {
    exceptionCode: ExceptionCode;
    exceptionMessage: string;
    extendedErrorDetails?: ExtendedErrorDetails[];
    upgradeURL?: string;
    upgradeMessage?: string;
};
export type ApiQueryFault = ApiFault & {
    row: number;
    column: number;
};
export type ApiSchemaTypes = {
    ID: ID;
    json: json;
    QueryLocator: QueryLocator;
    briefcaseType: briefcaseType;
    StatusCode: StatusCode;
    ExtendedErrorCode: ExtendedErrorCode;
    ShareAccessLevel: ShareAccessLevel;
    changeEventType: changeEventType;
    fieldType: fieldType;
    soapType: soapType;
    differenceType: differenceType;
    Article: Article;
    CaseType: CaseType;
    Gender: Gender;
    GrammaticalNumber: GrammaticalNumber;
    Possessive: Possessive;
    StartsWith: StartsWith;
    DuplicateActionType: DuplicateActionType;
    DuplicateSecurityOptionType: DuplicateSecurityOptionType;
    ComponentInstancePropertyTypeEnum: ComponentInstancePropertyTypeEnum;
    FlexipageContextTypeEnum: FlexipageContextTypeEnum;
    FeedLayoutFilterType: FeedLayoutFilterType;
    TabOrderType: TabOrderType;
    WebLinkWindowType: WebLinkWindowType;
    WebLinkPosition: WebLinkPosition;
    WebLinkType: WebLinkType;
    layoutComponentType: layoutComponentType;
    ReportChartSize: ReportChartSize;
    EmailPriority: EmailPriority;
    SendEmailOptOutPolicy: SendEmailOptOutPolicy;
    AttachmentRetrievalOption: AttachmentRetrievalOption;
    orderByDirection: orderByDirection;
    orderByNullsPosition: orderByNullsPosition;
    soqlOperator: soqlOperator;
    soqlConjunction: soqlConjunction;
    EmailSyncDirection: EmailSyncDirection;
    EmailSyncConflictResolution: EmailSyncConflictResolution;
    EmailSyncMatchPreference: EmailSyncMatchPreference;
    EmailSyncClientFieldType: EmailSyncClientFieldType;
    SchemaScope: SchemaScope;
    SchemaType: SchemaType;
    EventName: EventName;
    AppMenuType: AppMenuType;
    UiType: UiType;
    listViewIsSoqlCompatible: listViewIsSoqlCompatible;
    PerfOption: PerfOption;
    queryOptionsScope: queryOptionsScope;
    DebugLevel: DebugLevel;
    MetadataVersionCheckFact: MetadataVersionCheckFact;
    Operation: Operation;
    LogCategory: LogCategory;
    LogCategoryLevel: LogCategoryLevel;
    OwnerChangeOptionType: OwnerChangeOptionType;
    RequestOrigin: RequestOrigin;
    ExceptionCode: ExceptionCode;
    FaultCode: FaultCode;
    findDuplicates: findDuplicates;
    findDuplicatesByIds: findDuplicatesByIds;
    findDuplicatesByIdsResponse: findDuplicatesByIdsResponse;
    findDuplicatesResponse: findDuplicatesResponse;
    createSnapshot: createSnapshot;
    createSnapshotResponse: createSnapshotResponse;
    moreSnapshot: moreSnapshot;
    moreSnapshotResponse: moreSnapshotResponse;
    ackSnapshot: ackSnapshot;
    ackSnapshotResponse: ackSnapshotResponse;
    syncOfflineData: syncOfflineData;
    syncOfflineDataResponse: syncOfflineDataResponse;
    ackSyncOfflineData: ackSyncOfflineData;
    ackSyncOfflineDataResponse: ackSyncOfflineDataResponse;
    describeMobile: describeMobile;
    describeMobileResponse: describeMobileResponse;
    loginXi: loginXi;
    loginXiResponse: loginXiResponse;
    login: login;
    loginResponse: loginResponse;
    describeSObject: describeSObject;
    describeSObjectResponse: describeSObjectResponse;
    discoverSchemas: discoverSchemas;
    discoverSchemasResponse: discoverSchemasResponse;
    describeSchema: describeSchema;
    describeSchemaResponse: describeSchemaResponse;
    describePicklists: describePicklists;
    describePicklistsResponse: describePicklistsResponse;
    captureCommonEvent: captureCommonEvent;
    captureCommonEventResponse: captureCommonEventResponse;
    describeSObjects: describeSObjects;
    describeSObjectsResponse: describeSObjectsResponse;
    describeGlobal: describeGlobal;
    describeGlobalResponse: describeGlobalResponse;
    describeGlobalTheme: describeGlobalTheme;
    describeGlobalThemeResponse: describeGlobalThemeResponse;
    describeTheme: describeTheme;
    describeThemeResponse: describeThemeResponse;
    describeDataCategoryGroups: describeDataCategoryGroups;
    describeDataCategoryGroupsResponse: describeDataCategoryGroupsResponse;
    describeDataCategoryGroupStructures: describeDataCategoryGroupStructures;
    describeDataCategoryGroupStructuresResponse: describeDataCategoryGroupStructuresResponse;
    describeDataCategoryMappings: describeDataCategoryMappings;
    describeDataCategoryMappingsResponse: describeDataCategoryMappingsResponse;
    describeKnowledgeSettings: describeKnowledgeSettings;
    describeKnowledgeSettingsResponse: describeKnowledgeSettingsResponse;
    describeDuplicateRules: describeDuplicateRules;
    describeDuplicateRulesResponse: describeDuplicateRulesResponse;
    ftestPatch: ftestPatch;
    ftestPatchResponse: ftestPatchResponse;
    ftestPatchPreviousVersion: ftestPatchPreviousVersion;
    ftestPatchPreviousVersionResponse: ftestPatchPreviousVersionResponse;
    describeFlexiPages: describeFlexiPages;
    describeFlexiPagesResponse: describeFlexiPagesResponse;
    describeAppMenu: describeAppMenu;
    describeAppMenuResponse: describeAppMenuResponse;
    describeLayout: describeLayout;
    describeLayoutByUiType: describeLayoutByUiType;
    describeLayoutByUiTypeResponse: describeLayoutByUiTypeResponse;
    describeLayoutResponse: describeLayoutResponse;
    describeMiniLayout: describeMiniLayout;
    describeMiniLayoutResponse: describeMiniLayoutResponse;
    describeCompactLayouts: describeCompactLayouts;
    describeCompactLayoutsResponse: describeCompactLayoutsResponse;
    describePrimaryCompactLayouts: describePrimaryCompactLayouts;
    describePrimaryCompactLayoutsResponse: describePrimaryCompactLayoutsResponse;
    describePathAssistants: describePathAssistants;
    describePathAssistantsResponse: describePathAssistantsResponse;
    describeApprovalLayout: describeApprovalLayout;
    describeApprovalLayoutResponse: describeApprovalLayoutResponse;
    describeSoftphoneLayout: describeSoftphoneLayout;
    describeSoftphoneLayoutResponse: describeSoftphoneLayoutResponse;
    describeListViews: describeListViews;
    describeListViewsResponse: describeListViewsResponse;
    describeLookupLayouts: describeLookupLayouts;
    describeLookupLayoutsResponse: describeLookupLayoutsResponse;
    describeSoqlListViews: describeSoqlListViews;
    describeSoqlListViewsResponse: describeSoqlListViewsResponse;
    executeListView: executeListView;
    executeListViewResponse: executeListViewResponse;
    describeSObjectListViews: describeSObjectListViews;
    describeSObjectListViewsResponse: describeSObjectListViewsResponse;
    describeSearchLayouts: describeSearchLayouts;
    describeSearchLayoutsResponse: describeSearchLayoutsResponse;
    describeSearchScopeOrder: describeSearchScopeOrder;
    describeSearchScopeOrderResponse: describeSearchScopeOrderResponse;
    describeSearchableEntities: describeSearchableEntities;
    describeSearchableEntitiesResponse: describeSearchableEntitiesResponse;
    describeTabs: describeTabs;
    describeTabsResponse: describeTabsResponse;
    describeAllTabs: describeAllTabs;
    describeAllTabsResponse: describeAllTabsResponse;
    describeNouns: describeNouns;
    describeNounsResponse: describeNounsResponse;
    create: create;
    createResponse: createResponse;
    sendEmail: sendEmail;
    sendEmailResponse: sendEmailResponse;
    renderEmailTemplate: renderEmailTemplate;
    renderEmailTemplateResponse: renderEmailTemplateResponse;
    renderStoredEmailTemplate: renderStoredEmailTemplate;
    renderStoredEmailTemplateResponse: renderStoredEmailTemplateResponse;
    sendEmailMessage: sendEmailMessage;
    sendEmailMessageResponse: sendEmailMessageResponse;
    emailMerge: emailMerge;
    emailMergeResponse: emailMergeResponse;
    update: update;
    updateResponse: updateResponse;
    upsert: upsert;
    upsertResponse: upsertResponse;
    merge: merge;
    mergeResponse: mergeResponse;
    delete_: delete_;
    deleteResponse: deleteResponse;
    deleteByExample: deleteByExample;
    deleteByExampleResponse: deleteByExampleResponse;
    undelete: undelete;
    undeleteResponse: undeleteResponse;
    updateSettings: updateSettings;
    updateSettingsResponse: updateSettingsResponse;
    emptyRecycleBin: emptyRecycleBin;
    emptyRecycleBinResponse: emptyRecycleBinResponse;
    process: process;
    processResponse: processResponse;
    performQuickActions: performQuickActions;
    performQuickActionsResponse: performQuickActionsResponse;
    retrieveMassQuickActionTemplates: retrieveMassQuickActionTemplates;
    retrieveMassQuickActionTemplatesResponse: retrieveMassQuickActionTemplatesResponse;
    retrieveQuickActionTemplates: retrieveQuickActionTemplates;
    retrieveQuickActionTemplatesResponse: retrieveQuickActionTemplatesResponse;
    describeQuickActions: describeQuickActions;
    describeQuickActionsResponse: describeQuickActionsResponse;
    describeQuickActionsForRecordType: describeQuickActionsForRecordType;
    describeQuickActionsForRecordTypeResponse: describeQuickActionsForRecordTypeResponse;
    describeAvailableQuickActions: describeAvailableQuickActions;
    describeAvailableQuickActionsResponse: describeAvailableQuickActionsResponse;
    describeVisualForce: describeVisualForce;
    describeVisualForceResponse: describeVisualForceResponse;
    describeWorkitemActions: describeWorkitemActions;
    describeWorkitemActionsResponse: describeWorkitemActionsResponse;
    retrieve: retrieve;
    retrieveResponse: retrieveResponse;
    retrieveDefaultValues: retrieveDefaultValues;
    retrieveDefaultValuesResponse: retrieveDefaultValuesResponse;
    convertLead: convertLead;
    convertLeadResponse: convertLeadResponse;
    addCampaignMember: addCampaignMember;
    addCampaignMemberResponse: addCampaignMemberResponse;
    getUpdated: getUpdated;
    getUpdatedResponse: getUpdatedResponse;
    getDeleted: getDeleted;
    getDeletedResponse: getDeletedResponse;
    impersonateUser: impersonateUser;
    impersonateUserResponse: impersonateUserResponse;
    logout: logout;
    logoutResponse: logoutResponse;
    invalidateSessions: invalidateSessions;
    invalidateSessionsResponse: invalidateSessionsResponse;
    canViewFlow: canViewFlow;
    canViewFlowResponse: canViewFlowResponse;
    startFlowInterview: startFlowInterview;
    startFlowInterviewResponse: startFlowInterviewResponse;
    resumeFlowInterview: resumeFlowInterview;
    resumeFlowInterviewResponse: resumeFlowInterviewResponse;
    runFlowTest: runFlowTest;
    runFlowTestResponse: runFlowTestResponse;
    generateFlowTest: generateFlowTest;
    generateFlowTestResponse: generateFlowTestResponse;
    getFlowInterviewHistory: getFlowInterviewHistory;
    getFlowInterviewHistoryResponse: getFlowInterviewHistoryResponse;
    navigateFlowInterview: navigateFlowInterview;
    navigateFlowInterviewResponse: navigateFlowInterviewResponse;
    query: query;
    queryResponse: queryResponse;
    queryAll: queryAll;
    queryAllResponse: queryAllResponse;
    queryMore: queryMore;
    queryMoreResponse: queryMoreResponse;
    setupBriefcase: setupBriefcase;
    setupBriefcaseResponse: setupBriefcaseResponse;
    search: search;
    searchResponse: searchResponse;
    outlookSearch: outlookSearch;
    outlookSearchResponse: outlookSearchResponse;
    outlookDescribe: outlookDescribe;
    outlookDescribeResponse: outlookDescribeResponse;
    getServerTimestamp: getServerTimestamp;
    getServerTimestampResponse: getServerTimestampResponse;
    setPassword: setPassword;
    setPasswordResponse: setPasswordResponse;
    changeOwnPassword: changeOwnPassword;
    changeOwnPasswordResponse: changeOwnPasswordResponse;
    resetPassword: resetPassword;
    resetPasswordResponse: resetPasswordResponse;
    getAccessInfo: getAccessInfo;
    getAccessInfoResponse: getAccessInfoResponse;
    getUserInfo: getUserInfo;
    getUserInfoResponse: getUserInfoResponse;
    activate: activate;
    activateResponse: activateResponse;
    generateJwtToken: generateJwtToken;
    generateJwtTokenResponse: generateJwtTokenResponse;
    SessionHeader: SessionHeader;
    LoginScopeHeader: LoginScopeHeader;
    CallOptions: CallOptions;
    QueryOptions: QueryOptions;
    APIPerformanceInfo: APIPerformanceInfo;
    MetadataVersionCheck: MetadataVersionCheck;
    DebuggingHeader: DebuggingHeader;
    DebuggingInfo: DebuggingInfo;
    PackageVersionHeader: PackageVersionHeader;
    AllowFieldTruncationHeader: AllowFieldTruncationHeader;
    DisableFeedTrackingHeader: DisableFeedTrackingHeader;
    StreamingEnabledHeader: StreamingEnabledHeader;
    AllOrNoneHeader: AllOrNoneHeader;
    CurrencyConversionHeader: CurrencyConversionHeader;
    DuplicateRuleHeader: DuplicateRuleHeader;
    LimitInfoHeader: LimitInfoHeader;
    PatchHeader: PatchHeader;
    match: match;
    matchResponse: matchResponse;
    MruHeader: MruHeader;
    EmailHeader: EmailHeader;
    AssignmentRuleHeader: AssignmentRuleHeader;
    ConditionalRequestHeader: ConditionalRequestHeader;
    UserTerritoryDeleteHeader: UserTerritoryDeleteHeader;
    PartnerNetworkHeader: PartnerNetworkHeader;
    LocaleOptions: LocaleOptions;
    OwnerChangeOptions: OwnerChangeOptions;
    CommonEventRequestInformation: CommonEventRequestInformation;
    fault: fault;
    LoginFault: LoginFault;
    InvalidQueryLocatorFault: InvalidQueryLocatorFault;
    InvalidNewPasswordFault: InvalidNewPasswordFault;
    InvalidOldPasswordFault: InvalidOldPasswordFault;
    InvalidIdFault: InvalidIdFault;
    UnexpectedErrorFault: UnexpectedErrorFault;
    InvalidFieldFault: InvalidFieldFault;
    InvalidSObjectFault: InvalidSObjectFault;
    MalformedQueryFault: MalformedQueryFault;
    MalformedSearchFault: MalformedSearchFault;
    sObject: sObject;
    address: address;
    location: location;
    QueryResult: QueryResult;
    SetupBriefcaseResult: SetupBriefcaseResult;
    SearchResult: SearchResult;
    SearchRecord: SearchRecord;
    SearchRecordMetadata: SearchRecordMetadata;
    SearchSnippet: SearchSnippet;
    SearchResultsMetadata: SearchResultsMetadata;
    LabelsSearchMetadata: LabelsSearchMetadata;
    EntitySearchMetadata: EntitySearchMetadata;
    FieldLevelSearchMetadata: FieldLevelSearchMetadata;
    EntitySpellCorrectionMetadata: EntitySpellCorrectionMetadata;
    EntitySearchPromotionMetadata: EntitySearchPromotionMetadata;
    EntityIntentQueryMetadata: EntityIntentQueryMetadata;
    EntityErrorMetadata: EntityErrorMetadata;
    RelationshipReferenceTo: RelationshipReferenceTo;
    RecordTypesSupported: RecordTypesSupported;
    JunctionIdListNames: JunctionIdListNames;
    SearchLayoutButtonsDisplayed: SearchLayoutButtonsDisplayed;
    SearchLayoutButton: SearchLayoutButton;
    SearchLayoutFieldsDisplayed: SearchLayoutFieldsDisplayed;
    SearchLayoutField: SearchLayoutField;
    NameValuePair: NameValuePair;
    NameObjectValuePair: NameObjectValuePair;
    NameValueTypeTriple: NameValueTypeTriple;
    SimpleNameObjectValuePair: SimpleNameObjectValuePair;
    FlowInterviewWrapperContext: FlowInterviewWrapperContext;
    StartFlowInterviewRequest: StartFlowInterviewRequest;
    NavigateFlowInterviewRequest: NavigateFlowInterviewRequest;
    ResumeFlowInterviewRequest: ResumeFlowInterviewRequest;
    RunFlowTestInput: RunFlowTestInput;
    RunFlowTestResult: RunFlowTestResult;
    GetFlowInterviewHistoryRequest: GetFlowInterviewHistoryRequest;
    FlowAccessInput: FlowAccessInput;
    CanViewFlowResult: CanViewFlowResult;
    FlowInterviewAction: FlowInterviewAction;
    FlowTest: FlowTest;
    FlowTestPoint: FlowTestPoint;
    FlowTestAssert: FlowTestAssert;
    FlowTestAssertionResult: FlowTestAssertionResult;
    FlowTestCondition: FlowTestCondition;
    FlowTestReferenceOrValue: FlowTestReferenceOrValue;
    FlowTestParameter: FlowTestParameter;
    GenerateFlowTestResult: GenerateFlowTestResult;
    NavigateFlowInterviewResult: NavigateFlowInterviewResult;
    FlowInterviewScreenField: FlowInterviewScreenField;
    FlowInterviewReactiveTrigger: FlowInterviewReactiveTrigger;
    FlowInterviewReactiveHandler: FlowInterviewReactiveHandler;
    FlowInterviewReactiveAction: FlowInterviewReactiveAction;
    FlowInterviewReactiveAssignment: FlowInterviewReactiveAssignment;
    FlowInterviewReactiveDataProvider: FlowInterviewReactiveDataProvider;
    FlowInterviewReactiveDataProviderFilter: FlowInterviewReactiveDataProviderFilter;
    FlowInterviewReactiveFormula: FlowInterviewReactiveFormula;
    FlowInterviewScreenFieldInput: FlowInterviewScreenFieldInput;
    FlowInterviewScreenFieldOutput: FlowInterviewScreenFieldOutput;
    FlowInterviewLocalActionInput: FlowInterviewLocalActionInput;
    FlowInterviewLocalActionOutput: FlowInterviewLocalActionOutput;
    FlowInterviewMetadataValue: FlowInterviewMetadataValue;
    FlowInterviewReactiveChoiceSource: FlowInterviewReactiveChoiceSource;
    FlowInterviewChoice: FlowInterviewChoice;
    FlowInterviewChoiceUserInput: FlowInterviewChoiceUserInput;
    FlowInterviewOutputVariable: FlowInterviewOutputVariable;
    FlowInterviewStage: FlowInterviewStage;
    FlowInterviewDebugInput: FlowInterviewDebugInput;
    FlowInterviewDebugWaitInput: FlowInterviewDebugWaitInput;
    FlowInterviewDebugOutput: FlowInterviewDebugOutput;
    FlowInterviewDebugWaitOutput: FlowInterviewDebugWaitOutput;
    FlowInterviewObjectFieldReference: FlowInterviewObjectFieldReference;
    ClaimsMapping: ClaimsMapping;
    GetUpdatedResult: GetUpdatedResult;
    GetDeletedResult: GetDeletedResult;
    DeletedRecord: DeletedRecord;
    OutlookSearchResult: OutlookSearchResult;
    OutlookDescribeResult: OutlookDescribeResult;
    GetServerTimestampResult: GetServerTimestampResult;
    ImpersonateUserResult: ImpersonateUserResult;
    InvalidateSessionsResult: InvalidateSessionsResult;
    SetPasswordResult: SetPasswordResult;
    ChangeOwnPasswordResult: ChangeOwnPasswordResult;
    ResetPasswordResult: ResetPasswordResult;
    GetAccessInfoResult: GetAccessInfoResult;
    AccessMapping: AccessMapping;
    GetUserInfoResult: GetUserInfoResult;
    LoginResult: LoginResult;
    ExtendedErrorDetails: ExtendedErrorDetails;
    Error: Error;
    SendEmailError: SendEmailError;
    SaveResult: SaveResult;
    RenderEmailTemplateError: RenderEmailTemplateError;
    UpsertResult: UpsertResult;
    PerformQuickActionResult: PerformQuickActionResult;
    QuickActionTemplateResult: QuickActionTemplateResult;
    MergeRequest: MergeRequest;
    MergeResult: MergeResult;
    ProcessRequest: ProcessRequest;
    ProcessSubmitRequest: ProcessSubmitRequest;
    ProcessWorkitemRequest: ProcessWorkitemRequest;
    PerformQuickActionRequest: PerformQuickActionRequest;
    DescribeAvailableQuickActionResult: DescribeAvailableQuickActionResult;
    DescribeQuickActionResult: DescribeQuickActionResult;
    DescribeQuickActionDefaultValue: DescribeQuickActionDefaultValue;
    DescribeVisualForceResult: DescribeVisualForceResult;
    ProcessArticleRequest: ProcessArticleRequest;
    ProcessResult: ProcessResult;
    DescribeWorkitemActionResult: DescribeWorkitemActionResult;
    AllowedWorkitemAction: AllowedWorkitemAction;
    DeleteResult: DeleteResult;
    UndeleteResult: UndeleteResult;
    DeleteByExampleResult: DeleteByExampleResult;
    EmptyRecycleBinResult: EmptyRecycleBinResult;
    LeadConvert: LeadConvert;
    LeadConvertResult: LeadConvertResult;
    AddCampaignMemberOptions: AddCampaignMemberOptions;
    AddCampaignMemberResult: AddCampaignMemberResult;
    DescribeSObjectResult: DescribeSObjectResult;
    DescribePicklistResult: DescribePicklistResult;
    DescribePicklistsParam: DescribePicklistsParam;
    DescribeGlobalSObjectResult: DescribeGlobalSObjectResult;
    ChildRelationship: ChildRelationship;
    DescribeGlobalResult: DescribeGlobalResult;
    DescribeGlobalTheme: DescribeGlobalTheme;
    DiscoverSchemasResult: DiscoverSchemasResult;
    Schema: Schema;
    DescribeSchemaResult: DescribeSchemaResult;
    SchemaField: SchemaField;
    ScopeInfo: ScopeInfo;
    DurableIdList: DurableIdList;
    StringList: StringList;
    ChangeEventHeader: ChangeEventHeader;
    FilteredLookupInfo: FilteredLookupInfo;
    Field: Field;
    PicklistEntry: PicklistEntry;
    DescribeDataCategoryGroupResult: DescribeDataCategoryGroupResult;
    DescribeDataCategoryGroupStructureResult: DescribeDataCategoryGroupStructureResult;
    DataCategoryGroupSobjectTypePair: DataCategoryGroupSobjectTypePair;
    DataCategory: DataCategory;
    DescribeDataCategoryMappingResult: DescribeDataCategoryMappingResult;
    CommonEventResult: CommonEventResult;
    KnowledgeSettings: KnowledgeSettings;
    KnowledgeLanguageItem: KnowledgeLanguageItem;
    FieldDiff: FieldDiff;
    AdditionalInformationMap: AdditionalInformationMap;
    MatchRecord: MatchRecord;
    MatchResult: MatchResult;
    DuplicateResult: DuplicateResult;
    DuplicateError: DuplicateError;
    DescribeNounResult: DescribeNounResult;
    NameCaseValue: NameCaseValue;
    ObjectMapping: ObjectMapping;
    ObjectMappingField: ObjectMappingField;
    DescribeDuplicateRuleResult: DescribeDuplicateRuleResult;
    DuplicateRuleFilter: DuplicateRuleFilter;
    DuplicateRuleFilterItem: DuplicateRuleFilterItem;
    DuplicateRuleMatchInfo: DuplicateRuleMatchInfo;
    FindDuplicatesResult: FindDuplicatesResult;
    DescribeFlexiPageResult: DescribeFlexiPageResult;
    DescribeFlexiPageRegion: DescribeFlexiPageRegion;
    DescribeComponentInstance: DescribeComponentInstance;
    DescribeComponentInstanceProperty: DescribeComponentInstanceProperty;
    FlexipageContext: FlexipageContext;
    DescribeAppMenuResult: DescribeAppMenuResult;
    DescribeAppMenuItem: DescribeAppMenuItem;
    DescribeThemeResult: DescribeThemeResult;
    DescribeThemeItem: DescribeThemeItem;
    DescribeSoftphoneLayoutResult: DescribeSoftphoneLayoutResult;
    DescribeSoftphoneLayoutCallType: DescribeSoftphoneLayoutCallType;
    DescribeSoftphoneScreenPopOption: DescribeSoftphoneScreenPopOption;
    DescribeSoftphoneLayoutInfoField: DescribeSoftphoneLayoutInfoField;
    DescribeSoftphoneLayoutSection: DescribeSoftphoneLayoutSection;
    DescribeSoftphoneLayoutItem: DescribeSoftphoneLayoutItem;
    DescribeCompactLayoutsResult: DescribeCompactLayoutsResult;
    DescribeCompactLayout: DescribeCompactLayout;
    RecordTypeCompactLayoutMapping: RecordTypeCompactLayoutMapping;
    DescribePathAssistantsResult: DescribePathAssistantsResult;
    DescribePathAssistant: DescribePathAssistant;
    DescribePathAssistantStep: DescribePathAssistantStep;
    DescribePathAssistantField: DescribePathAssistantField;
    DescribeAnimationRule: DescribeAnimationRule;
    DescribeApprovalLayoutResult: DescribeApprovalLayoutResult;
    DescribeApprovalLayout: DescribeApprovalLayout;
    DescribeLayoutResult: DescribeLayoutResult;
    DescribeLayout: DescribeLayout;
    DescribeMiniLayoutResult: DescribeMiniLayoutResult;
    DescribeQuickActionListResult: DescribeQuickActionListResult;
    DescribeQuickActionListItemResult: DescribeQuickActionListItemResult;
    DescribeLayoutFeedView: DescribeLayoutFeedView;
    DescribeLayoutFeedFilter: DescribeLayoutFeedFilter;
    DescribeLayoutSaveOption: DescribeLayoutSaveOption;
    DescribeLayoutSection: DescribeLayoutSection;
    DescribeLayoutButtonSection: DescribeLayoutButtonSection;
    DescribeLayoutRow: DescribeLayoutRow;
    DescribeLayoutItem: DescribeLayoutItem;
    DescribeLayoutButton: DescribeLayoutButton;
    DescribeLayoutComponent: DescribeLayoutComponent;
    FieldComponent: FieldComponent;
    FieldLayoutComponent: FieldLayoutComponent;
    VisualforcePage: VisualforcePage;
    Canvas: Canvas;
    ReportChartComponent: ReportChartComponent;
    AnalyticsCloudComponent: AnalyticsCloudComponent;
    FieldCriteria: FieldCriteria;
    FieldCriterion: FieldCriterion;
    CustomLinkComponent: CustomLinkComponent;
    NamedLayoutInfo: NamedLayoutInfo;
    RecordTypeInfo: RecordTypeInfo;
    RecordTypeMapping: RecordTypeMapping;
    PicklistForRecordType: PicklistForRecordType;
    RelatedContent: RelatedContent;
    DescribeRelatedContentItem: DescribeRelatedContentItem;
    RelatedList: RelatedList;
    RelatedListColumn: RelatedListColumn;
    RelatedListSort: RelatedListSort;
    OfflineLink: OfflineLink;
    EmailAttachment: EmailAttachment;
    HandledEmailMessage: HandledEmailMessage;
    EmailFileAttachment: EmailFileAttachment;
    Email: Email;
    MassEmailMessage: MassEmailMessage;
    SingleEmailMessage: SingleEmailMessage;
    SendEmailResult: SendEmailResult;
    DescribeListViewResult: DescribeListViewResult;
    DescribeListView: DescribeListView;
    DescribeFilter: DescribeFilter;
    DescribeColumn: DescribeColumn;
    DescribeSort: DescribeSort;
    DescribeLookupLayoutResult: DescribeLookupLayoutResult;
    ListViewColumn: ListViewColumn;
    ListViewOrderBy: ListViewOrderBy;
    DescribeSoqlListView: DescribeSoqlListView;
    DescribeSoqlListViewsRequest: DescribeSoqlListViewsRequest;
    DescribeSoqlListViewParams: DescribeSoqlListViewParams;
    DescribeSoqlListViewResult: DescribeSoqlListViewResult;
    ExecuteListViewRequest: ExecuteListViewRequest;
    ExecuteListViewResult: ExecuteListViewResult;
    ListViewRecord: ListViewRecord;
    ListViewRecordColumn: ListViewRecordColumn;
    SoqlWhereCondition: SoqlWhereCondition;
    SoqlCondition: SoqlCondition;
    SoqlNotCondition: SoqlNotCondition;
    SoqlConditionGroup: SoqlConditionGroup;
    SoqlSubQueryCondition: SoqlSubQueryCondition;
    DescribeSearchLayoutResult: DescribeSearchLayoutResult;
    DescribeSearchScopeOrderResult: DescribeSearchScopeOrderResult;
    DescribeSearchableEntityResult: DescribeSearchableEntityResult;
    DescribeTabSetResult: DescribeTabSetResult;
    DescribeTab: DescribeTab;
    DescribeColor: DescribeColor;
    DescribeIcon: DescribeIcon;
    ActionOverride: ActionOverride;
    ActivateResult: ActivateResult;
    SnapshotItem: SnapshotItem;
    SnapshotResult: SnapshotResult;
    SyncOfflineDataResult: SyncOfflineDataResult;
    EmailSyncAdvancedSetting: EmailSyncAdvancedSetting;
    EmailSyncEntity: EmailSyncEntity;
    EmailSyncFieldMapping: EmailSyncFieldMapping;
    EmailSyncFieldValueMapping: EmailSyncFieldValueMapping;
    EmailSyncRoutingAddress: EmailSyncRoutingAddress;
    DescribeEmailSyncSettings: DescribeEmailSyncSettings;
    DescribeMobileResult: DescribeMobileResult;
    DescribeMobileSObject: DescribeMobileSObject;
    DescribeMobileView: DescribeMobileView;
    DescribeMobileViewDispColumn: DescribeMobileViewDispColumn;
    DescribeMobileViewFilter: DescribeMobileViewFilter;
    DescribeMobileViewSortOrder: DescribeMobileViewSortOrder;
    DescribeMobileSettings: DescribeMobileSettings;
    RenderEmailTemplateRequest: RenderEmailTemplateRequest;
    RenderEmailTemplateBodyResult: RenderEmailTemplateBodyResult;
    RenderEmailTemplateResult: RenderEmailTemplateResult;
    RenderStoredEmailTemplateRequest: RenderStoredEmailTemplateRequest;
    RenderStoredEmailTemplateResult: RenderStoredEmailTemplateResult;
    Fact: Fact;
    LogInfo: LogInfo;
    PackageVersion: PackageVersion;
    LimitInfo: LimitInfo;
    MatchOptions: MatchOptions;
    OwnerChangeOption: OwnerChangeOption;
    ApiFault: ApiFault;
    ApiQueryFault: ApiQueryFault;
};
