/*
 * Copyright (c) 2023, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
/* eslint-disable @typescript-eslint/consistent-type-definitions */
export interface ID {
}

export interface json {
}

export interface QueryLocator {
}

export enum briefcaseType {'BriefcaseAndAccount',
      'BriefcaseAndActivity',
      'BriefcaseAndOpportunity',
      'Briefcase'}

export enum StatusCode {'ALERT_NOTIFICATION_LIMIT_EXCEEDED',
      'ALL_OR_NONE_OPERATION_ROLLED_BACK',
      'ALREADY_APPLIED',
      'ALREADY_IN_PROCESS',
      'ALREADY_REDEEMED_VOUCHER',
      'APEX_DATA_ACCESS_RESTRICTION',
      'APEX_FAILED',
      'API_TASK_INVALID_REQUEST',
      'API_TASK_LIMIT_REACHED',
      'APPLICATION_ALREADY_EXISTS',
      'ASSIGNEE_TYPE_REQUIRED',
      'ATTRIBUTE_DEFINITION_LIMIT_EXCEEDED',
      'AURA_COMPILE_ERROR',
      'AUTH_PROVIDER_NEEDS_AUTH',
      'AUTH_PROVIDER_NOT_FOUND',
      'B2B_SEARCH_ADMIN_ERROR',
      'BAD_CUSTOM_ENTITY_PARENT_DOMAIN',
      'BAD_GATEWAY',
      'BAD_LIST_UNSUBSCRIBE_DATA',
      'BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED',
      'BLOCKED_EXCLUSIVE',
      'CANNOT_CASCADE_PRODUCT_ACTIVE',
      'CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD',
      'CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD',
      'CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE',
      'CANNOT_DEACTIVATE_DIVISION',
      'CANNOT_DELETE_GLOBAL_ACTION_LIST',
      'CANNOT_DELETE_LAST_DATED_CONVERSION_RATE',
      'CANNOT_DELETE_MANAGED_OBJECT',
      'CANNOT_DISABLE_LAST_ADMIN',
      'CANNOT_ENABLE_IP_RESTRICT_REQUESTS',
      'CANNOT_EXECUTE_FLOW_TRIGGER',
      'CANNOT_FREEZE_SELF',
      'CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY',
      'CANNOT_MODIFY_MANAGED_OBJECT',
      'CANNOT_PASSWORD_LOCKOUT',
      'CANNOT_POST_TO_ARCHIVED_GROUP',
      'CANNOT_RENAME_APEX_REFERENCED_FIELD',
      'CANNOT_RENAME_APEX_REFERENCED_OBJECT',
      'CANNOT_RENAME_REFERENCED_FIELD',
      'CANNOT_RENAME_REFERENCED_OBJECT',
      'CANNOT_REPARENT_RECORD',
      'CANNOT_UPDATE_CONVERTED_LEAD',
      'CANNOT_UPDATE_IS_THIRD_PARTY',
      'CANNOT_UPDATE_PAYMENT_METHOD_SET',
      'CANT_DISABLE_CORP_CURRENCY',
      'CANT_UNSET_CORP_CURRENCY',
      'CART_DELIVERY_GROUP_NOT_FOUND',
      'CART_ITEM_LIMIT_EXCEEDED_FOR_COUPONS',
      'CART_ITEM_NOT_FOUND',
      'CART_NOT_FOUND',
      'CDS_UNCOMMITTED_WORK',
      'CHECKOUT_CONFLICT',
      'CHECKOUT_EXPIRED',
      'CHECKOUT_INVALIDATED',
      'CHECKOUT_LOCKED',
      'CHECKOUT_NOT_FOUND',
      'CHECKOUT_UNAUTHORIZED',
      'CHECKOUT_VALIDATION',
      'CHILD_SHARE_FAILS_PARENT',
      'CIRCULAR_DEPENDENCY',
      'CLEAN_SERVICE_ERROR',
      'CLM_INSUFFICIENT_ACCESS',
      'CLM_RECORD_NOT_FOUND',
      'CLONE_FIELD_INTEGRITY_EXCEPTION',
      'CLONE_NOT_SUPPORTED',
      'CMS_FOLDER_ITEM_MOVE_FAILED',
      'COLLISION_DETECTED',
      'COMMERCE_SEARCH_INDEXING_SYSTEM_ERROR',
      'COMMERCE_SEARCH_INVALID_RESOURCE',
      'COMMERCE_SEARCH_MQ_ERROR',
      'COMMERCE_SEARCH_PROVIDER_LIMIT_EXCEEDED',
      'COMMERCE_SEARCH_RESOURCE_NOT_FOUND',
      'COMMERCE_SEARCH_UNSUPPORTED_LANGUAGE_ERROR',
      'COMMERCIAL_CONTROL_ERROR',
      'COMMUNITY_NOT_ACCESSIBLE',
      'CONFLICT',
      'CONFLICTING_ENVIRONMENT_HUB_MEMBER',
      'CONFLICTING_SSO_USER_MAPPING',
      'CONTENT_NOT_FOUND',
      'CONTENT_SEARCH_NOT_ENABLED',
      'CONTENT_TYPE_DISABLED_FOR_API',
      'CONTENT_TYPE_NOT_FOUND',
      'COPILOT_INACTIVE_CONFIG',
      'COPILOT_SESSION_ENDED',
      'COUPON_REDEMPTION_LIMIT_EXCEEDED',
      'CT_DEPTH_LIMIT_EXCEEDED',
      'CT_DEVELOPER_NAME_NOT_UPDATABLE',
      'CT_ENTITY_DELETE_ERROR',
      'CT_ENTITY_SAVE_ERROR',
      'CT_INVALID_DEPTH',
      'CT_INVALID_QUERY_WORD',
      'CT_INVALID_TAXONOMY_ID',
      'CT_INVALID_TERM_ID',
      'CT_NONEMPTY_TERM_REFERENCE',
      'CT_PARENT_TERM_CYCLE',
      'CT_TERM_SEARCH_ERROR',
      'CUSTOM_APEX_ERROR',
      'CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED',
      'CUSTOM_ENTITY_OR_FIELD_LIMIT',
      'CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED',
      'CUSTOM_INDEX_EXISTS',
      'CUSTOM_LINK_LIMIT_EXCEEDED',
      'CUSTOM_METADATA_LIMIT_EXCEEDED',
      'CUSTOM_METADATA_REL_FIELD_MANAGEABILITY',
      'CUSTOM_SETTINGS_LIMIT_EXCEEDED',
      'CUSTOM_TAB_LIMIT_EXCEEDED',
      'DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR',
      'DATAASSESSMENT_CONFIG_SERVICE_ERROR',
      'DATACLOUDADDRESS_NO_RECORDS_FOUND',
      'DATACLOUDADDRESS_PROCESSING_ERROR',
      'DATACLOUDADDRESS_SERVER_ERROR',
      'DATA_MAPPING_NOT_FOUND',
      'DATA_MAPPING_SCHEMA_NOT_FOUND',
      'DATA_TRANSFER_RECORD_LIMIT_EXCEEDED',
      'DATA_TRANSLATION_TOGGLED_BEFORE_INCREMENTAL_INDEX',
      'DATA_TYPE_NOT_SUPPORTED',
      'DATE_OUT_OF_RANGE',
      'DELETE_FAILED',
      'DELETE_NOT_ALLOWED',
      'DELETE_OPERATION_TOO_LARGE',
      'DELETE_REQUIRED_ON_CASCADE',
      'DEPENDENCY_EXISTS',
      'DOCUMENT_VERSION_EXISTS',
      'DUPLICATES_DETECTED',
      'DUPLICATE_CASE_SOLUTION',
      'DUPLICATE_COMM_NICKNAME',
      'DUPLICATE_CUSTOM_ENTITY_DEFINITION',
      'DUPLICATE_CUSTOM_TAB_MOTIF',
      'DUPLICATE_DEVELOPER_NAME',
      'DUPLICATE_EXTERNAL_ID',
      'DUPLICATE_MASTER_LABEL',
      'DUPLICATE_SENDER_DISPLAY_NAME',
      'DUPLICATE_USERNAME',
      'DUPLICATE_VALUE',
      'EMAIL_ADDRESS_BOUNCED',
      'EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR',
      'EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR',
      'EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR',
      'EMAIL_EXTERNAL_TRANSPORT_TOO_LARGE_ERROR',
      'EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR',
      'EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR',
      'EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR',
      'EMAIL_OPTED_OUT',
      'EMAIL_TEMPLATE_FORMULA_ERROR',
      'EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR',
      'EMAIL_TEMPLATE_MERGEFIELD_ERROR',
      'EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR',
      'EMAIL_TEMPLATE_PROCESSING_ERROR',
      'EMPTY_CATALOG',
      'EMPTY_INGESTION_JOB',
      'EMPTY_SCONTROL_FILE_NAME',
      'ENHANCED_EMAIL_TEMPLATE_COMPILATION_ERROR',
      'ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE',
      'ENTITY_IS_ARCHIVED',
      'ENTITY_IS_DELETED',
      'ENTITY_IS_LOCKED',
      'ENTITY_SAVE_ERROR',
      'ENTITY_SAVE_VALIDATION_ERROR',
      'ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT',
      'ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB',
      'ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB',
      'ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN',
      'ERROR_CALCULATING_EXPIRY_DATE',
      'ERROR_IN_MAILER',
      'EXCEEDED_MAX_SEMIJOIN_SUBSELECTS_WRITE',
      'EXCHANGE_WEB_SERVICES_URL_INVALID',
      'EXTERNAL_RESOURCE_FORBIDDEN',
      'FAILED_ACTIVATION',
      'FAILED_DUE_TO_OTHER_INPUTS',
      'FAILED_TO_RESOLVE_MAPPING',
      'FAILED_TO_RESOLVE_SCHEMA_INFORMATION',
      'FIELD_CUSTOM_VALIDATION_EXCEPTION',
      'FIELD_FILTER_VALIDATION_EXCEPTION',
      'FIELD_INTEGRITY_EXCEPTION',
      'FIELD_KEYWORD_LIST_MATCH_LIMIT',
      'FIELD_MAPPING_ERROR',
      'FIELD_MODERATION_RULE_BLOCK',
      'FIELD_NOT_UPDATABLE',
      'FILE_EXTENSION_NOT_ALLOWED',
      'FILE_SIZE_LIMIT_EXCEEDED',
      'FILTERED_LOOKUP_LIMIT_EXCEEDED',
      'FIND_DUPLICATES_ERROR',
      'FLOW_EXCEPTION',
      'FORBIDDEN_EXCEPTION',
      'FUNCTIONALITY_NOT_ENABLED',
      'GET_EINSTEIN_TENANT_ERROR',
      'GUEST_INSUFFICIENT_ACCESS',
      'HAS_PUBLIC_REFERENCES',
      'HTML_FILE_UPLOAD_NOT_ALLOWED',
      'IAS_AM_AUTH_BAD_REQUEST',
      'IAS_AM_AUTH_UNAUTHORIZED',
      'IAS_INVALID_AUTH',
      'IAS_INVALID_REQUEST_PARAMETER',
      'IAS_RECORD_DOES_NOT_EXIST',
      'IAS_TENANT_NOT_PROVISIONED',
      'IAS_UNCOMMITTED_WORK',
      'IMAGE_TOO_LARGE',
      'INACTIVE_CONTEXT_DEFINITION',
      'INACTIVE_OWNER_OR_USER',
      'INACTIVE_RULE_ERROR',
      'INDEX_ITEM_LIMIT_EXCEEDED',
      'INDEX_PAYLOAD_NOT_FOUND',
      'INDEX_SINGLE_PAYLOAD_SIZE_LIMIT_EXCEEDED',
      'INGESTION_JOB_RECORDS_LIMIT_EXCEEDED',
      'INGESTION_TOTAL_FILE_SIZE_LIMIT_EXCEEDED',
      'INPUTPARAM_INCOMPATIBLE_DATATYPE',
      'INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE',
      'INSUFFICIENT_ACCESS',
      'INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY',
      'INSUFFICIENT_ACCESS_OR_READONLY',
      'INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA',
      'INSUFFICIENT_BALANCE',
      'INSUFFICIENT_BENEFIT_REMAINING',
      'INSUFFICIENT_CREDITS',
      'INTEGRATION_CANCELLED',
      'INTERNAL_ERROR',
      'INVALID_ACCESS_LEVEL',
      'INVALID_ACCESS_TOKEN',
      'INVALID_ACCOUNT',
      'INVALID_ACTION_VERSION',
      'INVALID_API_INPUT',
      'INVALID_ARGUMENT_TYPE',
      'INVALID_ASSIGNEE_TYPE',
      'INVALID_ASSIGNMENT_RULE',
      'INVALID_AUTH_HEADER',
      'INVALID_BATCH_OPERATION',
      'INVALID_BUSINESS_HOURS_NAME',
      'INVALID_CATEGORY_NETWORK',
      'INVALID_CHECKOUT_INPUT',
      'INVALID_CONTACT',
      'INVALID_CONTENT_TYPE',
      'INVALID_CREDIT_CARD_INFO',
      'INVALID_CROSS_REFERENCE_KEY',
      'INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD',
      'INVALID_CURRENCY_CONV_RATE',
      'INVALID_CURRENCY_CORP_RATE',
      'INVALID_CURRENCY_ISO',
      'INVALID_DATASET_REFERENCE_INPUT',
      'INVALID_DATA_CATEGORY_GROUP_REFERENCE',
      'INVALID_DATA_URI',
      'INVALID_EBV_OPERATION',
      'INVALID_EMAIL_ADDRESS',
      'INVALID_EMPTY_KEY_OWNER',
      'INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR',
      'INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR',
      'INVALID_ENTITY_FOR_UPSERT',
      'INVALID_ENVIRONMENT_HUB_MEMBER',
      'INVALID_EVENT_DELIVERY',
      'INVALID_EVENT_INPUT',
      'INVALID_EVENT_SUBSCRIPTION',
      'INVALID_EXTENSION_ID',
      'INVALID_EXTERNAL_ID_FIELD_NAME',
      'INVALID_FIELD',
      'INVALID_FIELD_FOR_INSERT_UPDATE',
      'INVALID_FIELD_WHEN_USING_TEMPLATE',
      'INVALID_FILTER_ACTION',
      'INVALID_GOOGLE_DOCS_URL',
      'INVALID_ID_FIELD',
      'INVALID_INET_ADDRESS',
      'INVALID_INPUT',
      'INVALID_INPUT_FORMAT',
      'INVALID_KEY_FIELD_INPUT',
      'INVALID_LINEITEM_CLONE_STATE',
      'INVALID_MARKUP',
      'INVALID_MASTER_OR_TRANSLATED_SOLUTION',
      'INVALID_MERCHANT_ACCOUNT_MODE',
      'INVALID_MERCHANT_ACCOUNT_MODE_OR_STATUS',
      'INVALID_MERGE_RECORD',
      'INVALID_MESSAGE_ID_REFERENCE',
      'INVALID_NAMESPACE_PREFIX',
      'INVALID_OAUTH_URL',
      'INVALID_OPERATION',
      'INVALID_OPERATOR',
      'INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST',
      'INVALID_OWNER',
      'INVALID_PACKAGE_LICENSE',
      'INVALID_PACKAGE_VERSION',
      'INVALID_PARTNER_NETWORK_STATUS',
      'INVALID_PAYLOAD_VERSION',
      'INVALID_PERSON_ACCOUNT_OPERATION',
      'INVALID_PROFILE',
      'INVALID_PROMOTION',
      'INVALID_PROVIDER_TYPE',
      'INVALID_QUERY_KEY',
      'INVALID_QUERY_LOCATOR',
      'INVALID_QUERY_VALUE',
      'INVALID_READ_ONLY_USER_DML',
      'INVALID_RECEIVEDDOCUMENTID_ATTACHMENT',
      'INVALID_RECORD_ATTRIBUTE_VALUE',
      'INVALID_RECORD_TYPE',
      'INVALID_REFRESH_TOKEN',
      'INVALID_REORDER_PORTAL_RECORD_ASSOCIATION',
      'INVALID_REQUEST_STATE',
      'INVALID_RUNTIME_VALUE',
      'INVALID_SAVE_AS_ACTIVITY_FLAG',
      'INVALID_SCS_INBOUND_USER',
      'INVALID_SEARCH_PROVIDER_REQUEST',
      'INVALID_SESSION_ID',
      'INVALID_SETUP_OWNER',
      'INVALID_SIGNUP_COUNTRY',
      'INVALID_SIGNUP_OPTION',
      'INVALID_SITE_DELETE_EXCEPTION',
      'INVALID_SITE_FILE_IMPORTED_EXCEPTION',
      'INVALID_SITE_FILE_TYPE_EXCEPTION',
      'INVALID_SOURCE_OBJECT_ID',
      'INVALID_SOURCE_OBJECT_NAME',
      'INVALID_STATUS',
      'INVALID_SUBDOMAIN',
      'INVALID_TARGET_OBJECT_NAME',
      'INVALID_TEXT_REPRESENTATION',
      'INVALID_TYPE',
      'INVALID_TYPE_FOR_OPERATION',
      'INVALID_TYPE_ON_FIELD_IN_RECORD',
      'INVALID_UNMERGE_RECORD',
      'INVALID_USERID',
      'INVALID_USER_OBJECT',
      'IP_RANGE_LIMIT_EXCEEDED',
      'ITEM_NOT_FOUND',
      'JIGSAW_IMPORT_LIMIT_EXCEEDED',
      'LICENSE_LIMIT_EXCEEDED',
      'LIGHT_PORTAL_USER_EXCEPTION',
      'LIMIT_EXCEEDED',
      'LIST_PRICE_NOT_FOUND',
      'MALFORMED_ID',
      'MANAGER_NOT_DEFINED',
      'MAPPING_TYPE_NOT_SUPPORTED',
      'MASSMAIL_RETRY_LIMIT_EXCEEDED',
      'MASS_MAIL_LIMIT_EXCEEDED',
      'MATCH_DEFINITION_ERROR',
      'MATCH_OPERATION_ERROR',
      'MATCH_OPERATION_INVALID_ENGINE_ERROR',
      'MATCH_OPERATION_INVALID_RULE_ERROR',
      'MATCH_OPERATION_MISSING_ENGINE_ERROR',
      'MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR',
      'MATCH_OPERATION_MISSING_OPTIONS_ERROR',
      'MATCH_OPERATION_MISSING_RULE_ERROR',
      'MATCH_OPERATION_UNKNOWN_RULE_ERROR',
      'MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR',
      'MATCH_PRECONDITION_FAILED',
      'MATCH_PRECONDITION_REQUIRED',
      'MATCH_RUNTIME_ERROR',
      'MATCH_SERVICE_ERROR',
      'MATCH_SERVICE_TIMED_OUT',
      'MATCH_SERVICE_UNAVAILABLE_ERROR',
      'MAXIMUM_CCEMAILS_EXCEEDED',
      'MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED',
      'MAXIMUM_HIERARCHY_CHILDREN_REACHED',
      'MAXIMUM_HIERARCHY_LEVELS_REACHED',
      'MAXIMUM_HIERARCHY_TREE_SIZE_REACHED',
      'MAXIMUM_SIZE_OF_ATTACHMENT',
      'MAXIMUM_SIZE_OF_DOCUMENT',
      'MAX_ACTIONS_PER_RULE_EXCEEDED',
      'MAX_ACTIVE_RULES_EXCEEDED',
      'MAX_APPROVAL_STEPS_EXCEEDED',
      'MAX_DEPTH_IN_FLOW_EXECUTION',
      'MAX_FORMULAS_PER_RULE_EXCEEDED',
      'MAX_LIMIT_EXCEEDED',
      'MAX_LOCALES_EXCEEDED',
      'MAX_RULES_EXCEEDED',
      'MAX_RULE_ENTRIES_EXCEEDED',
      'MAX_TASK_DESCRIPTION_EXCEEEDED',
      'MAX_TM_RULES_EXCEEDED',
      'MAX_TM_RULE_ITEMS_EXCEEDED',
      'MAX_TRIGGERS_EXCEEDED',
      'MCONTENT_TAXONOMY_GET_ERROR',
      'MCONTENT_TAXONOMY_PUBLISH_ERROR',
      'MCONTENT_TAXONOMY_UPDATE_ERROR',
      'MERGE_FAILED',
      'METADATA_FIELD_UPDATE_ERROR',
      'METHOD_NOT_ALLOWED',
      'MISMATCHING_TYPES',
      'MISSING_ARGUMENT',
      'MISSING_OMNI_PROCESS_ID',
      'MISSING_PAYMENTS_DEPENDENCY',
      'MISSING_PAY_NOW_SITE_URL_ORG_VALUE',
      'MISSING_RECEIVEDDOCUMENTID_ATTACHMENT',
      'MISSING_RECORD',
      'MIXED_DML_OPERATION',
      'MODEL_NOT_ACTIVE',
      'MULTIPLE_CONTENT_FOUND',
      'MULTIPLE_VOUCHERS',
      'NONUNIQUE_SHIPPING_ADDRESS',
      'NOT_FOUND',
      'NOT_RECOVERABLE_SEARCH_PROVIDER_ERROR',
      'NO_ACCESS_TOKEN',
      'NO_ACCESS_TOKEN_FROM_REFRESH',
      'NO_APPLICABLE_PROCESS',
      'NO_ATTACHMENT_PERMISSION',
      'NO_AUTH_PROVIDER',
      'NO_BUSINESS_HOURS_FOUND',
      'NO_INACTIVE_DIVISION_MEMBERS',
      'NO_INDEXABLE_PRODUCTS',
      'NO_INDEXABLE_PRODUCTS_IN_PARTIAL_BUILD',
      'NO_MASS_MAIL_PERMISSION',
      'NO_MESSAGE_TYPE_MESSAGES',
      'NO_PARTNER_PERMISSION',
      'NO_REFRESH_TOKEN',
      'NO_SEARCHABLE_PRODUCTS',
      'NO_SEARCH_ATTRIBUTES',
      'NO_SINGLE_MAIL_PERMISSION',
      'NO_SORT_PRICEBOOK_ASSOCIATED_ERROR',
      'NO_SUCH_USER_EXISTS',
      'NO_TOKEN_ENDPOINT',
      'NUMBER_OUTSIDE_VALID_RANGE',
      'NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED',
      'OCR_INVALID_REQUEST',
      'OPERATION_CONFLICT',
      'OPERATION_ENQUEUED',
      'OPERATION_WITH_CALLBACK_ENQUEUED',
      'OPTED_OUT_OF_MASS_MAIL',
      'OP_WITH_INVALID_USER_TYPE_EXCEPTION',
      'ORCHESTRATION_INVALID',
      'ORDER_MANAGEMENT_ACTION_NOT_ALLOWED',
      'ORDER_MANAGEMENT_INVALID_RECORD',
      'ORDER_MANAGEMENT_RECORD_EXISTS',
      'ORDER_MANAGEMENT_RECORD_NOT_FOUND',
      'ORG_SETTING_REQUIRED',
      'PACKAGE_DISABLED',
      'PACKAGE_LICENSE_REQUIRED',
      'PACKAGING_API_INSTALL_FAILED',
      'PACKAGING_API_UNINSTALL_FAILED',
      'PALI_INVALID_ACTION_ID',
      'PALI_INVALID_ACTION_NAME',
      'PALI_INVALID_ACTION_TYPE',
      'PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID',
      'PAL_INVALID_ENTITY_ID',
      'PAL_INVALID_FLEXIPAGE_ID',
      'PAL_INVALID_LAYOUT_ID',
      'PAL_INVALID_PARAMETERS',
      'PARAMETER_TOO_LARGE',
      'PARTICIPANT_RELATIONSHIP_EXISTS',
      'PAYLOAD_SIZE_EXCEEDED',
      'PAYMENTS_TOO_MANY_REQUESTS_ERROR',
      'PAYMENT_GATEWAY_DEPENDENCY_EXCEPTION',
      'PAYMENT_GATEWAY_REQUEST_EXCEPTION',
      'PA_API_EXCEPTION',
      'PA_AXIS_FAULT',
      'PA_INVALID_ID_EXCEPTION',
      'PA_NO_ACCESS_EXCEPTION',
      'PA_NO_DATA_FOUND_EXCEPTION',
      'PA_URI_SYNTAX_EXCEPTION',
      'PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION',
      'PENDING_COMMIT',
      'PICKLIST_INACTIVE_VALUES_EXCEEDED',
      'PLATFORM_EVENT_ENCRYPTION_ERROR',
      'PLATFORM_EVENT_PUBLISHING_UNAVAILABLE',
      'PLATFORM_EVENT_PUBLISH_FAILED',
      'PORTAL_NO_ACCESS',
      'PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT',
      'PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION',
      'PRICE_NOT_FOUND',
      'PRIVATE_CONTACT_ON_ASSET',
      'PROCESSING_HALTED',
      'PROGRAM_PROGRESS_NOT_ACTIVE',
      'PROMOTION_NOT_FOUND',
      'QA_INVALID_CREATE_FEED_ITEM',
      'QA_INVALID_SUCCESS_MESSAGE',
      'QUERY_REFINEMENT_VALUE_LIMIT_EXCEEDED',
      'QUERY_TIMEOUT',
      'QUERY_TOKEN_COUNT_LIMIT_EXCEEDED',
      'QUICK_ACTION_LIST_ITEM_NOT_ALLOWED',
      'QUICK_ACTION_LIST_NOT_ALLOWED',
      'RECORD_CREATION_FAILED',
      'RECORD_IN_USE_BY_WORKFLOW',
      'RECORD_LOCKED',
      'RECORD_MISSING_REQUIRED_FIELD',
      'RECORD_NOT_FOUND',
      'RECORD_TYPE_LIMIT_EXCEEDED',
      'RECORD_UPDATE_FAILED',
      'RECOVERABLE_SEARCH_PROVIDER_ERROR',
      'REFRESH_FAILED',
      'RELATED_ENTITY_FILTER_VALIDATION_EXCEPTION',
      'REL_FIELD_BAD_ACCESSIBILITY',
      'REPUTATION_MINIMUM_NUMBER_NOT_REACHED',
      'REQUEST_RUNNING_TOO_LONG',
      'REQUIRED_FEATURE_MISSING',
      'REQUIRED_FIELD_MISSING',
      'REQUIRE_CONNECTED_APP_SCS',
      'REQUIRE_CONNECTED_APP_SESSION_SCS',
      'REQUIRE_RUNAS_USER',
      'RESOURCE_NOT_AVAILABLE',
      'RETRIEVE_EXCHANGE_ATTACHMENT_FAILED',
      'RETRIEVE_EXCHANGE_EMAIL_FAILED',
      'RETRIEVE_EXCHANGE_EVENT_FAILED',
      'RETRIEVE_GOOGLE_EMAIL_FAILED',
      'RETRIEVE_GOOGLE_EVENT_FAILED',
      'RETRIEVE_USER_CONFIG_ERROR',
      'ROUTES_EVALUATION_LIMIT_EXCEEDED',
      'SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR',
      'SALESFORCE_INBOX_TRANSPORT_INVALID_INPUT_ERROR',
      'SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR',
      'SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR',
      'SCHEMA_OBJECT_NOT_FOUND',
      'SCREEN_POP_REQUIRED_INPUT_MISSING',
      'SEARCH_INCLUDE_RULES_MAX_RULE_DEFINITION_LIMIT_EXCEEDED',
      'SEARCH_INCLUDE_RULES_MIN_RULE_DEFINITION_NOT_MET',
      'SEARCH_PROVIDER_PATH_LIMIT_EXCEEDED',
      'SEARCH_PROVIDER_REQUEST_RATE_EXCEEDED',
      'SEGMENT_COUNT_LIMIT_EXCEEDED',
      'SELF_REFERENCE_FROM_FLOW',
      'SELF_REFERENCE_FROM_TRIGGER',
      'SERVICE_EMAIL_INVALID_INPUT',
      'SERVICE_EMAIL_MISSING_RECORD',
      'SERVICE_EMAIL_UNKNOWN_EXCEPTION',
      'SERVICE_PLAN_INVALID_DATA',
      'SERVICE_PLAN_MISSING_DATA',
      'SERVICE_PLAN_UNKNOWN_EXCEPTION',
      'SERVICE_UNAVAILABLE',
      'SESSION_EXPIRED',
      'SESSION_INVALIDATED',
      'SHARE_NEEDED_FOR_CHILD_OWNER',
      'SINGLE_EMAIL_LIMIT_EXCEEDED',
      'SLACK_API_ERROR',
      'SOCIAL_ACCOUNT_NOT_FOUND',
      'SOCIAL_ACTION_INVALID',
      'SOCIAL_PERSONA_NOT_FOUND',
      'SOCIAL_POST_INVALID',
      'SOCIAL_POST_NOT_FOUND',
      'SPECIFICATION_GENERATION_EXCEPTION',
      'STANDARD_PRICE_NOT_DEFINED',
      'STORAGE_LIMIT_EXCEEDED',
      'STOREFRONT_PST_NOT_ACCEPTED',
      'STRING_TOO_LONG',
      'STXN_FULFILLMENT_NOT_INFLIGHT',
      'SUBDOMAIN_IN_USE',
      'TABSET_LIMIT_EXCEEDED',
      'TEMPLATE_NOT_ACTIVE',
      'TEMPLATE_NOT_FOUND',
      'TENANT_GROUP_NOT_FOUND',
      'TERMS_OF_SERVICE_UNREAD',
      'TERRITORY_REALIGN_IN_PROGRESS',
      'TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET',
      'TEXT_TO_PICKLIST_VALUES_EXCEEDED',
      'TOO_MANY_APEX_REQUESTS',
      'TOO_MANY_ENUM_VALUE',
      'TOO_MANY_JOBS',
      'TOO_MANY_POSSIBLE_USERS_EXIST',
      'TRANSFER_REQUIRES_READ',
      'TXN_SECURITY_NO_ACCESS',
      'UISF_ENTITY_QUERY_FAILED',
      'UISF_NO_MAPPINGS_FOUND',
      'UISF_TOKEN_NOT_FOUND',
      'UISF_UNKNOWN_EXCEPTION',
      'UISF_USER_MAPPING_FAILED',
      'UNABLE_TO_LOCK_RECORD',
      'UNABLE_TO_LOCK_ROW',
      'UNABLE_TO_UNLOCK_RECORD',
      'UNABLE_TO_UPDATE_RECORD_LOCK',
      'UNAUTHORIZED_EXCEPTION',
      'UNAUTHORIZED_SEARCH_PROVIDER_REQUEST',
      'UNAVAILABLE_RECORDTYPE_EXCEPTION',
      'UNAVAILABLE_REF',
      'UNCOMMITTED_WORK',
      'UNDEFINED_MAPPING_DEFINITION',
      'UNDELETE_FAILED',
      'UNKNOWN_EXCEPTION',
      'UNKNOWN_TOKEN_ERROR',
      'UNPROCESSABLE_REQUEST',
      'UNQUALIFIED_CART',
      'UNRESOLVABLE_PAY_NOW_WEBSTORE',
      'UNSAFE_HTML_CONTENT',
      'UNSPECIFIED_EMAIL_ADDRESS',
      'UNSUPPORTED_APEX_TRIGGER_OPERATON',
      'UNSUPPORTED_MODE',
      'UNSUPPORTED_PAYMENT_GATEWAY_TYPE',
      'UNSUPPORTED_PAYMENT_REQUEST_TYPE',
      'UNSUPPORTED_SITE',
      'UNSUPPORTED_SITE_FILE_IMPORTED_EXCEPTION',
      'UNSUPPORTED_SOCIAL_PROVIDER',
      'UNVERIFIED_SENDER_ADDRESS',
      'UPDATE_GOOGLE_EMAIL_LABEL_FAILED',
      'USER_OWNS_PORTAL_ACCOUNT_EXCEPTION',
      'USER_WITHOUT_WEM_PERMISSION',
      'USER_WITH_APEX_SHARES_EXCEPTION',
      'VARIANT_NOT_FOUND',
      'VF_COMPILE_ERROR',
      'VOICE_CAPACITY_ERROR',
      'WEBLINK_SIZE_LIMIT_EXCEEDED',
      'WEBLINK_URL_INVALID',
      'WEM_SEGMENTS_CAN_NOT_HAVE_NON_ACTIVE_SEGMENT_TYPE',
      'WEM_SHIFT_SEGMENT_TIME_IS_OUTSIDE_OF_THE_SHIFT_DURATION',
      'WEM_USER_NOT_ORG_ADMIN',
      'WORKSPACE_NOT_FOUND',
      'WRONG_CONTROLLER_TYPE',
      'XCLEAN_DJ_MATCH_IGNORABLE_ERROR',
      'XCLEAN_DJ_MATCH_INTERNAL_DJ_ERROR',
      'XCLEAN_DJ_MATCH_NON_RETRIABLE_ERROR',
      'XCLEAN_DJ_MATCH_RETRIABLE_ERROR',
      'XCLEAN_DJ_MATCH_UNKNOWN_ERROR',
      'XCLEAN_UNEXPECTED_ERROR'}

export enum ExtendedErrorCode {'ACTIONCALLPATH_MISSING_NAME',
      'ACTIONCALL_DUPLICATE_INPUT_PARAM',
      'ACTIONCALL_DUPLICATE_OUTPUT_PARAM',
      'ACTIONCALL_FEATURE_NOT_SUPPORTED',
      'ACTIONCALL_INPUT_VALIDATION_FAILED',
      'ACTIONCALL_INVALID_INPUT_PARAM_NAME',
      'ACTIONCALL_INVALID_ISWAITUNTILCOMPLETED',
      'ACTIONCALL_INVALID_OFFSET',
      'ACTIONCALL_MISSING_EVENT_INFO',
      'ACTIONCALL_MISSING_NAME',
      'ACTIONCALL_MISSING_OFFSET',
      'ACTIONCALL_MISSING_REQUIRED_PARAM',
      'ACTIONCALL_MISSING_REQUIRED_TYPE',
      'ACTIONCALL_NOT_FOUND_WITH_NAME_AND_TYPE',
      'ACTIONCALL_NOT_SUPPORTED_FOR_PROCESSTYPE',
      'ACTIONCALL_NOT_SUPPORTED_FOR_TRIGGERTYPE',
      'ACTIONCALL_OFFSET_NOT_SUPPORTED',
      'ACTIONCALL_TRANSACTION_MODEL_NOT_ALLOWED',
      'ACTIONCALL_TRANSACTION_MODEL_NOT_SUPPORTED',
      'ACTIONCALL_TRIGGERING_RECORD_MISMATCHED_OBJECTTYPE',
      'ACTION_BUTTON_NOT_SUPPORTED_FOR_API_VERSION_AT_RUNTIME',
      'ACTION_BUTTON_NOT_SUPPORTED_FOR_METADATA_API_VERSION',
      'ACTION_CALL_INPUT_SETUPREFTYPE_REQUIRES_SETUPREFVALUE',
      'ACTION_CALL_INVALID_ACTION_NAME_CONTENT',
      'ACTION_CALL_INVALID_CONFIGURATION',
      'ACTION_CALL_INVALID_INPUT_PARAM',
      'ACTION_CALL_INVALID_OUTPUT_PARAM',
      'ACTION_CALL_INVALID_VERSION',
      'ACTION_CALL_MISSING_ELEMENT_DEPENDENCIES',
      'ACTION_INPUT_PARAMETER_REQUIRES_ID_TYPE_FOR_SETUP_REFERENCE',
      'ACTION_INPUT_PARAMETER_TYPE_AND_SETUP_REFERENCE_TYPE_DO_NOT_MATCH',
      'ACTION_TYPE_REQUIRED_FOR_STEP',
      'ADDING_ATTACHMENT_QUESTIONS_ADDITION_TO_EXISTING_SURVEY',
      'ADVANCED_APPROVALS_LICENSE_REQUIRED_FOR_ACTIVATION',
      'ADVANCED_APPROVALS_LICENSE_REQUIRED_FOR_EXECUTION',
      'ADVANCED_APPROVALS_LICENSE_REQUIRED_FOR_SAVE',
      'APEXCALLOUT_INPUT_DUPLICATE',
      'APEXCALLOUT_INPUT_INCOMPATIBLE_DATATYPE',
      'APEXCALLOUT_INVALID',
      'APEXCALLOUT_MISSING_CLASSNAME',
      'APEXCALLOUT_NOT_FOUND',
      'APEXCALLOUT_OUTPUT_INCOMPATIBLE_DATATYPE',
      'APEXCALLOUT_OUTPUT_INVALID',
      'APEXCALLOUT_REQUIRED_INPUT_MISSING',
      'APEXCLASS_MISSING_INTERFACE',
      'APEX_CLASS_VARIABLE_NOT_FOUND',
      'ASSIGNEE_AUTOPROC',
      'ASSIGNEE_REQUIRED_WHEN_SPECIFYING_RUN_AS_USER',
      'ASSIGNEE_USER_USERNAME',
      'ASSIGNMENTITEM_ELEMENT_MISSING_DATATYPE',
      'ASSIGNMENTITEM_ELEMENT_NOT_SUPPORTED',
      'ASSIGNMENTITEM_FIELD_INVALID_DATATYPE',
      'ASSIGNMENTITEM_FIELD_INVALID_DATATYPE_WITH_ELEMENT',
      'ASSIGNMENTITEM_INCOMPATIBLE_DATATYPES',
      'ASSIGNMENTITEM_INVALID_ASSIGNTOREFERENCE',
      'ASSIGNMENTITEM_INVALID_COLLECTION',
      'ASSIGNMENTITEM_INVALID_DATATYPE_IN_ELEMENT',
      'ASSIGNMENTITEM_INVALID_ELEMENTREFERENCE',
      'ASSIGNMENTITEM_INVALID_MERGE_FIELD',
      'ASSIGNMENTITEM_INVALID_OPERATOR',
      'ASSIGNMENTITEM_INVALID_REFERENCE',
      'ASSIGNMENTITEM_INVALID_VALUE',
      'ASSIGNMENTITEM_LEFT_DATATYPE_INVALID_FOR_OPERATOR',
      'ASSIGNMENTITEM_MODIFIES_NONVARIABLE',
      'ASSIGNMENTITEM_NONEXISTENT_REFERENCE',
      'ASSIGNMENTITEM_REQUIRED',
      'ASSIGNMENTITEM_RIGHT_DATATYPE_INVALID_FOR_OPERATOR',
      'ASYNC_ACTION_NOT_SUPPORTED_FOR_PROCESSTYPE',
      'AUTOLAUNCHED_CHOICELOOKUP_NOT_SUPPORTED',
      'AUTOLAUNCHED_CHOICE_NOT_SUPPORTED',
      'AUTOLAUNCHED_SCREEN_NOT_SUPPORTED',
      'AUTOLAUNCHED_STEP_NOT_SUPPORTED',
      'AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE',
      'AUTOLAUNCHED_WAIT_NOT_SUPPORTED',
      'AUTOMATION_EVENT_PATH_EXPERIMENT_MISSING_ELEMENT_DEPENDENCIES',
      'BACKGROUND_STEPS_DETECT_ASYNC_PROCESSING',
      'BEFORE_SAVE_FLOW_RECORD_UPDATE_CANNOT_HAVE_FAULT_CONNECTOR',
      'BEFORE_SAVE_FLOW_RECORD_UPDATE_INVALID_REFERENCE',
      'BEFORE_SAVE_FLOW_RECORD_UPDATE_RELATED_RECORD_REQUIRES_INPUTASSIGNMENTS',
      'BEFORE_SAVE_FLOW_RECORD_UPDATE_REQUIRES_INPUTASSIGNMENTS',
      'BOTH_START_NODE_AND_REFERENCE_FOUND',
      'CHOICEFIELD_DEFAULT_CHOICE_NOT_FOUND',
      'CHOICEFIELD_MISSING_CHOICE',
      'CHOICELOOKUP_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD',
      'CHOICE_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD',
      'CHOICE_LOOKUP_COLLECTION_REFERENCE_NULL',
      'CHOICE_LOOKUP_INVALID_COLLECTION_REFERENCE',
      'CHOICE_NOT_SUPPORTED_FOR_SCREENFIELDTYPE',
      'CHOICE_USED_MULTIPLE_TIMES_IN_SAME_FIELD',
      'COLLECTION_PROCESSOR_DUPLICATE_MAPITEM',
      'COLLECTION_PROCESSOR_INVALID_COLLECTION_REFERENCE',
      'COLLECTION_PROCESSOR_INVALID_CONFIGURATION',
      'COLLECTION_PROCESSOR_INVALID_OUTPUTSOBJECTTYPE',
      'COLLECTION_PROCESSOR_MAX_SORT_FIELDS_LIMIT_EXCEEDED',
      'COLLECTION_PROCESSOR_MISMATCHED_OBJECTTYPE',
      'COLLECTION_PROCESSOR_MISSING_MAP',
      'COLLECTION_PROCESSOR_MISSING_OUTPUTSOBJECTTYPE',
      'COLLECTION_PROCESSOR_MISSING_PARAMETER',
      'COLLECTION_PROCESSOR_MISSING_SORT',
      'COLLECTION_PROCESSOR_NOT_SUPPORTED_FOR_API_VERSION',
      'COLLECTION_PROCESSOR_REQUIRES_PERM',
      'COLLECTION_PROCESSOR_SORT_FIELD_INVALID_FOR_OBJECT',
      'COLLECTION_PROCESSOR_TYPE_NOT_SUPPORTED',
      'COLLECTION_PROCESSOR_VARIABLE_NULL',
      'CONDITIONAL_SCREENFIELD_VISIBILITY_NOT_SUPPORTED_FOR_ENVIRONMENT',
      'CONDITIONAL_SCREEN_FIELD_VISIBILITY_NOT_SUPPORTED_FOR_SCREEN_FIELD',
      'CONDITION_BUILDER_MISSING_FLOW_VARIABLE',
      'CONDITION_BUILDER_MISSING_REQUIRED_PERMISSIONS',
      'CONDITION_BUILDER_UNSUPPORTED_FLOW_VARIABLE',
      'CONDITION_INVALID_LEFTOPERAND',
      'CONDITION_LOGIC_EXCEEDS_LIMIT',
      'CONDITION_LOGIC_INVALID',
      'CONDITION_LOGIC_MISSING',
      'CONDITION_MISSING_DATATYPE',
      'CONDITION_MISSING_OPERATOR',
      'CONDITION_OPERAND_DATATYPES_INCOMPATIBLE',
      'CONDITION_OPERAND_INCOMPATIBLE_WITH_ELEMENT',
      'CONDITION_OPERATOR_INCOMPATIBLE',
      'CONDITION_REFERENCED_ELEMENT_NOT_FOUND',
      'CONDITION_RIGHTOPERAND_NULL',
      'CONDITION_TRAVERSAL_TOO_DEEP',
      'CONNECTOR_MISSING_TARGET',
      'CONSTANT_INCLUDES_REFERENCES',
      'CONTENT_KEY_OR_ID_NOT_FOUND',
      'CUSTOMEVENTS_NOT_ENABLED',
      'CUSTOMEVENT_MISSING_PROCESSMETADATAVALUES',
      'CUSTOMEVENT_OBJECTTYPE_NOT_FOUND',
      'CUSTOMEVENT_OBJECTTYPE_NOT_SUPPORTED',
      'CUSTOMEVENT_PROCESSMETADATAVALUES_MISSING_NAME',
      'CUSTOMEVENT_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME',
      'CUSTOM_PROPERTY_INVALID_KEY',
      'CUSTOM_PROPERTY_INVALID_KEY_VALUE_PAIR',
      'CUSTOM_PROPERTY_INVALID_NAME',
      'CUSTOM_PROPERTY_INVALID_VALUE',
      'CUSTOM_PROPERTY_INVALID_VALUE_FOR_KEY',
      'CUSTOM_PROPERTY_NOT_SUPPORTED',
      'CUSTOM_PROPERTY_REQUIRED_KEY_MISSING',
      'DATATYPE_INVALID',
      'DATATYPE_MAPPING_BOTH_APEXCLASS_AND_SOBJECT_NOT_SUPPORTED',
      'DATATYPE_MISSING',
      'DATA_GRAPH_DATA_CHANGE_DEFAULT_DATA_SPACE_NOT_USED',
      'DATA_GRAPH_DATA_CHANGE_ROOT_DMO_MISMATCH',
      'DATA_GRAPH_DATA_CHANGE_TRIGGERING_DATA_GRAPH_NULL',
      'DATA_GRAPH_DATA_CHANGE_UNIFIED_INDIVIDUAL_NOT_USED',
      'DATA_GRAPH_DATA_CHANGE_UNIFIED_INDIVIDUAL_NOT_USED_FOR_PATH_EXPERIMENT',
      'DATA_TYPE_NOT_SUPPORTED_FOR_PROCESSTYPE',
      'DATA_TYPE_NOT_SUPPORTED_IN_CONDITION',
      'DECISION_DEFAULT_CONNECTOR_MISSING_LABEL',
      'DECISION_MISSING_OUTCOME',
      'DETERMINATION_FLOW_ACTION_TYPE_REQUIRED',
      'DUPLICATE_CUSTOM_PROPERTY_NAME',
      'DUPLICATE_QUESTION_NOT_ALLOWED',
      'DYNAMIC_TYPE_MAPPING_MISSING',
      'EITHER_CONDITIONS_OR_ACTION_NOT_SUPPORTED',
      'ELEMENT_CONNECTS_TO_SELF',
      'ELEMENT_COORDINATES_INVALID',
      'ELEMENT_INVALID_CONNECTOR',
      'ELEMENT_INVALID_REFERENCE',
      'ELEMENT_INVALID_REFERENCE_FOR_CONFLICTING_FIELD_VALUE',
      'ELEMENT_MISSING_CONNECTOR',
      'ELEMENT_MISSING_LABEL',
      'ELEMENT_MISSING_NAME',
      'ELEMENT_MISSING_REFERENCE',
      'ELEMENT_MORE_THAN_ONE_FIELD',
      'ELEMENT_NAME_INVALID',
      'ELEMENT_NEVER_USED',
      'ELEMENT_NOT_SUPPORTED_IN_SUBFLOW_FOR_TRIGGER_TYPE',
      'ELEMENT_REQUIRES_PERM',
      'ELEMENT_SCALE_SMALLER_THAN_DEFAULTVALUE',
      'ELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_ELEMENTTYPE',
      'ELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_PROCESSTYPE',
      'ELEMENT_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT',
      'ENTRY_CONDITION_CONFLICTING_FILTERS',
      'ENVIRONMENTS_VALUE_CHANGED',
      'ENVIRONMENT_PERMISSION_REQUIRED',
      'EXTERNAL_OBJECTS_NOT_SUPPORTED',
      'EXTERNAL_OBJECT_FIELDS_NOT_SUPPORTED',
      'EXTERNAL_SYSTEM_FLOW_INVALID_POLLING_FREQUENCY',
      'EX_AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE',
      'FAULT_CONNECTOR_NOT_SUPPORTED_FOR_PROCESS_TYPE',
      'FEATURE_DISABLED',
      'FIELDASSIGNMENT_FIELD_INCOMPATIBLE_DATATYPE',
      'FIELDASSIGNMENT_INVALID_DATATYPE',
      'FIELDASSIGNMENT_INVALID_ELEMENT',
      'FIELDASSIGNMENT_INVALID_REFERENCE',
      'FIELDASSIGNMENT_MULTIPLE_REFERENCES_SAME_FIELD',
      'FIELDASSIGNMENT_PICKLISTFIELD_INCOMPATIBLE_DATATYPE',
      'FIELDASSIGNMENT_REFERENCED_ELEMENT_MISSING_DATATYPE',
      'FIELDSERVICE_UNSUPPORTED_FIELD_TYPE',
      'FIELD_INVALID_VALUE',
      'FIELD_NOT_FOUND',
      'FIELD_RELATIONSHIP_NOT_SUPPORTED',
      'FIELD_REQUIRES_PERM',
      'FIELD_TYPE_NOT_SUPPORTED_AS_CHILD_OF_SCREENFIELD_REGION_OR_REGIONCONTAINER',
      'FIELD_TYPE_NOT_SUPPORTED_AS_PARENT',
      'FIELD_TYPE_UNSUPPORTED',
      'FIELD_VALUE_REQUIRES_PERM',
      'FLEXIPAGE_COMPONENT_ATTRIBUTE_EXPRESSION_EXCEPTION',
      'FLEXIPAGE_COMPONENT_ATTRIBUTE_GENERIC_EXCEPTION',
      'FLEXIPAGE_COMPONENT_ATTRIBUTE_MISSING_REQUIRED',
      'FLEXIPAGE_COMPONENT_ATTRIBUTE_TOO_LONG',
      'FLEXIPAGE_COMPONENT_CUSTOM_VALIDATION_EXCEPTION',
      'FLEXIPAGE_COMPONENT_DESIGN_EXCEPTION',
      'FLEXIPAGE_COMPONENT_EVENT_DUPLICATE_TARGET_EXCEPTION',
      'FLEXIPAGE_COMPONENT_EVENT_EMPTY_TARGET_MAPPING_EXCEPTION',
      'FLEXIPAGE_COMPONENT_EVENT_INVALID_FORMFACTOR_EXCEPTION',
      'FLEXIPAGE_COMPONENT_EVENT_INVALID_SERVICE_EXCEPTION',
      'FLEXIPAGE_COMPONENT_EVENT_SOURCE_EXCEPTION',
      'FLEXIPAGE_COMPONENT_MAX_LIMIT_EXCEPTION',
      'FLEXIPAGE_COMPONENT_RULE_VALIDATION_EXCEPTION',
      'FLEXIPAGE_DUPLICATE_PROPERTY_COMPONENT_EXCEPTION',
      'FLEXIPAGE_EVENT_ATTRIBUTE_GENERIC_EXCEPTION',
      'FLEXIPAGE_INVALID_ITEM_INSTANCE_TYPE_EXCEPTION',
      'FLEXIPAGE_INVALID_PROPERTY_TYPE_COMPONENT_EXCEPTION',
      'FLEXIPAGE_INVALID_PROPERTY_TYPE_EVENT_TARGET_EXCEPTION',
      'FLEXIPAGE_ITEM_INSTANCE_CUSTOM_VALIDATION_EXCEPTION',
      'FLEXIPAGE_MAX_INTERACTIONS_EXCEPTION',
      'FLEXIPAGE_PICKLIST_INVALID_VALUE_EXCEPTION',
      'FLEXIPAGE_RENAMED_COMPONENT_VALIDATION_EXCEPTION',
      'FLEXIPAGE_TEMPLATE_INVALID_SWITCH',
      'FLOW_ALREADY_OVERRIDDEN',
      'FLOW_CAPABILITY_INPUT_DATA_TYPE_INVALID',
      'FLOW_CAPABILITY_INPUT_INVALID',
      'FLOW_CAPABILITY_INPUT_MISSING',
      'FLOW_CAPABILITY_INVALID',
      'FLOW_CAPABILITY_MISSING',
      'FLOW_COMPLEX_VALUE_COLLECTION_TYPE_EXPECTED',
      'FLOW_COMPLEX_VALUE_INVALID',
      'FLOW_COMPLEX_VALUE_INVALID_JSON',
      'FLOW_COMPLEX_VALUE_INVALID_MERGE_FIELD',
      'FLOW_COMPLEX_VALUE_NOT_SUPPORTED',
      'FLOW_COMPLEX_VALUE_SCALAR_TYPE_EXPECTED',
      'FLOW_COMPLEX_VALUE_TYPE_ELEMENT_REFERENCE_INVALID',
      'FLOW_COMPLEX_VALUE_TYPE_ELEMENT_REFERENCE_MISSING',
      'FLOW_COMPLEX_VALUE_TYPE_FIELD_REFERENCE_INVALID',
      'FLOW_COMPLEX_VALUE_TYPE_FIELD_REFERENCE_MISSING',
      'FLOW_CONDITION_INVALID_FIELD',
      'FLOW_CONDITION_MISSING_FIELD',
      'FLOW_CONDITION_NESTING_LIMIT_EXCEEDED',
      'FLOW_CONTEXT_RECORD_ASSIGNMENT_VARIABLE_INVALID',
      'FLOW_CUSTOM_ERROR_COMPOUND_FIELD_NOT_SUPPORTED',
      'FLOW_CUSTOM_ERROR_EMPTY_MESSAGES_LIST',
      'FLOW_CUSTOM_ERROR_INVALID_OR_INCOMPLETE_FIELD',
      'FLOW_CUSTOM_ERROR_MULTIPLE_ERRORS_ON_FIELD',
      'FLOW_CUSTOM_ERROR_MULTIPLE_PAGE_ERRORS_EXCEPTION',
      'FLOW_CUSTOM_ERROR_NO_FIELD_SELECTION_FOR_FIELD_ERROR',
      'FLOW_ELEMENT_SCALE_LESS_THAN_ZERO',
      'FLOW_EXCEEDED_EXITRULE_MAX_COUNT',
      'FLOW_EXITRULE_EXECUTION_DELAY_WARNING',
      'FLOW_EXITRULE_WITH_NO_CONDITION',
      'FLOW_EXPERIMENT_DATA_GRAPH_NAME_NOT_SET',
      'FLOW_EXPERIMENT_DURATION_INVALID_VALUE',
      'FLOW_EXPERIMENT_DURATION_UNIT_INVALID_VALUE',
      'FLOW_EXPERIMENT_GO_TO_NOT_SUPPORTED',
      'FLOW_EXPERIMENT_INVALID_TOTAL_PATH_PERCENTAGE',
      'FLOW_EXPERIMENT_IS_NOT_ALLOWED_WITH_PENDING_DML',
      'FLOW_EXPERIMENT_NESTING_IN_SUBFLOW_NOT_SUPPORTED',
      'FLOW_EXPERIMENT_NESTING_NOT_SUPPORTED',
      'FLOW_EXPERIMENT_PATHS_COUNT_ABOVE_MAXIMUM',
      'FLOW_EXPERIMENT_PATHS_COUNT_BELOW_MINIMUM',
      'FLOW_EXPERIMENT_PATH_PERCENTAGE_INVALID',
      'FLOW_EXPERIMENT_PERSONALIZATION_SETUP_INCOMPLETE',
      'FLOW_EXPERIMENT_TEST_GROUP_NOT_SUPPORTED',
      'FLOW_EXPERIMENT_TEST_GROUP_PERCENTAGE_INVALID_VALUE',
      'FLOW_FORMULA_FIELD_MISSING',
      'FLOW_FORMULA_NOT_SUPPORTED',
      'FLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_CALLOUTS',
      'FLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_OBJECTS',
      'FLOW_INCLUDES_STEP',
      'FLOW_INLINE_TRANSFORM_API_VERSION_NOT_SUPPORTED',
      'FLOW_INLINE_TRANSFORM_NOT_SUPPORTED',
      'FLOW_INPUTPARAM_MISMATCHED_APEX_CLASS',
      'FLOW_INTERVIEW_BULK_EXECUTION',
      'FLOW_INTERVIEW_HANDLED_ERROR',
      'FLOW_INTERVIEW_INPUT_VALIDATION',
      'FLOW_INTERVIEW_INTERACTION_NOT_FOUND',
      'FLOW_INTERVIEW_INVALID_CHOICE_USER_INPUT',
      'FLOW_INTERVIEW_INVALID_FIELD_VALUE',
      'FLOW_INTERVIEW_INVALID_START_REQUEST',
      'FLOW_INTERVIEW_LIMIT_EXCEEDED',
      'FLOW_INTERVIEW_MISSING_CHOICE_FOR_REQUIRED_CHOICE_FIELD',
      'FLOW_INTERVIEW_MISSING_VALUE_FOR_REQUIRED_INPUT_FIELD',
      'FLOW_INTERVIEW_NAVIGATE',
      'FLOW_INTERVIEW_RANGE_VALIDATION',
      'FLOW_INTERVIEW_RECOVERABLE_ERROR',
      'FLOW_INTERVIEW_REGEX_VALIDATION',
      'FLOW_INTERVIEW_RESUME_INTERVIEW',
      'FLOW_INTERVIEW_SAVE_RESULT',
      'FLOW_INTERVIEW_SET_CHOICE_SELECTED',
      'FLOW_INTERVIEW_START_INTERVIEW',
      'FLOW_INTERVIEW_TYPE_CONVERSION',
      'FLOW_INVALID_EVENT_NAME',
      'FLOW_INVALID_EVENT_TYPE',
      'FLOW_INVALID_NAME',
      'FLOW_METRICS_NOT_SUPPORTED',
      'FLOW_NAME_USED_IN_OTHER_CLIENT',
      'FLOW_ORCHESTRATOR_FREEMIUM_PRODUCT',
      'FLOW_OVERRIDABLE_CANNOT_BE_OVERRIDE',
      'FLOW_OVERRIDABLE_CANNOT_BE_TEMPLATE',
      'FLOW_OVERRIDDEN_FLOW_INVALID_REFERENCE',
      'FLOW_OVERRIDE_EXTRA_VARIABLE',
      'FLOW_OVERRIDE_INCOMPATIBLE_PROCESS_TYPE',
      'FLOW_OVERRIDE_INCOMPATIBLE_TYPE',
      'FLOW_OVERRIDE_INCOMPATIBLE_VARIABLE',
      'FLOW_RECORD_LOOKUP_LIMIT_NOT_SUPPORTED',
      'FLOW_RECORD_LOOKUP_LIMIT_OUT_OF_RANGE',
      'FLOW_RECORD_PRIOR_AUTOLAUNCH_UPDATE_ONLY',
      'FLOW_RECORD_PRIOR_INVALID_IN_RECORD_CREATE',
      'FLOW_RECORD_PRIOR_INVALID_IN_RECORD_DELETE',
      'FLOW_RECORD_PRIOR_INVALID_IN_RECORD_UPDATE',
      'FLOW_RECORD_PRIOR_READ_ONLY',
      'FLOW_REFERENCES_APEX_CLASS_NOT_IN_SAME_PACKAGE',
      'FLOW_RESOURCE_NOT_SUPPORTED_FOR_ENVIRONMENT',
      'FLOW_RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED_FOR_RECORD_PRIOR',
      'FLOW_RUN_AS_SYSTEM_MODE_WITHOUT_CONTEXT_WARNING',
      'FLOW_RUN_AS_SYSTEM_MODE_WITH_CONTEXT_WARNING',
      'FLOW_SCHEDULED_PATH_ALLOWED_ONE_ASYNCAFTERCOMMIT_PATH',
      'FLOW_SCHEDULED_PATH_ASYNCAFTERCOMMIT_REQUIRES_RECORD_CHANGED_OR_ISCHANGED',
      'FLOW_SCHEDULED_PATH_CANNOT_USE_IS_CHANGED',
      'FLOW_SCHEDULED_PATH_INCOMPATIBLE_TIME_SOURCE',
      'FLOW_SCHEDULED_PATH_INCOMPATIBLE_WHEN_DECISION_REQUIRES_RECORD_CHANGED',
      'FLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_FLOW_TRIGGER_TYPE',
      'FLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_RECORD_PRIOR',
      'FLOW_SCHEDULED_PATH_INVALID_BATCH_SIZE',
      'FLOW_SCHEDULED_PATH_INVALID_OFFSET',
      'FLOW_SCHEDULED_PATH_REQUIRED_FIELDS_MISSING',
      'FLOW_SCHEDULED_PATH_REQUIRES_DEFAULT_WORKFLOW_USER',
      'FLOW_SCHEDULED_PATH_REQUIRES_RECORD_CHANGED_TO_MEET_CRITERIA',
      'FLOW_SCHEDULE_INFORMATION_INCOMPLETE',
      'FLOW_SEGMENT_AND_DG_NOT_MATCH_ON_DMO',
      'FLOW_SOBJECT_VARIABLE_NOT_PERSISTED',
      'FLOW_SOURCE_TEMPLATE_INVALID_REFERENCE',
      'FLOW_STAGE_INCLUDES_REFERENCES',
      'FLOW_STAGE_ORDER_DUPLICATE',
      'FLOW_STAGE_ORDER_OUT_OF_RANGE',
      'FLOW_START_INPUT_INVALID_INPUT',
      'FLOW_START_INPUT_INVALID_TYPE',
      'FLOW_START_INPUT_NOT_ALLOWED',
      'FLOW_START_INPUT_REQUIRED',
      'FLOW_SYSTEM_VARIABLE_NOT_SUPPORTED_FOR_TRIGGERTYPE',
      'FLOW_TEST_API_NAME_DUPLICATED',
      'FLOW_TEST_ASSERTION_MISSING',
      'FLOW_TEST_ASSERTION_NOT_SUPPORTED',
      'FLOW_TEST_CONDITION_INCOMPATIBLE',
      'FLOW_TEST_CONDITION_INVALID_DATATYPE_MAPPING',
      'FLOW_TEST_CONDITION_LIMIT',
      'FLOW_TEST_CONDITION_NOT_SUPPORTED',
      'FLOW_TEST_DATATYPE_INVALID',
      'FLOW_TEST_FLOW_INVALID',
      'FLOW_TEST_IMMEDIATE_PATH_MISSING',
      'FLOW_TEST_MERGE_FIELD_INVALID',
      'FLOW_TEST_MERGE_FIELD_NOT_SUPPORTED',
      'FLOW_TEST_OPERATOR_INVALID',
      'FLOW_TEST_PARAMETER_DUPLICATED',
      'FLOW_TEST_PARAMETER_INCOMPATIBLE',
      'FLOW_TEST_PARAMETER_INVALID',
      'FLOW_TEST_PARAMETER_LEFTVALUEREFERENCE_INVALID',
      'FLOW_TEST_PARAMETER_MISSING',
      'FLOW_TEST_PARAMETER_NOT_SUPPORTED',
      'FLOW_TEST_PARAMETER_TYPE_INVALID',
      'FLOW_TEST_PARAMETER_VALUE_INVALID',
      'FLOW_TEST_PARAMETER_VALUE_MISSING',
      'FLOW_TEST_PARAMS_REQUIRED',
      'FLOW_TEST_POINTS_DUPLICATED',
      'FLOW_TEST_POINT_MISSING',
      'FLOW_TEST_POINT_NOT_SUPPORTED',
      'FLOW_TEST_PROCESSTYPE_INVALID',
      'FLOW_TEST_RIGHTVALUE_INVALID',
      'FLOW_TRANSFORM_AGGR_COLL_NUM_OF_REF',
      'FLOW_TRANSFORM_AGGR_SOURCE_INVALID',
      'FLOW_TRANSFORM_APEX_CLASS_INCOMPATIBLE',
      'FLOW_TRANSFORM_API_VERSION_NOT_SUPPORTED',
      'FLOW_TRANSFORM_ASSIGN_TO_REFERENCE_UNSUPPORTED',
      'FLOW_TRANSFORM_COLL_DEPTH_UP_TO_TWO',
      'FLOW_TRANSFORM_COLL_INVALID',
      'FLOW_TRANSFORM_COLL_UNAVAILABLE',
      'FLOW_TRANSFORM_COMPOUND_FIELD_UNSUPPORTED',
      'FLOW_TRANSFORM_ELEMENT_REFERENCE_INVALID',
      'FLOW_TRANSFORM_ELEMENT_REFERENCE_TYPE_INCOMPATIBLE',
      'FLOW_TRANSFORM_FIELD_INVALID',
      'FLOW_TRANSFORM_FIELD_MISSING_INPUT_PARAMETER',
      'FLOW_TRANSFORM_FMLAFOR_COLL_NOT_SUPP',
      'FLOW_TRANSFORM_FMLA_COLL_MULT_RSRC',
      'FLOW_TRANSFORM_GETITEMBYINDEX_INDEX_INVALID',
      'FLOW_TRANSFORM_GETITEMBYINDEX_INDEX_MISSING',
      'FLOW_TRANSFORM_INPUT_PARAM_DUPLICATED',
      'FLOW_TRANSFORM_INPUT_PARAM_INVALID',
      'FLOW_TRANSFORM_INPUT_PARAM_MISSING',
      'FLOW_TRANSFORM_INVALID_INPUT_PARAMETER_VALUE',
      'FLOW_TRANSFORM_INVALID_JOIN_KEYS',
      'FLOW_TRANSFORM_INVALID_MULTIPLE_TRANSFORM_VALUE_ACTIONS',
      'FLOW_TRANSFORM_INVALID_TARGET_FIELD',
      'FLOW_TRANSFORM_JOIN_DUPLICATE_SELECTED_FIELD',
      'FLOW_TRANSFORM_JOIN_INVALID_SELECTED_FIELD',
      'FLOW_TRANSFORM_JOIN_KEY_UNSUPPORTED',
      'FLOW_TRANSFORM_JOIN_MISSING_SELECTED_FIELDS',
      'FLOW_TRANSFORM_JOIN_NOT_SUPPORTED',
      'FLOW_TRANSFORM_MAP_COLL_MISSING',
      'FLOW_TRANSFORM_MAP_COLL_MISSING_SOURCE',
      'FLOW_TRANSFORM_MAP_COLL_MULT_SOURCE',
      'FLOW_TRANSFORM_MAP_COLL_NUM_OF_REF',
      'FLOW_TRANSFORM_MAP_COLL_RELA_RECORDS',
      'FLOW_TRANSFORM_MAP_COL_PRIMITIVE_INCOMPA',
      'FLOW_TRANSFORM_MAP_RSRC_TYPE_NOT_SUPPORTED',
      'FLOW_TRANSFORM_MAP_STATIC_VAL_COLL_MISSING',
      'FLOW_TRANSFORM_MISSING_JOIN_FIELD_MAPPING',
      'FLOW_TRANSFORM_OUTPUT_FIELD_API_NAME_INVALID',
      'FLOW_TRANSFORM_REQUIRES_AUTOMATIC_OUTPUT',
      'FLOW_TRANSFORM_SPLIT_JOIN_FIELD_MAPPING',
      'FLOW_TRANSFORM_SUM_SOURCE_TYPE_INVALID',
      'FLOW_TRANSFORM_TYPE_NAME_DUPLICATED',
      'FLOW_TRANSFORM_TYPE_NOT_SUPPORTED',
      'FLOW_TRANSFORM_UNEXPECTED_AUTO_PARAMS',
      'FLOW_TRANSFORM_VALUES_MISSING',
      'FLOW_TRANSFORM_VALUE_INVALID',
      'FLOW_TRANSFORM_VAL_NAME_NOT_SUPPORTED',
      'FLOW_TRANSFORM_VAL_REF_NOT_SUPPORTED',
      'FLOW_TRIGGER_DERIVED_FIELD_NOT_SUPPORTED',
      'FLOW_TRIGGER_ORDER_OUT_OF_BOUNDS',
      'FLOW_TRIGGER_TYPE_INCOMPATIBLE_WITH_RECORD_TRIGGER_TYPE',
      'FLOW_UPSERT_EXTERNAL_ID_FIELD_INVALID',
      'FLOW_UPSERT_EXTERNAL_ID_FIELD_NOT_UNIQUE',
      'FLOW_UPSERT_STANDARD_FIELD_INVALID',
      'FLOW_UPSERT_STANDARD_ID_FIELD_IDLOOKUP_FALSE',
      'FLOW_UPSERT_UNIQUE_ID_CONFLICT',
      'FORMULA_CMT_LIMIT_EXCEEDED',
      'FORMULA_EXPRESSION_INVALID',
      'FORM_ALREADY_IN_USE_BY_DRAFT_VERSION',
      'FORM_ALREADY_IN_USE_BY_FLOW',
      'FTEST_EXTENSION_CODE_FOR_TEST',
      'GLOBAL_VARIABLE_NOT_SUPPORTED_FOR_PROCESSTYPE',
      'GOTO_NOT_SUPPORTED_FOR_PROCESS_TYPE',
      'HELP_TEXT_NOT_SUPPORTED_FOR_SCREEN_FIELD',
      'HTTP_METHOD_NOT_SUPPORTED',
      'INACCESSIBLE_EVENT_TYPE',
      'INCONSISTENT_ACTION_VERSIONS',
      'INCONSISTENT_DYNAMIC_TYPE_MAPPING',
      'INCONSISTENT_VALUE_FOR_DYNAMIC_VALUE_FIELD',
      'INDIVIDUAL_CONTACT_POINT_NOT_FOUND',
      'INDIVIDUAL_NOT_FOUND',
      'INPUTPARAM_CONFIGURATION_NOT_FOUND',
      'INPUTPARAM_INCOMPATIBLE_CONFIGURATION_ONLY',
      'INPUTPARAM_INCOMPATIBLE_DATATYPE',
      'INPUTPARAM_INCOMPATIBLE_WITH_COLLECTION_VARIABLE',
      'INPUTPARAM_INCOMPATIBLE_WITH_NONCOLLECTION_VARIABLE',
      'INPUTPARAM_MISMATCHED_OBJECTTYPE',
      'INPUTPARAM_VARIABLE_MISSING',
      'INPUTVARIABLE_COLLECTION_NOT_SUPPORTED_FOR_DYNAMIC_ACTION',
      'INPUTVARIABLE_COLLECTION_NOT_SUPPORTED_FOR_ENVIRONMENT',
      'INPUTVARIABLE_DATATYPE_NOT_SUPPORTED_FOR_DYNAMIC_ACTION',
      'INPUTVARIABLE_DATATYPE_NOT_SUPPORTED_FOR_ENVIRONMENT',
      'INSUFFICIENT_ACCESS_FOR_UPSERT',
      'INVALID_ACTION_TYPE_FOR_STEP',
      'INVALID_ASSIGNEE',
      'INVALID_CONTENT_TYPE',
      'INVALID_EMAIL_ADDRESS',
      'INVALID_ENVIRONMENTS_VALUE',
      'INVALID_FLOW',
      'INVALID_FLOW_INTERVIEW',
      'INVALID_ID',
      'INVALID_INPUT',
      'INVALID_OPERATION_TYPE',
      'INVALID_ORCH_ASSIGNEE_TYPE_FOR_PACKAGE',
      'INVALID_PROCESSTYPE_ENVIRONMENT_COMBINATION',
      'INVALID_QUERY_LOCATOR_FORMAT',
      'INVALID_REGEX_IN_SURVEY_QUESTIONS',
      'INVALID_RUN_CONTEXT',
      'INVALID_SEGMENT_STATUS_FOR_ACTIVATION',
      'INVALID_SENDER_TYPE',
      'INVALID_SETUP_REFERENCE_TYPE',
      'INVALID_STAGE_REFERENCE',
      'INVALID_STAGE_STEP_ASSIGNEE_TYPE',
      'INVALID_SURVEY_VARIABLE_NAME_OR_TYPE',
      'INVALID_TIME_ZONE',
      'INVALID_TYPE',
      'INVOCABLE_ACTION_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT',
      'LOCATOR_LOCATION_EXCEEDS_SIZE',
      'LOOP_ASSIGNNEXTVALUETO_MISMATCHED_APEXCLASSTYPE',
      'LOOP_ASSIGNNEXTVALUETO_MISMATCHED_DATATYPE',
      'LOOP_ASSIGNNEXTVALUETO_MISMATCHED_OBJECTTYPE',
      'LOOP_ASSIGNNEXTVALUETO_MISSING',
      'LOOP_ASSIGNNEXTVALUETO_MISSING_VARIABLE',
      'LOOP_ASSIGNNEXTVALUETO_REFERENCE_NOT_FOUND',
      'LOOP_COLLECTION_ELEMENT_NOT_FOUND',
      'LOOP_COLLECTION_NOT_FOUND',
      'LOOP_COLLECTION_NOT_SUPPORTED_FOR_FIELD',
      'LOOP_MISSING_COLLECTION',
      'MANAGEDCONTENT_STATUS_INVALID',
      'MANUAL_VARIABLE_ASSIGNMENT_NOT_SUPPORTED',
      'MAX_CHILD_TYPES',
      'MAX_EXTERNAL_REFERENCES_IN_QUERY',
      'MAX_STATEMENT_SIZE',
      'MERGE_FIELD_NOT_SUPPORTED_IN_ACTION',
      'MESSAGING_API_ENTITLEMENT_REACHED',
      'MESSAGING_INACTIVE_CHANNEL',
      'MISSING_ASSIGNEE',
      'MISSING_ASSIGNEE_TYPE',
      'MISSING_EMAIL_RECIPIENTS',
      'MISSING_FLOW_TRANSFORM_SUM_FIELD',
      'MISSING_MULESOFT_STEP_ASSIGNEE',
      'MULTIPLE_ASSIGNEES_NOT_ALLOWED',
      'NON_EXPOSED_COMPONENT_IN_FLOW',
      'NON_GLOBAL_COMPONENT_IN_EXPORTED_FLOW',
      'NUMBER_OF_SCREENFIELD_REGIONS_EXCEEDS_LIMIT',
      'OBJECTTYPE_INVALID',
      'OBJECT_CANNOT_BE_CREATED',
      'OBJECT_CANNOT_BE_DELETED',
      'OBJECT_CANNOT_BE_QUERIED',
      'OBJECT_CANNOT_BE_UPDATED',
      'OBJECT_ENCRYPTED_FIELDS_NOT_SUPPORTED',
      'OBJECT_NOT_FOUND',
      'OBJECT_TYPE_DOES_NOT_EXIST',
      'OBJECT_TYPE_NOT_CDC_ENABLED',
      'ORCHESTRATION_CAN_ASSIGNEE_EDIT_NOT_SUPPORTED',
      'ORCHESTRATION_REQUIRESASYNCPROCESSING_NOT_SUPPORTED',
      'ORCHESTRATION_REQUIRESASYNCPROCESSING_REQUIRED',
      'ORCHESTRATION_STEP_LOCK_RECORD_NOT_SUPPORTED',
      'ORG_WIDE_EMAIL_INVALID',
      'ORG_WIDE_EMAIL_NOT_USED',
      'OUTPUTPARAM_ASSIGNTOREFERENCE_INVALID',
      'OUTPUTPARAM_ASSIGNTOREFERENCE_NOTFOUND',
      'OUTPUTPARAM_INCOMPATIBLE_DATATYPE',
      'OUTPUTPARAM_MISMATCHED_OBJECTTYPE',
      'OUTPUTPARAM_MISMATCHED_WITH_COLLECTION_VARIABLE',
      'OUTPUTPARAM_MISSING_ASSIGNTOREFERENCE',
      'OUTPUTPARAM_MISTMATCHED_WITH_NONCOLLECTION_VARIABLE',
      'PARAM_DATATYPE_NOT_SUPPORTED',
      'PAST_SCHEDULE_FLOW_WILL_NOT_RUN',
      'PLATFORM_EVENT_TRIGGERED_FLOW_REQUIRES_DEFAULT_WORKFLOW_USER',
      'PRICE_ADJUSTMENT_TIER_VALIDATION_ERROR',
      'PROCESSMETADATAVALUES_NOT_SUPPORTED_FOR_PROCESSTYPE',
      'PROCESSMETADATAVALUE_NONEXISTENT_ELEMENT',
      'PROCESSTYPE_COMPONENTTYPE_NOT_SUPPORTED',
      'PROCESSTYPE_ELEMENT_CONFIG_NOT_SUPPORTED',
      'PROCESSTYPE_ELEMENT_NOT_SUPPORTED',
      'PROCESSTYPE_EVALUATIONFLOW_REQUIRED',
      'PROCESSTYPE_NOT_SUPPORTED',
      'PROCESSTYPE_SCREEN_FIELDTYPE_NOT_SUPPORTED',
      'PROCESS_TYPE_ELEMENT_ATTRIBUTE_REQUIRED',
      'PROCESS_TYPE_INCOMPATIBLE',
      'PROGRESS_INDICATOR_NOT_SUPPORTED',
      'PROMPT_FLOW_CONTAINS_INVALID_VARIABLE',
      'PROMPT_FLOW_INPUT_TYPE_CONFLICT',
      'QUERY_LOCATOR_EXPIRED',
      'QUERY_LOCATOR_NOT_FOUND',
      'QUEUE_DOES_NOT_SUPPORT_ORCHESTRATION_WORK_ITEMS',
      'RECOMMENDATION_STRATEGY_EXCEPTION',
      'RECORDFILTER_ENCRYPTED_FIELDS_NOT_SUPPORTED',
      'RECORDFILTER_GEOLOCATION_FIELDS_NOT_SUPPORTED',
      'RECORDFILTER_INVALID_DATATYPE',
      'RECORDFILTER_INVALID_ELEMENT',
      'RECORDFILTER_INVALID_OPERATOR',
      'RECORDFILTER_INVALID_REFERENCE',
      'RECORDFILTER_MISSING_DATATYPE',
      'RECORDFILTER_MULTIPLE_QUERIES_SAME_FIELD',
      'RECORDFILTER_NON_PRIMITIVE',
      'RECORDLOOKUP_IDASSIGNMENT_VARIABLE_INCOMPATIBLE_DATATYPE',
      'RECORDLOOKUP_IDASSIGNMENT_VARIABLE_NOT_FOUND',
      'RECORDUPDATE_MISSING_FILTERS',
      'RECORD_CHANGE_LISTENER_CONDITIONS_NON_RECORD_GLOBAL_VARIABLE',
      'RECORD_CHANGE_LISTENER_CONDITIONS_NOT_SUPPORTED',
      'RECORD_CHANGE_LISTENER_CONDITIONS_THRESHOLD_BREACHED',
      'RECORD_CREATE_MISSING_FILTERS',
      'RECORD_PRIOR_VALUE_REMAIN_SAME_BEFORE_TRIGGER',
      'REFERENCED_ELEMENT_NOT_FOUND',
      'REFERENCE_NOT_SUPPORTED',
      'REPEATER_API_VERSION_NOT_SUPPORTED',
      'REPEATER_API_VERSION_UPGRADE',
      'REPEATER_COMPONENT_CURRENTLY_NOT_SUPPORTED',
      'REPEATER_DATA_SOURCE_INCOMPATIBLE_TYPE',
      'REPEATER_REMOVED_FIELD_INVALID',
      'REQUIRED_VARIABLE_INVALID',
      'REQUIRED_VARIABLE_MISSING',
      'RESOURCE_NOT_SUPPORTED',
      'RPA_FLOW_ROBOT_POOL_INFORMATION_INCOMPLETE',
      'RULE_MISSING_CONDITION',
      'RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED',
      'RUN_AS_USER_NOT_SUPPORTED',
      'RUN_AS_USER_REQUIRED_WHEN_SPECIFYING_ASSIGNEE',
      'SCHEDULE_TRIGGERED_FLOW_REQUIRES_DEFAULT_WORKFLOW_USER',
      'SCREENACTION_CALLS_FLOW_WITH_INSECURE_RUN_AS_MODE',
      'SCREENACTION_INVALID_INPUT_PARAM',
      'SCREENACTION_MISSING_REQUIRED_NAME',
      'SCREENACTION_MISSING_REQUIRED_TYPE',
      'SCREENACTION_NOT_SUPPORTED_IN_ORG',
      'SCREENACTION_TRIGGER_EVENT_SOURCE_NOT_ON_SAME_SCREEN',
      'SCREENACTION_TRIGGER_HANDLER_EXCEEDS_CONDITION_LIMIT',
      'SCREENACTION_TRIGGER_HANDLER_NOT_VALID_SCREEN_ACTION',
      'SCREENACTION_TYPE_NOT_SUPPORTED_IN_ORG',
      'SCREENCOMPONENT_CONTAINS_VISIBILITY_RULE',
      'SCREENFIELD_API_VERSION_NOT_SUPPORTED',
      'SCREENFIELD_BOOLEAN_ISREQUIRED_IS_FALSE',
      'SCREENFIELD_CANNOT_HAVE_BOTH_DEFAULTVALUE_AND_DEFAULTSELECTEDCHOICEREFERENCE',
      'SCREENFIELD_DEFAULTVALUE_NOT_SUPPORTED',
      'SCREENFIELD_EXTENSION_DUPLICATE_INPUT_PARAM',
      'SCREENFIELD_EXTENSION_DUPLICATE_OUTPUT_PARAM',
      'SCREENFIELD_EXTENSION_IMPLEMENTATION_INVALID',
      'SCREENFIELD_EXTENSION_INPUT_ATTRIBUTE_INVALID',
      'SCREENFIELD_EXTENSION_NAME_INVALID',
      'SCREENFIELD_EXTENSION_NAME_MISSING',
      'SCREENFIELD_EXTENSION_NAME_NOT_SUPPORTED',
      'SCREENFIELD_EXTENSION_OUTPUT_ATTRIBUTE_INVALID',
      'SCREENFIELD_EXTENSION_REQUIRED_INPUT_MISSING',
      'SCREENFIELD_INPUTS_NOT_SUPPORTED',
      'SCREENFIELD_INPUTS_ON_NEXT_NAV_TO_ASSOC_SCRN_NOT_SUPPORTED',
      'SCREENFIELD_INVALID_DATATYPE',
      'SCREENFIELD_MULTISELECTCHOICE_SEMICOLON_NOT_SUPPORTED',
      'SCREENFIELD_OBJECTFIELDREFERENCE_INVALID_FORMAT',
      'SCREENFIELD_OBJECTPROVIDED_CANNOT_HAVE_DEFAULTVALUE',
      'SCREENFIELD_OBJECTPROVIDED_CANNOT_HAVE_HELPTEXT',
      'SCREENFIELD_OBJECTPROVIDED_INVALID_DATATYPE',
      'SCREENFIELD_OBJECTPROVIDED_ISREQUIRED_NOT_SUPPORTED',
      'SCREENFIELD_OBJECTPROVIDED_LIGHTNING_RUNTIME_DISABLED',
      'SCREENFIELD_OBJECTPROVIDED_MISSING_OBJECTFIELDREFERENCE',
      'SCREENFIELD_OUTPUTS_NOT_SUPPORTED',
      'SCREENFIELD_REGION_CONTAINS_DUPLICATE_INPUT_PARAMETER_VALUES',
      'SCREENFIELD_REGION_INPUT_PARAMETER_NOT_SUPPORTED',
      'SCREENFIELD_REGION_MISSING_REQUIRED_PERMISSIONS',
      'SCREENFIELD_REGION_NOT_IN_CONTAINER',
      'SCREENFIELD_REGION_REQUIRED_INPUT_PARAMETER_MISSING',
      'SCREENFIELD_REGION_WIDTH_SUM_EXCEEDS_LIMIT',
      'SCREENFIELD_REGION_WIDTH_VALUE_INVALID',
      'SCREENFIELD_TYPE_NOT_SUPPORTED',
      'SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_API_VERSION',
      'SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT',
      'SCREENFIELD_USERINPUT_NOT_SUPPORTED_FOR_CHOICETYPE',
      'SCREENFIELD_VALIDATIONRULE_NOT_SUPPORTED',
      'SCREENFIELD_VALIDATION_RULES_NOT_SUPPORTED_FOR_ENVIRONMENT',
      'SCREENFIELD_VALIDATION_RULES_NOT_SUPPORTED_FOR_EXTENSIONS_WITHOUT_OUTPUTS',
      'SCREENFOOTER_MERGEFIELD_NOT_SUPPORTED',
      'SCREENRULE_ACTION_INVALID_ATTRIBUTE',
      'SCREENRULE_ACTION_INVALID_ATTRIBUTE_FOR_API_VERSION',
      'SCREENRULE_ACTION_INVALID_VALUE',
      'SCREENRULE_ACTION_MISSING_ATTRIBUTE',
      'SCREENRULE_ACTION_MISSING_FIELDREFERENCE',
      'SCREENRULE_ACTION_MISSING_VALUE',
      'SCREENRULE_ATTRIBUTE_NOT_SUPPORTED_FOR_SCREENFIELD',
      'SCREENRULE_FIELD_NOT_FOUND_ON_SCREEN',
      'SCREENRULE_MISSING_ACTION',
      'SCREENRULE_NOT_SUPPORTED_IN_ORG',
      'SCREENRULE_SCREENFIELD_NOT_VISIBLE',
      'SCREENRULE_VISIBILITY_NOT_SUPPORTED_IN_ORG',
      'SCREEN_ACTION_NOT_FOUND_WITH_NAME_AND_TYPE',
      'SCREEN_ALLOWBACK_ALLOWFINISH_BOTH_FALSE',
      'SCREEN_CONTAINS_LIGHTNING_COMPONENT',
      'SCREEN_CONTAINS_REGION_CONTAINER_COMPONENT',
      'SCREEN_FIELD_REGION_CONTAINER_TYPE_INVALID_VALUE',
      'SCREEN_FIELD_REGION_CONTAINER_TYPE_MISSING',
      'SCREEN_FIELD_SECTION_HEADER_INVALID_VALUE',
      'SCREEN_FIELD_SECTION_HEADER_MISSING',
      'SCREEN_MISSING_FOOTER_AND_LIGHTNING_COMPONENT',
      'SCREEN_MISSING_LABEL',
      'SCREEN_MULTISELECTFIELD_DOESNT_SUPPORT_CHOICE_WITH_USERINPUT',
      'SCREEN_PAUSEDTEXT_NOT_SHOWN_WHEN_ALLOWPAUSE_IS_FALSE',
      'SEND_EMAIL_UNSUPPORTED',
      'SETTING_FIELD_MAKES_OTHER_FIELD_REQUIRED',
      'SETTING_FIELD_MAKES_OTHER_FIELD_UNSUPPORTED',
      'SETTING_FIELD_VALUE_MAKES_OTHER_FIELD_UNSUPPORTED',
      'SETTING_FIELD_VALUE_MAKES_OTHER_FIELD_VALUE_UNSUPPORTED',
      'SETUP_REFERENCE_ALLOWED_ONLY_IN_ACTION_INPUT',
      'SETUP_REFERENCE_TYPE_NOT_PACKAGEABLE',
      'SETUP_REFERENCE_VALUE_REQUIRES_DEVELOPER_NAMES',
      'SLACK_API_EXCEPTION_EXTENSION',
      'SOBJECT_ELEMENT_INCOMPATIBLE_DATATYPE',
      'SOBJECT_ELEMENT_MISMATCHED_OBJECTTYPE',
      'SORT_ENCRYPTED_FIELDS_NOT_SUPPORTED',
      'SORT_FIELD_MISSING',
      'SORT_FIELD_NOT_SUPPORTED',
      'SORT_GEOLOCATION_FIELDS_NOT_SUPPORTED',
      'SORT_LIMIT_INVALID',
      'SORT_ORDER_MISSING',
      'SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_REQUIRED',
      'SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_VALUE_REQUIRED',
      'STAGE_NAME_NOT_FULLY_QUALIFIED',
      'STAGE_STEP_ASSIGNEE_NOT_SUPPORTED',
      'START_ELEMENT_MISSING',
      'SUBFLOW_DESKTOP_DESIGNER_FLOWS_NOT_SUPPORTED',
      'SUBFLOW_DIFFERENT_RUNMODE',
      'SUBFLOW_INPUT_MISSING_NAME',
      'SUBFLOW_INPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE',
      'SUBFLOW_INPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE',
      'SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW',
      'SUBFLOW_INPUT_VARIABLE_NO_INPUT_ACCESS',
      'SUBFLOW_INVALID_NAME',
      'SUBFLOW_INVALID_REFERENCE',
      'SUBFLOW_MASTER_FLOW_TYPE_NOT_AUTOLAUNCHED',
      'SUBFLOW_MISSING_NAME',
      'SUBFLOW_NO_ACTIVE_VERSION',
      'SUBFLOW_OUTPUT_INCOMPATIBLE_DATATYPES',
      'SUBFLOW_OUTPUT_MISMATCHED_APEX_CLASS',
      'SUBFLOW_OUTPUT_MISMATCHED_COLLECTIONTYPES',
      'SUBFLOW_OUTPUT_MISMATCHED_OBJECTS',
      'SUBFLOW_OUTPUT_MISSING_ASSIGNTOREFERENCE',
      'SUBFLOW_OUTPUT_MISSING_NAME',
      'SUBFLOW_OUTPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE',
      'SUBFLOW_OUTPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE',
      'SUBFLOW_OUTPUT_TARGET_DOES_NOT_EXIST_IN_MASTER_FLOW',
      'SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW',
      'SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW',
      'SUBFLOW_OUTPUT_VARIABLE_NO_OUTPUT_ACCESS',
      'SUBFLOW_PROCESSTYPE_NOT_SUPPORTED',
      'SUBFLOW_PROCESS_TYPE_INCOMPATIBLE',
      'SUBFLOW_REFERENCES_MASTERFLOW',
      'SURVEY_ADVANCED_CONDITION_LOGIC_NOT_SUPPORTED',
      'SURVEY_CHOICE_NOT_REFERENCED_BY_A_QUESTION',
      'SURVEY_CHOICE_REFERENCED_BY_MULTIPLE_QUESTIONS',
      'SURVEY_ELEMENT_NEVER_REACHED',
      'SURVEY_ENRICH_INVALID_CONFIGURATION',
      'SURVEY_INACTIVE_SUBFLOWS',
      'SURVEY_INVALID_ATTACHMENT_QUESTION_CONFIGURATION',
      'SURVEY_INVALID_CMT_CONFIGURED',
      'SURVEY_INVALID_CUSTOM_THANK_YOU_CONFIGURATION',
      'SURVEY_INVALID_LINK_TARGET_IN_QUESTION_LABEL',
      'SURVEY_INVALID_MATRIX_QUESTION_CONFIGURATION',
      'SURVEY_INVALID_MERGE_FIELD_CONFIGURATION',
      'SURVEY_INVALID_OUTPUT_VARIABLE',
      'SURVEY_MISSING_QUESTION_OR_SUBFLOW',
      'SURVEY_MISSING_REQUIRED_VARIABLES',
      'SURVEY_MULTIPLE_SCREENS_CANNOT_CONNECT_TO_SAME_DECISION',
      'SURVEY_NESTED_SUBFLOWS',
      'SURVEY_NONSURVEY_SUBFLOWS',
      'SURVEY_PAGE_CAN_HAVE_ONLY_ONE_QUESTION',
      'SURVEY_RULE_INVALID_LEFT_OPERAND',
      'SURVEY_RULE_INVALID_RIGHT_OPERAND',
      'SURVEY_SAVE_ERROR',
      'SURVEY_SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_QUESTION',
      'SURVEY_START_ELEMENT_INVALID',
      'SURVEY_VARIABLE_ACCESS_INVALID',
      'SYSTEM_MODE_NOT_ALLOWED',
      'SYSTEM_VARIABLE_MISSING_FIELD_REFERENCE',
      'TEMPLATED_PRVD_TYPE_INCOMPATIBLE_FLOW_TYPE',
      'TEMPLATED_SCREENFIELD_INFO_MISSING',
      'TEMPLATED_SCREENFIELD_INVALID',
      'TEMPLATED_SCREENFIELD_NOT_SUPPORTED',
      'TEMPLATED_SCREENFIELD_PROPERTIES_INVALID',
      'TEMPLATED_SCREENFIELD_PROPERTIES_MISSING',
      'TEMPLATED_SCREENFIELD_PRVD_TYPE_INVALID',
      'TEMPLATED_SCREENFIELD_RNDR_LWC_INVALID',
      'TEMPLATED_SCREEN_FIELD_REQUIRES_AUTOMATIC_OUTPUT',
      'TEMPORARY_QUERY_MORE_FAILURE',
      'TRIGGERED_FLOW_REDUNDANT_QUERY',
      'TRIGGERING_RECORD_UPDATE_REQUIRES_INPUTASSIGNMENTS',
      'TRIGGER_ORDER_NOT_SUPPORTED',
      'TRIGGER_TYPE_CONTEXT_OBJECT_NOT_SUPPORTED',
      'TRIGGER_TYPE_ELEMENT_NOT_SUPPORTED',
      'TRIGGER_TYPE_INCOMPATIBLE_WITH_PROCESS_TYPE',
      'TRIGGER_TYPE_NOT_ALLOWED_FOR_SUBFLOW',
      'TYPE_MAPPING_DUPLICATED',
      'TYPE_MAPPING_NAME_MISSING',
      'TYPE_MAPPING_NOT_FOUND',
      'TYPE_MAPPING_NOT_SUPPORTED',
      'TYPE_MAPPING_NOT_SUPPORTED_FOR_API_VERSION',
      'TYPE_MAPPING_NOT_SUPPORTED_FOR_PROCESS_TYPE',
      'UNAUTHORIZED_USER_FOR_CURSOR',
      'UNEXPECTED_ERROR',
      'VALIDATION_EXCEPTION',
      'VALUE_CHAR_LIMIT_EXCEEDED',
      'VARIABLE_FIELD_IS_READ_ONLY',
      'VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE',
      'VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE_AND_COLLECTION',
      'VARIABLE_FIELD_REQUIRED_FOR_DATATYPE',
      'VARIABLE_NAME_IS_RESERVED_FOR_PROCESS_TYPE',
      'VARIABLE_SCALE_EXCEEDS_LIMIT',
      'VARIABLE_SCALE_NEGATIVE_INTEGER',
      'VARIABLE_SCALE_NULL',
      'VERSION_NOT_VALID',
      'VISIBILITY_RULE_EXCEEDS_CONDITION_LIMIT',
      'VISIBILITY_RULE_NOT_AVAILABLE_IN_ORG',
      'VISIBILITY_RULE_NOT_SUPPORTED_FOR_API_VERSION',
      'VISIBILITY_RULE_NOT_SUPPORTED_FOR_PROCESSTYPE',
      'VISIBILITY_RULE_NO_CONDITIONS',
      'WAITEVENT_BATCH_SIZE_NOT_SUPPORTED_FOR_EVENTTYPE',
      'WAITEVENT_CHANNEL_ACTIONCALL_MISMATCH',
      'WAITEVENT_DEFAULT_CONNECTOR_MISSING_LABEL',
      'WAITEVENT_DUPLICATE_INPUT_PARAM',
      'WAITEVENT_INPUT_NOT_SUPPORTED_FOR_EVENTTYPE',
      'WAITEVENT_INPUT_REQUIRES_LITERAL_VALUE',
      'WAITEVENT_INVALID_CONDITION_LOGIC',
      'WAITEVENT_INVALID_VALUE',
      'WAITEVENT_MISSING',
      'WAITEVENT_MISSING_CONNECTOR',
      'WAITEVENT_MISSING_EVENTTYPE',
      'WAITEVENT_NOT_SUCCEEDING_ACTIONCALL',
      'WAITEVENT_OBJECT_NOT_SUPPORTED_FOR_EVENTTYPE',
      'WAITEVENT_OUTPUT_NOT_SUPPORTED_FOR_EVENTTYPE',
      'WAITEVENT_RELATIVEALARM_INVALID_DATETIME_FIELD',
      'WAITEVENT_RELATIVEALARM_INVALID_FIELD',
      'WAITEVENT_RELATIVEALARM_INVALID_OBJECTTYPE',
      'WAITEVENT_RELATIVEALARM_INVALID_OFFSETNUMBER',
      'WAITEVENT_RELATIVEALARM_INVALID_OFFSETUNIT',
      'WAITEVENT_REQUIRED_INPUT_MISSING',
      'WAITEVENT_RESUME_DATE_IN_PAST',
      'WAITEVENT_TYPE_INVALID_OR_NOT_SUPPORTED',
      'WORKFLOW_MISSING_PROCESSMETADATAVALUES',
      'WORKFLOW_OBJECTTYPE_NOT_FOUND',
      'WORKFLOW_OBJECTTYPE_NOT_SUPPORTED',
      'WORKFLOW_OBJECTVARIABLE_AND_OLDOBJECTVARIABLE_REFERENCE_SAME_SOBJECT_VARIABLE',
      'WORKFLOW_OBJECTVARIABLE_DOESNT_SUPPORT_INPUT',
      'WORKFLOW_OLDOBJECTVARIABLE_DOESNT_SUPPORT_INPUT',
      'WORKFLOW_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME',
      'WORKFLOW_PROCESS_METADATAVALUES_MISSING_NAME',
      'WORKFLOW_RECURSIVECOUNTVARIABLE_DOESNT_SUPPORT_INPUT',
      'WORKFLOW_RULE_NOT_DEACTIVATED',
      'WORKFLOW_TRIGGERTYPE_INVALID_VALUE'}

export enum QuickActionParameterType {'Input',
      'Output'}

export enum ShareAccessLevel {'Read',
      'Edit',
      'All'}

export enum changeEventType {'CREATE',
      'UPDATE',
      'DELETE',
      'UNDELETE',
      'GAP_CREATE',
      'GAP_UPDATE',
      'GAP_DELETE',
      'GAP_UNDELETE'}

export enum fieldType {'string',
      'picklist',
      'multipicklist',
      'combobox',
      'reference',
      'base64',
      'boolean',
      'currency',
      'textarea',
      'int',
      'double',
      'percent',
      'phone',
      'id',
      'date',
      'datetime',
      'time',
      'url',
      'email',
      'encryptedstring',
      'datacategorygroupreference',
      'location',
      'address',
      'anyType',
      'json',
      'complexvalue',
      'long',
      'floatarray'}

export enum soapType {'tns_ID',
      'base64Binary',
      'boolean',
      'double',
      'int',
      'long',
      'string',
      'date',
      'dateTime',
      'time',
      'tns_location',
      'tns_address',
      'anyType',
      'tns_json',
      'urn:RelationshipReferenceTo',
      'urn:JunctionIdListNames',
      'urn:SearchLayoutFieldsDisplayed',
      'urn:SearchLayoutField',
      'urn:SearchLayoutButtonsDisplayed',
      'urn:SearchLayoutButton',
      'urn:RecordTypesSupported',
      'tns_FieldCriteria',
      'tns_FieldCriterion',
      'tns_DurableIdList',
      'tns_StringList',
      'tns_ChangeEventHeader'}

export enum differenceType {'DIFFERENT',
      'NULL',
      'SAME',
      'SIMILAR'}

export enum Article {'None',
      'Indefinite',
      'Definite'}

export enum CaseType {'Nominative',
      'Accusative',
      'Genitive',
      'Dative',
      'Inessive',
      'Elative',
      'Illative',
      'Adessive',
      'Ablative',
      'Allative',
      'Essive',
      'Translative',
      'Partitive',
      'Objective',
      'Subjective',
      'Instrumental',
      'Prepositional',
      'Locative',
      'Vocative',
      'Sublative',
      'Superessive',
      'Delative',
      'Causalfinal',
      'Essiveformal',
      'Termanative',
      'Distributive',
      'Ergative',
      'Adverbial',
      'Abessive',
      'Comitative'}

export enum Gender {'Neuter',
      'Masculine',
      'Feminine',
      'AnimateMasculine',
      'ClassI',
      'ClassIII',
      'ClassV',
      'ClassVII',
      'ClassIX',
      'ClassXI',
      'ClassXIV',
      'ClassXV',
      'ClassXVI',
      'ClassXVII',
      'ClassXVIII'}

export enum GrammaticalNumber {'Singular',
      'Plural',
      'Dual'}

export enum Possessive {'None',
      'First',
      'Second'}

export enum StartsWith {'Consonant',
      'Vowel',
      'Special'}

export enum DuplicateActionType {'Allow',
      'Block'}

export enum DuplicateSecurityOptionType {'EnforceSharingRules',
      'BypassSharingRules'}

export enum ComponentInstancePropertyTypeEnum {'decorator'}

export enum FlexipageContextTypeEnum {'ENTITYNAME'}

export enum FeedLayoutFilterType {'AllUpdates',
      'FeedItemType',
      'Custom'}

export enum TabOrderType {'LeftToRight',
      'TopToBottom'}

export enum UiBehavior {'Edit',
      'Required',
      'Readonly'}

export enum WebLinkWindowType {'newWindow',
      'sidebar',
      'noSidebar',
      'replace',
      'onClickJavaScript'}

export enum WebLinkPosition {'fullScreen',
      'none',
      'topLeft'}

export enum WebLinkType {'url',
      'sControl',
      'javascript',
      'page',
      'flow'}

export enum layoutComponentType {'ReportChart',
      'Field',
      'Separator',
      'SControl',
      'EmptySpace',
      'VisualforcePage',
      'ExpandedLookup',
      'AuraComponent',
      'Canvas',
      'CustomLink',
      'AnalyticsCloud'}

export enum ReportChartSize {'SMALL',
      'MEDIUM',
      'LARGE'}

export enum EmailPriority {'Highest',
      'High',
      'Normal',
      'Low',
      'Lowest'}

export enum SendEmailOptOutPolicy {'SEND',
      'FILTER',
      'REJECT'}

export enum AttachmentRetrievalOption {'None',
      'MetadataOnly',
      'MetadataWithBody'}

export enum orderByDirection {'ascending',
      'descending'}

export enum orderByNullsPosition {'first',
      'last'}

export enum soqlOperator {'equals',
      'excludes',
      'greaterThan',
      'greaterThanOrEqualTo',
      'in',
      'includes',
      'lessThan',
      'lessThanOrEqualTo',
      'like',
      'notEquals',
      'notIn',
      'within',
      'notLike'}

export enum soqlConjunction {'and',
      'or'}

export enum EmailSyncDirection {'None',
      'Import',
      'Export',
      'Sync',
      'S2X',
      'X2S',
      'X2S_Limited',
      'X2S_Enforced_Limited'}

export enum EmailSyncConflictResolution {'SFDCWins',
      'ClientWins',
      'ServerWins'}

export enum EmailSyncMatchPreference {'LastModified',
      'LastActivity',
      'Oldest'}

export enum EmailSyncClientFieldType {'date',
      'datetime',
      'string',
      'int',
      'double',
      'boolean',
      'picklist',
      'reference',
      'EventSensitivityType',
      'ReminderType'}

export enum SchemaScope {'Salesforce',
      'Organization'}

export enum SchemaType {'All',
      'Custom'}

export enum EventName {'ListViewEvent',
      'LightningURIEvent'}

export enum AppMenuType {'AppSwitcher',
      'Salesforce1',
      'NetworkTabs'}

export enum UiType {'Aloha',
      'Lightning'}

export enum listViewIsSoqlCompatible {'TRUE',
      'FALSE',
      'ALL'}

export enum PerfOption {'NONE',
      'BASIC',
      'DETAILED'}

export enum queryOptionsScope {'Briefcase',
      'Mine',
      'Mru',
      'ContactList'}

export enum DebugLevel {'None',
      'DebugOnly',
      'Db',
      'Profiling',
      'Callout',
      'Detail'}

export enum MetadataVersionCheckFact {'DescribeLayoutVersion',
      'DescribeSObjectVersion',
      'SystemConfigurationVersion'}

export enum Operation {'RetrieveTokens',
      'ErrorOnNewerVersion',
      'SkipOnSameVersion'}

export enum LogCategory {'Db',
      'Workflow',
      'Validation',
      'Callout',
      'Apex_code',
      'Apex_profiling',
      'Visualforce',
      'System',
      'All'}

export enum LogCategoryLevel {'None',
      'Finest',
      'Finer',
      'Fine',
      'Debug',
      'Info',
      'Warn',
      'Error'}

export enum OwnerChangeOptionType {'EnforceNewOwnerHasReadAccess',
      'TransferOpenActivities',
      'TransferNotesAndAttachments',
      'TransferOthersOpenOpportunities',
      'TransferOwnedOpenOpportunities',
      'TransferOwnedClosedOpportunities',
      'TransferOwnedOpenCases',
      'TransferAllOwnedCases',
      'TransferContracts',
      'TransferOrders',
      'TransferContacts',
      'TransferArticleOwnedPublishedVersion',
      'TransferArticleOwnedArchivedVersions',
      'TransferArticleAllVersions',
      'KeepAccountTeam',
      'KeepSalesTeam',
      'KeepSalesTeamGrantCurrentOwnerReadWriteAccess'}

export enum RequestOrigin {'ListViewMetadata',
      'ListViewRecords'}

export enum ExceptionCode {'ACCOUNT_NOT_SUPPORTED',
      'ADAPTER_ERROR',
      'ADAPTER_VALIDATION_EXCEPTION',
      'APEX_REST_SERVICES_DISABLED',
      'APEX_TRIGGER_COUPLING_LIMIT',
      'API_CURRENTLY_DISABLED',
      'API_DISABLED_FOR_ORG',
      'ARGUMENT_OBJECT_PARSE_ERROR',
      'ASYNC_OPERATION_LOCATOR',
      'ASYNC_QUERY_UNSUPPORTED_QUERY',
      'BAD_REQUEST',
      'BATCH_PROCESSING_HALTED',
      'BIG_OBJECT_UNSUPPORTED_OPERATION',
      'BILLING_ENTITIES_NO_ACCESS',
      'BUYER_ACCOUNT_NOT_FOUND',
      'CANNOT_DELETE_ENTITY',
      'CANNOT_DELETE_OWNER',
      'CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY',
      'CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY',
      'CATEGORY_NOT_FOUND',
      'CDS_TIMEOUT_EXCEPTION',
      'CIRCULAR_OBJECT_GRAPH',
      'CLIENT_NOT_ACCESSIBLE_FOR_USER',
      'CLIENT_REQUIRE_UPDATE_FOR_USER',
      'CLONE_FIELD_INTEGRITY_EXCEPTION',
      'CLONE_NOT_SUPPORTED',
      'COMMERCE_ADMIN_MISCONFIGURATION',
      'CONFIG_PUBLISH_FAILED',
      'CONTENT_ALREADY_AN_ASSET_EXCEPTION',
      'CONTENT_CUSTOM_DOWNLOAD_EXCEPTION',
      'CONTENT_HUB_AUTHENTICATION_EXCEPTION',
      'CONTENT_HUB_FILE_DOWNLOAD_EXCEPTION',
      'CONTENT_HUB_FILE_HAS_NO_URL_EXCEPTION',
      'CONTENT_HUB_FILE_NOT_FOUND_EXCEPTION',
      'CONTENT_HUB_INVALID_OBJECT_TYPE_EXCEPTION',
      'CONTENT_HUB_INVALID_PAGE_NUMBER_EXCEPTION',
      'CONTENT_HUB_INVALID_PAYLOAD',
      'CONTENT_HUB_INVALID_RENDITION_PAGE_NUMBER_EXCEPTION',
      'CONTENT_HUB_ITEM_TYPE_NOT_FOUND_EXCEPTION',
      'CONTENT_HUB_OBJECT_NOT_FOUND_EXCEPTION',
      'CONTENT_HUB_OPERATION_NOT_SUPPORTED_EXCEPTION',
      'CONTENT_HUB_SECURITY_EXCEPTION',
      'CONTENT_HUB_TIMEOUT_EXCEPTION',
      'CONTENT_HUB_UNEXPECTED_EXCEPTION',
      'CONTENT_IMAGE_SCALING_INVALID_ARGUMENTS_EXCEPTION',
      'CONTENT_IMAGE_SCALING_INVALID_IMAGE_EXCEPTION',
      'CONTENT_IMAGE_SCALING_MAX_RENDITIONS_EXCEPTION',
      'CONTENT_IMAGE_SCALING_TIMEOUT_EXCEPTION',
      'CONTENT_IMAGE_SCALING_UNKNOWN_EXCEPTION',
      'CUSTOM_METADATA_LIMIT_EXCEEDED',
      'CUSTOM_SETTINGS_LIMIT_EXCEEDED',
      'DATACLOUD_API_CLIENT_EXCEPTION',
      'DATACLOUD_API_DISABLED_EXCEPTION',
      'DATACLOUD_API_INVALID_QUERY_EXCEPTION',
      'DATACLOUD_API_SERVER_BUSY_EXCEPTION',
      'DATACLOUD_API_SERVER_EXCEPTION',
      'DATACLOUD_API_TIMEOUT_EXCEPTION',
      'DATACLOUD_API_UNAVAILABLE',
      'DATA_INTEGRATION_INPUT_ERROR',
      'DATA_INTEGRATION_NOT_FOUND',
      'DATA_INTEGRATION_NO_ACCESS',
      'DATA_INTEGRATION_PACKAGE_ERROR',
      'DATA_INTEGRATION_SERVER_ERROR',
      'DATA_INTEGRATION_VENDOR_SETUP_ERROR',
      'DEPENDENCY_API_UNSUPPORTED_EXCEPTION',
      'DUPLICATE_ARGUMENT_VALUE',
      'DUPLICATE_VALUE',
      'EASY_ROUTING_CREATION_NOT_ALLOWED',
      'EMAIL_BATCH_SIZE_LIMIT_EXCEEDED',
      'EMAIL_TO_CASE_INVALID_ROUTING',
      'EMAIL_TO_CASE_LIMIT_EXCEEDED',
      'EMAIL_TO_CASE_NOT_ENABLED',
      'ENTITY_NOT_QUERYABLE',
      'ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT',
      'ERROR_CREATING_BUYER_GROUP_MEMBER',
      'ERROR_ENABLING_BUYER',
      'EVENT_LOG_OBJECT_CONCURRENT_LIMIT_EXCEPTION',
      'EVENT_LOG_OBJECT_UNSUPPORTED_OPERATION',
      'EXCEEDED_ID_LIMIT',
      'EXCEEDED_LEAD_CONVERT_LIMIT',
      'EXCEEDED_MAX_FILTER_ENTITIES',
      'EXCEEDED_MAX_SEMIJOIN_SUBSELECTS',
      'EXCEEDED_MAX_SIZE_REQUEST',
      'EXCEEDED_MAX_SOBJECTS',
      'EXCEEDED_MAX_TYPES_LIMIT',
      'EXCEEDED_QUOTA',
      'EXCEEDED_SEARCH_QUERY_RATE_LIMIT',
      'EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION',
      'EXTERNAL_OBJECT_CONNECTION_EXCEPTION',
      'EXTERNAL_OBJECT_EXCEPTION',
      'EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION',
      'EXTERNAL_RECORD_SHARE_EXPORT_ADMIN_EXPORT_NOT_ALLOWED',
      'EXTERNAL_RECORD_SHARE_EXPORT_INVALID_CONNECTION',
      'EXTERNAL_RECORD_SHARE_EXPORT_INVALID_FIELD_MAPPING',
      'EXTERNAL_SERVICE_AUTHENTICATION_EXCEPTION',
      'EXTERNAL_SERVICE_CONNECTION_EXCEPTION',
      'EXTERNAL_SERVICE_DATA_EXCEPTION',
      'EXTERNAL_SERVICE_EXCEPTION',
      'EXTERNAL_SERVICE_INVALID_STATE_EXCEPTION',
      'EXTERNAL_SERVICE_UNSUPPORTED_EXCEPTION',
      'FEDERATED_SEARCH_ERROR',
      'FEED_NOT_ENABLED_FOR_OBJECT',
      'FUNCTIONALITY_NOT_ENABLED',
      'FUNCTIONALITY_TEMPORARILY_UNAVAILABLE',
      'GMAIL_ROUTING_CREATION_NOT_ALLOWED',
      'GONE',
      'GUEST_BUYER_PROFILE_NOT_SET',
      'GUEST_CHECKOUT_NOT_SUPPORTED',
      'IAS_NOT_FOUND',
      'IAS_TIMEOUT_EXCEPTION',
      'IDEMPOTENCY_AUTHENTICATION_FAILED',
      'IDEMPOTENCY_BACKEND_CONNECTION_TIMEOUT',
      'IDEMPOTENCY_BACKEND_OPERATION_ERROR',
      'IDEMPOTENCY_CONCURRENT_REQUEST',
      'IDEMPOTENCY_FEATURE_NOT_ENABLED',
      'IDEMPOTENCY_KEY_ALREADY_USED',
      'IDEMPOTENCY_KEY_USED_DIFFERENT_USER',
      'IDEMPOTENCY_NOT_SUPPORTED',
      'ID_REQUIRED',
      'ILLEGAL_QUERY_PARAMETER_VALUE',
      'INACTIVE_OWNER_OR_USER',
      'INACTIVE_PORTAL',
      'INDEX_NOT_FOUND',
      'INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE',
      'INSTALL_KEY_INVALID',
      'INSTALL_KEY_REQUIRED',
      'INSUFFICIENT_ACCESS',
      'INSUFFICIENT_ACCESS_APEX_METADATA_DEPLOY',
      'INTERNAL_CANVAS_ERROR',
      'INTERNAL_ERROR',
      'INTERNAL_SERVER_ERROR',
      'INVALID_ACCOUNTING_SET',
      'INVALID_ASSIGNMENT_RULE',
      'INVALID_AUTH_HEADER',
      'INVALID_BATCH_REQUEST',
      'INVALID_BATCH_SIZE',
      'INVALID_CLIENT',
      'INVALID_CROSS_REFERENCE_KEY',
      'INVALID_DATE_FORMAT',
      'INVALID_DEFINITION',
      'INVALID_FIELD',
      'INVALID_FIELD_ACCESS_RULE',
      'INVALID_FILTER_LANGUAGE',
      'INVALID_FILTER_VALUE',
      'INVALID_IDEMPOTENCY_KEY',
      'INVALID_ID_FIELD',
      'INVALID_INPUT_COMBINATION',
      'INVALID_LOCALE_LANGUAGE',
      'INVALID_LOCATOR',
      'INVALID_LOGIN',
      'INVALID_MULTIPART_REQUEST',
      'INVALID_NEW_PASSWORD',
      'INVALID_OLD_PASSWORD',
      'INVALID_OPERATION',
      'INVALID_OPERATION_WITH_EXPIRED_PASSWORD',
      'INVALID_PACKAGE_VERSION',
      'INVALID_PAGING_OPTION',
      'INVALID_QUERY_FILTER_OPERATOR',
      'INVALID_QUERY_KEY',
      'INVALID_QUERY_LOCATOR',
      'INVALID_QUERY_SCOPE',
      'INVALID_QUERY_VALUE',
      'INVALID_RECORD_ACCESS_RULE',
      'INVALID_REPLICATION_DATE',
      'INVALID_SEARCH',
      'INVALID_SEARCH_SCOPE',
      'INVALID_SESSION_ID',
      'INVALID_SOAP_HEADER',
      'INVALID_SORT_OPTION',
      'INVALID_SSO_GATEWAY_URL',
      'INVALID_SUFFIX',
      'INVALID_TYPE',
      'INVALID_TYPE_FOR_OPERATION',
      'JIGSAW_ACTION_DISABLED',
      'JIGSAW_IMPORT_LIMIT_EXCEEDED',
      'JIGSAW_REQUEST_NOT_SUPPORTED',
      'JSON_PARSER_ERROR',
      'KEY_HAS_BEEN_DESTROYED',
      'LANGUAGE_PARAM_CONFLICT',
      'LICENSING_DATA_ERROR',
      'LICENSING_UNKNOWN_ERROR',
      'LIMIT_EXCEEDED',
      'LOGIN_CHALLENGE_ISSUED',
      'LOGIN_CHALLENGE_PENDING',
      'LOGIN_DURING_RESTRICTED_DOMAIN',
      'LOGIN_DURING_RESTRICTED_TIME',
      'LOGIN_MUST_USE_SECURITY_TOKEN',
      'MALFORMED_ID',
      'MALFORMED_QUERY',
      'MALFORMED_SEARCH',
      'MISMATCHING_VERSIONS',
      'MISSING_ARGUMENT',
      'MISSING_RECORD',
      'MODIFIED',
      'MULTIPLE_RECORDS_FOUND',
      'MUTUAL_AUTHENTICATION_FAILED',
      'NEGATIVE_TAX_LINES_NOT_SUPPORTED',
      'NOT_ACCEPTABLE',
      'NOT_MODIFIED',
      'NO_ACTIVE_DUPLICATE_RULE',
      'NO_BUYER_GROUPS_FOUND',
      'NO_DEFINITION_ASSOCIATED',
      'NO_RECIPIENTS',
      'NO_SOFTPHONE_LAYOUT',
      'NUMBER_OUTSIDE_VALID_RANGE',
      'OCR_INVALID_REQUEST',
      'OPERATION_TOO_LARGE',
      'ORDER_MANAGEMENT_ACTION_NOT_ALLOWED',
      'ORG_ADMIN_LOCKED',
      'ORG_IN_MAINTENANCE',
      'ORG_IS_DOT_ORG',
      'ORG_IS_SIGNING_UP',
      'ORG_LOCKED',
      'ORG_NOT_OWNED_BY_INSTANCE',
      'PASSWORD_LOCKOUT',
      'PAYLOAD_ITEM_MAP_ERROR',
      'PENDING_COMMIT',
      'PORTAL_NO_ACCESS',
      'POST_BODY_PARSE_ERROR',
      'POST_TAX_PROCESSING_ERROR',
      'PREDICTION_REQUEST_TOO_COMPLEX',
      'PREDICTION_REQUEST_TOO_LARGE',
      'PRODUCT_NOT_FOUND',
      'PRODUCT_URL_NOT_FOUND',
      'QAT_HETEROGENOUS_CONTEXT_IDS',
      'QAT_INVALID_CONTEXT_ID',
      'QAT_INVALID_QUICK_ACTION',
      'QUERY_TIMEOUT',
      'QUERY_TOO_COMPLICATED',
      'REALTIME_PROCESSING_TIME_EXCEEDED_LIMIT',
      'RECORD_NOT_FOUND',
      'REPORT_EXPORT_LIMIT_EXCEEDED',
      'REQUEST_LIMIT_EXCEEDED',
      'REQUEST_RUNNING_TOO_LONG',
      'REQUEST_TIMEOUT_OR_CONFLICT',
      'RESOURCE_NOT_FOUND',
      'RESOURCE_NOT_REACHABLE',
      'SERVER_UNAVAILABLE',
      'SERVICE_DESK_NOT_ENABLED',
      'SITE_PUBLISH_FAILED',
      'SLACK_SERVICE_ALREADY_REACTED',
      'SLACK_SERVICE_INVALID_REACTION',
      'SLACK_SERVICE_INVALID_REQUEST',
      'SLACK_SERVICE_MISSING_DATA',
      'SLACK_SERVICE_NO_REACTION',
      'SLACK_SERVICE_REACTION_LIMIT_REACHED',
      'SLACK_SERVICE_RESOURCE_NOT_FOUND',
      'SLACK_SERVICE_SLACK_USER_SCOPES_NOT_FOUND',
      'SLACK_SERVICE_SLACK_USER_TOKEN_NOT_FOUND',
      'SLACK_SERVICE_UNKNOWN_ERROR',
      'SLACK_USER_MAPPING_NOT_FOUND',
      'SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION',
      'SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION',
      'SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE',
      'SPECIFICATION_GENERATION_EXCEPTION',
      'SSO_SERVICE_DOWN',
      'SST_ADMIN_FILE_DOWNLOAD_EXCEPTION',
      'STATE_TRANSITION_NOT_ALLOWED',
      'TAX_ENGINE_NOT_FOUND',
      'TAX_INTERNAL_ERROR',
      'TOO_MANY_APEX_REQUESTS',
      'TOO_MANY_JOBS',
      'TOO_MANY_RECIPIENTS',
      'TOO_MANY_RECORDS',
      'TRIAL_EXPIRED',
      'TXN_SECURITY_APEX_ERROR',
      'TXN_SECURITY_END_A_SESSION',
      'TXN_SECURITY_FAIL_CLOSE',
      'TXN_SECURITY_METERING_ERROR',
      'TXN_SECURITY_NO_ACCESS',
      'TXN_SECURITY_RUNTIME_ERROR',
      'TXN_SECURITY_TWO_FA_REQUIRED',
      'UNABLE_TO_LOCK_ROW',
      'UNKNOWN_ATTACHMENT_EXCEPTION',
      'UNKNOWN_EXCEPTION',
      'UNKNOWN_ORG_SETTING',
      'UNSUPPORTED_API_VERSION',
      'UNSUPPORTED_ATTACHMENT_ENCODING',
      'UNSUPPORTED_CIO_REPORT',
      'UNSUPPORTED_CLIENT',
      'UNSUPPORTED_DML_OPERATION',
      'UNSUPPORTED_MEDIA_TYPE',
      'UNSUPPORTED_QUERY',
      'USER_EMAIL_NOT_CONNECTED',
      'VERSION_NOT_FOUND',
      'WEBSTORE_LEGAL_BODY_NOT_FOUND',
      'WEBSTORE_NOT_FOUND',
      'XML_PARSER_ERROR'}

export enum FaultCode {'fns_ACCOUNT_NOT_SUPPORTED',
      'fns_ADAPTER_ERROR',
      'fns_ADAPTER_VALIDATION_EXCEPTION',
      'fns_APEX_REST_SERVICES_DISABLED',
      'fns_APEX_TRIGGER_COUPLING_LIMIT',
      'fns_API_CURRENTLY_DISABLED',
      'fns_API_DISABLED_FOR_ORG',
      'fns_ARGUMENT_OBJECT_PARSE_ERROR',
      'fns_ASYNC_OPERATION_LOCATOR',
      'fns_ASYNC_QUERY_UNSUPPORTED_QUERY',
      'fns_BAD_REQUEST',
      'fns_BATCH_PROCESSING_HALTED',
      'fns_BIG_OBJECT_UNSUPPORTED_OPERATION',
      'fns_BILLING_ENTITIES_NO_ACCESS',
      'fns_BUYER_ACCOUNT_NOT_FOUND',
      'fns_CANNOT_DELETE_ENTITY',
      'fns_CANNOT_DELETE_OWNER',
      'fns_CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY',
      'fns_CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY',
      'fns_CATEGORY_NOT_FOUND',
      'fns_CDS_TIMEOUT_EXCEPTION',
      'fns_CIRCULAR_OBJECT_GRAPH',
      'fns_CLIENT_NOT_ACCESSIBLE_FOR_USER',
      'fns_CLIENT_REQUIRE_UPDATE_FOR_USER',
      'fns_CLONE_FIELD_INTEGRITY_EXCEPTION',
      'fns_CLONE_NOT_SUPPORTED',
      'fns_COMMERCE_ADMIN_MISCONFIGURATION',
      'fns_CONFIG_PUBLISH_FAILED',
      'fns_CONTENT_ALREADY_AN_ASSET_EXCEPTION',
      'fns_CONTENT_CUSTOM_DOWNLOAD_EXCEPTION',
      'fns_CONTENT_HUB_AUTHENTICATION_EXCEPTION',
      'fns_CONTENT_HUB_FILE_DOWNLOAD_EXCEPTION',
      'fns_CONTENT_HUB_FILE_HAS_NO_URL_EXCEPTION',
      'fns_CONTENT_HUB_FILE_NOT_FOUND_EXCEPTION',
      'fns_CONTENT_HUB_INVALID_OBJECT_TYPE_EXCEPTION',
      'fns_CONTENT_HUB_INVALID_PAGE_NUMBER_EXCEPTION',
      'fns_CONTENT_HUB_INVALID_PAYLOAD',
      'fns_CONTENT_HUB_INVALID_RENDITION_PAGE_NUMBER_EXCEPTION',
      'fns_CONTENT_HUB_ITEM_TYPE_NOT_FOUND_EXCEPTION',
      'fns_CONTENT_HUB_OBJECT_NOT_FOUND_EXCEPTION',
      'fns_CONTENT_HUB_OPERATION_NOT_SUPPORTED_EXCEPTION',
      'fns_CONTENT_HUB_SECURITY_EXCEPTION',
      'fns_CONTENT_HUB_TIMEOUT_EXCEPTION',
      'fns_CONTENT_HUB_UNEXPECTED_EXCEPTION',
      'fns_CONTENT_IMAGE_SCALING_INVALID_ARGUMENTS_EXCEPTION',
      'fns_CONTENT_IMAGE_SCALING_INVALID_IMAGE_EXCEPTION',
      'fns_CONTENT_IMAGE_SCALING_MAX_RENDITIONS_EXCEPTION',
      'fns_CONTENT_IMAGE_SCALING_TIMEOUT_EXCEPTION',
      'fns_CONTENT_IMAGE_SCALING_UNKNOWN_EXCEPTION',
      'fns_CUSTOM_METADATA_LIMIT_EXCEEDED',
      'fns_CUSTOM_SETTINGS_LIMIT_EXCEEDED',
      'fns_DATACLOUD_API_CLIENT_EXCEPTION',
      'fns_DATACLOUD_API_DISABLED_EXCEPTION',
      'fns_DATACLOUD_API_INVALID_QUERY_EXCEPTION',
      'fns_DATACLOUD_API_SERVER_BUSY_EXCEPTION',
      'fns_DATACLOUD_API_SERVER_EXCEPTION',
      'fns_DATACLOUD_API_TIMEOUT_EXCEPTION',
      'fns_DATACLOUD_API_UNAVAILABLE',
      'fns_DATA_INTEGRATION_INPUT_ERROR',
      'fns_DATA_INTEGRATION_NOT_FOUND',
      'fns_DATA_INTEGRATION_NO_ACCESS',
      'fns_DATA_INTEGRATION_PACKAGE_ERROR',
      'fns_DATA_INTEGRATION_SERVER_ERROR',
      'fns_DATA_INTEGRATION_VENDOR_SETUP_ERROR',
      'fns_DEPENDENCY_API_UNSUPPORTED_EXCEPTION',
      'fns_DUPLICATE_ARGUMENT_VALUE',
      'fns_DUPLICATE_VALUE',
      'fns_EASY_ROUTING_CREATION_NOT_ALLOWED',
      'fns_EMAIL_BATCH_SIZE_LIMIT_EXCEEDED',
      'fns_EMAIL_TO_CASE_INVALID_ROUTING',
      'fns_EMAIL_TO_CASE_LIMIT_EXCEEDED',
      'fns_EMAIL_TO_CASE_NOT_ENABLED',
      'fns_ENTITY_NOT_QUERYABLE',
      'fns_ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT',
      'fns_ERROR_CREATING_BUYER_GROUP_MEMBER',
      'fns_ERROR_ENABLING_BUYER',
      'fns_EVENT_LOG_OBJECT_CONCURRENT_LIMIT_EXCEPTION',
      'fns_EVENT_LOG_OBJECT_UNSUPPORTED_OPERATION',
      'fns_EXCEEDED_ID_LIMIT',
      'fns_EXCEEDED_LEAD_CONVERT_LIMIT',
      'fns_EXCEEDED_MAX_FILTER_ENTITIES',
      'fns_EXCEEDED_MAX_SEMIJOIN_SUBSELECTS',
      'fns_EXCEEDED_MAX_SIZE_REQUEST',
      'fns_EXCEEDED_MAX_SOBJECTS',
      'fns_EXCEEDED_MAX_TYPES_LIMIT',
      'fns_EXCEEDED_QUOTA',
      'fns_EXCEEDED_SEARCH_QUERY_RATE_LIMIT',
      'fns_EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION',
      'fns_EXTERNAL_OBJECT_CONNECTION_EXCEPTION',
      'fns_EXTERNAL_OBJECT_EXCEPTION',
      'fns_EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION',
      'fns_EXTERNAL_RECORD_SHARE_EXPORT_ADMIN_EXPORT_NOT_ALLOWED',
      'fns_EXTERNAL_RECORD_SHARE_EXPORT_INVALID_CONNECTION',
      'fns_EXTERNAL_RECORD_SHARE_EXPORT_INVALID_FIELD_MAPPING',
      'fns_EXTERNAL_SERVICE_AUTHENTICATION_EXCEPTION',
      'fns_EXTERNAL_SERVICE_CONNECTION_EXCEPTION',
      'fns_EXTERNAL_SERVICE_DATA_EXCEPTION',
      'fns_EXTERNAL_SERVICE_EXCEPTION',
      'fns_EXTERNAL_SERVICE_INVALID_STATE_EXCEPTION',
      'fns_EXTERNAL_SERVICE_UNSUPPORTED_EXCEPTION',
      'fns_FEDERATED_SEARCH_ERROR',
      'fns_FEED_NOT_ENABLED_FOR_OBJECT',
      'fns_FUNCTIONALITY_NOT_ENABLED',
      'fns_FUNCTIONALITY_TEMPORARILY_UNAVAILABLE',
      'fns_GMAIL_ROUTING_CREATION_NOT_ALLOWED',
      'fns_GONE',
      'fns_GUEST_BUYER_PROFILE_NOT_SET',
      'fns_GUEST_CHECKOUT_NOT_SUPPORTED',
      'fns_IAS_NOT_FOUND',
      'fns_IAS_TIMEOUT_EXCEPTION',
      'fns_IDEMPOTENCY_AUTHENTICATION_FAILED',
      'fns_IDEMPOTENCY_BACKEND_CONNECTION_TIMEOUT',
      'fns_IDEMPOTENCY_BACKEND_OPERATION_ERROR',
      'fns_IDEMPOTENCY_CONCURRENT_REQUEST',
      'fns_IDEMPOTENCY_FEATURE_NOT_ENABLED',
      'fns_IDEMPOTENCY_KEY_ALREADY_USED',
      'fns_IDEMPOTENCY_KEY_USED_DIFFERENT_USER',
      'fns_IDEMPOTENCY_NOT_SUPPORTED',
      'fns_ID_REQUIRED',
      'fns_ILLEGAL_QUERY_PARAMETER_VALUE',
      'fns_INACTIVE_OWNER_OR_USER',
      'fns_INACTIVE_PORTAL',
      'fns_INDEX_NOT_FOUND',
      'fns_INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE',
      'fns_INSTALL_KEY_INVALID',
      'fns_INSTALL_KEY_REQUIRED',
      'fns_INSUFFICIENT_ACCESS',
      'fns_INSUFFICIENT_ACCESS_APEX_METADATA_DEPLOY',
      'fns_INTERNAL_CANVAS_ERROR',
      'fns_INTERNAL_ERROR',
      'fns_INTERNAL_SERVER_ERROR',
      'fns_INVALID_ACCOUNTING_SET',
      'fns_INVALID_ASSIGNMENT_RULE',
      'fns_INVALID_AUTH_HEADER',
      'fns_INVALID_BATCH_REQUEST',
      'fns_INVALID_BATCH_SIZE',
      'fns_INVALID_CLIENT',
      'fns_INVALID_CROSS_REFERENCE_KEY',
      'fns_INVALID_DATE_FORMAT',
      'fns_INVALID_DEFINITION',
      'fns_INVALID_FIELD',
      'fns_INVALID_FIELD_ACCESS_RULE',
      'fns_INVALID_FILTER_LANGUAGE',
      'fns_INVALID_FILTER_VALUE',
      'fns_INVALID_IDEMPOTENCY_KEY',
      'fns_INVALID_ID_FIELD',
      'fns_INVALID_INPUT_COMBINATION',
      'fns_INVALID_LOCALE_LANGUAGE',
      'fns_INVALID_LOCATOR',
      'fns_INVALID_LOGIN',
      'fns_INVALID_MULTIPART_REQUEST',
      'fns_INVALID_NEW_PASSWORD',
      'fns_INVALID_OLD_PASSWORD',
      'fns_INVALID_OPERATION',
      'fns_INVALID_OPERATION_WITH_EXPIRED_PASSWORD',
      'fns_INVALID_PACKAGE_VERSION',
      'fns_INVALID_PAGING_OPTION',
      'fns_INVALID_QUERY_FILTER_OPERATOR',
      'fns_INVALID_QUERY_KEY',
      'fns_INVALID_QUERY_LOCATOR',
      'fns_INVALID_QUERY_SCOPE',
      'fns_INVALID_QUERY_VALUE',
      'fns_INVALID_RECORD_ACCESS_RULE',
      'fns_INVALID_REPLICATION_DATE',
      'fns_INVALID_SEARCH',
      'fns_INVALID_SEARCH_SCOPE',
      'fns_INVALID_SESSION_ID',
      'fns_INVALID_SOAP_HEADER',
      'fns_INVALID_SORT_OPTION',
      'fns_INVALID_SSO_GATEWAY_URL',
      'fns_INVALID_SUFFIX',
      'fns_INVALID_TYPE',
      'fns_INVALID_TYPE_FOR_OPERATION',
      'fns_JIGSAW_ACTION_DISABLED',
      'fns_JIGSAW_IMPORT_LIMIT_EXCEEDED',
      'fns_JIGSAW_REQUEST_NOT_SUPPORTED',
      'fns_JSON_PARSER_ERROR',
      'fns_KEY_HAS_BEEN_DESTROYED',
      'fns_LANGUAGE_PARAM_CONFLICT',
      'fns_LICENSING_DATA_ERROR',
      'fns_LICENSING_UNKNOWN_ERROR',
      'fns_LIMIT_EXCEEDED',
      'fns_LOGIN_CHALLENGE_ISSUED',
      'fns_LOGIN_CHALLENGE_PENDING',
      'fns_LOGIN_DURING_RESTRICTED_DOMAIN',
      'fns_LOGIN_DURING_RESTRICTED_TIME',
      'fns_LOGIN_MUST_USE_SECURITY_TOKEN',
      'fns_MALFORMED_ID',
      'fns_MALFORMED_QUERY',
      'fns_MALFORMED_SEARCH',
      'fns_MISMATCHING_VERSIONS',
      'fns_MISSING_ARGUMENT',
      'fns_MISSING_RECORD',
      'fns_MODIFIED',
      'fns_MULTIPLE_RECORDS_FOUND',
      'fns_MUTUAL_AUTHENTICATION_FAILED',
      'fns_NEGATIVE_TAX_LINES_NOT_SUPPORTED',
      'fns_NOT_ACCEPTABLE',
      'fns_NOT_MODIFIED',
      'fns_NO_ACTIVE_DUPLICATE_RULE',
      'fns_NO_BUYER_GROUPS_FOUND',
      'fns_NO_DEFINITION_ASSOCIATED',
      'fns_NO_RECIPIENTS',
      'fns_NO_SOFTPHONE_LAYOUT',
      'fns_NUMBER_OUTSIDE_VALID_RANGE',
      'fns_OCR_INVALID_REQUEST',
      'fns_OPERATION_TOO_LARGE',
      'fns_ORDER_MANAGEMENT_ACTION_NOT_ALLOWED',
      'fns_ORG_ADMIN_LOCKED',
      'fns_ORG_IN_MAINTENANCE',
      'fns_ORG_IS_DOT_ORG',
      'fns_ORG_IS_SIGNING_UP',
      'fns_ORG_LOCKED',
      'fns_ORG_NOT_OWNED_BY_INSTANCE',
      'fns_PASSWORD_LOCKOUT',
      'fns_PAYLOAD_ITEM_MAP_ERROR',
      'fns_PENDING_COMMIT',
      'fns_PORTAL_NO_ACCESS',
      'fns_POST_BODY_PARSE_ERROR',
      'fns_POST_TAX_PROCESSING_ERROR',
      'fns_PREDICTION_REQUEST_TOO_COMPLEX',
      'fns_PREDICTION_REQUEST_TOO_LARGE',
      'fns_PRODUCT_NOT_FOUND',
      'fns_PRODUCT_URL_NOT_FOUND',
      'fns_QAT_HETEROGENOUS_CONTEXT_IDS',
      'fns_QAT_INVALID_CONTEXT_ID',
      'fns_QAT_INVALID_QUICK_ACTION',
      'fns_QUERY_TIMEOUT',
      'fns_QUERY_TOO_COMPLICATED',
      'fns_REALTIME_PROCESSING_TIME_EXCEEDED_LIMIT',
      'fns_RECORD_NOT_FOUND',
      'fns_REPORT_EXPORT_LIMIT_EXCEEDED',
      'fns_REQUEST_LIMIT_EXCEEDED',
      'fns_REQUEST_RUNNING_TOO_LONG',
      'fns_REQUEST_TIMEOUT_OR_CONFLICT',
      'fns_RESOURCE_NOT_FOUND',
      'fns_RESOURCE_NOT_REACHABLE',
      'fns_SERVER_UNAVAILABLE',
      'fns_SERVICE_DESK_NOT_ENABLED',
      'fns_SITE_PUBLISH_FAILED',
      'fns_SLACK_SERVICE_ALREADY_REACTED',
      'fns_SLACK_SERVICE_INVALID_REACTION',
      'fns_SLACK_SERVICE_INVALID_REQUEST',
      'fns_SLACK_SERVICE_MISSING_DATA',
      'fns_SLACK_SERVICE_NO_REACTION',
      'fns_SLACK_SERVICE_REACTION_LIMIT_REACHED',
      'fns_SLACK_SERVICE_RESOURCE_NOT_FOUND',
      'fns_SLACK_SERVICE_SLACK_USER_SCOPES_NOT_FOUND',
      'fns_SLACK_SERVICE_SLACK_USER_TOKEN_NOT_FOUND',
      'fns_SLACK_SERVICE_UNKNOWN_ERROR',
      'fns_SLACK_USER_MAPPING_NOT_FOUND',
      'fns_SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION',
      'fns_SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION',
      'fns_SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE',
      'fns_SPECIFICATION_GENERATION_EXCEPTION',
      'fns_SSO_SERVICE_DOWN',
      'fns_SST_ADMIN_FILE_DOWNLOAD_EXCEPTION',
      'fns_STATE_TRANSITION_NOT_ALLOWED',
      'fns_TAX_ENGINE_NOT_FOUND',
      'fns_TAX_INTERNAL_ERROR',
      'fns_TOO_MANY_APEX_REQUESTS',
      'fns_TOO_MANY_JOBS',
      'fns_TOO_MANY_RECIPIENTS',
      'fns_TOO_MANY_RECORDS',
      'fns_TRIAL_EXPIRED',
      'fns_TXN_SECURITY_APEX_ERROR',
      'fns_TXN_SECURITY_END_A_SESSION',
      'fns_TXN_SECURITY_FAIL_CLOSE',
      'fns_TXN_SECURITY_METERING_ERROR',
      'fns_TXN_SECURITY_NO_ACCESS',
      'fns_TXN_SECURITY_RUNTIME_ERROR',
      'fns_TXN_SECURITY_TWO_FA_REQUIRED',
      'fns_UNABLE_TO_LOCK_ROW',
      'fns_UNKNOWN_ATTACHMENT_EXCEPTION',
      'fns_UNKNOWN_EXCEPTION',
      'fns_UNKNOWN_ORG_SETTING',
      'fns_UNSUPPORTED_API_VERSION',
      'fns_UNSUPPORTED_ATTACHMENT_ENCODING',
      'fns_UNSUPPORTED_CIO_REPORT',
      'fns_UNSUPPORTED_CLIENT',
      'fns_UNSUPPORTED_DML_OPERATION',
      'fns_UNSUPPORTED_MEDIA_TYPE',
      'fns_UNSUPPORTED_QUERY',
      'fns_USER_EMAIL_NOT_CONNECTED',
      'fns_VERSION_NOT_FOUND',
      'fns_WEBSTORE_LEGAL_BODY_NOT_FOUND',
      'fns_WEBSTORE_NOT_FOUND',
      'fns_XML_PARSER_ERROR'}

export interface findDuplicates {
    sObjects: sObject[];
}

export interface findDuplicatesByIds {
    ids: ID[];
}

export interface findDuplicatesByIdsResponse {
    result: FindDuplicatesResult[];
}

export interface findDuplicatesResponse {
    result: FindDuplicatesResult[];
}

export interface createSnapshot {
    sObject: string;
    forceFullSnapshot: boolean;
}

export interface createSnapshotResponse {
    result: SnapshotResult;
}

export interface moreSnapshot {
    snapshotLocator: string;
}

export interface moreSnapshotResponse {
    result: SnapshotResult;
}

export interface ackSnapshot {
    snapshotId: ID;
}

export interface ackSnapshotResponse {
}

export interface syncOfflineData {
    reset: boolean;
    userRequested: boolean;
    syncStateId: string;
    syncFull: boolean;
    skipNewsFeeds: boolean;
    idsToSpider?: ID[];
    entitiesToSync?: string[];
}

export interface syncOfflineDataResponse {
    result: SyncOfflineDataResult;
}

export interface ackSyncOfflineData {
    token: string;
    syncStateId: string;
}

export interface ackSyncOfflineDataResponse {
}

export interface describeMobile {
}

export interface describeMobileResponse {
    result: DescribeMobileResult;
}

export interface loginXi {
    username: string;
}

export interface loginXiResponse {
    result: LoginResult;
}

export interface login {
    username: string;
    password: string;
}

export interface loginResponse {
    result: LoginResult;
}

export interface describeSObject {
    sObjectType: string;
}

export interface describeSObjectResponse {
    result?: DescribeSObjectResult;
}

export interface discoverSchemas {
    scope: SchemaScope;
    typeFilter: SchemaType;
}

export interface discoverSchemasResponse {
    result?: DiscoverSchemasResult;
}

export interface describeSchema {
    type: string;
}

export interface describeSchemaResponse {
    result?: DescribeSchemaResult;
}

export interface describePicklists {
    param: DescribePicklistsParam;
}

export interface describePicklistsResponse {
    result?: DescribePicklistResult;
}

export interface captureCommonEvent {
    appName: string;
    eventValues: string;
    eventName: EventName;
}

export interface captureCommonEventResponse {
    result?: CommonEventResult;
}

export interface describeSObjects {
    sObjectType?: string;
}

export interface describeSObjectsResponse {
    result?: DescribeSObjectResult;
}

export interface describeGlobal {
}

export interface describeGlobalResponse {
    result: DescribeGlobalResult;
}

export interface describeGlobalTheme {
}

export interface describeGlobalThemeResponse {
    result: DescribeGlobalTheme;
}

export interface describeTheme {
    sobjectType: string[];
}

export interface describeThemeResponse {
    result: DescribeThemeResult;
}

export interface describeDataCategoryGroups {
    sObjectType?: string;
}

export interface describeDataCategoryGroupsResponse {
    result?: DescribeDataCategoryGroupResult;
}

export interface describeDataCategoryGroupStructures {
    pairs?: DataCategoryGroupSobjectTypePair;
    topCategoriesOnly: boolean;
}

export interface describeDataCategoryGroupStructuresResponse {
    result?: DescribeDataCategoryGroupStructureResult;
}

export interface describeDataCategoryMappings {
}

export interface describeDataCategoryMappingsResponse {
    result?: DescribeDataCategoryMappingResult;
}

export interface describeKnowledgeSettings {
}

export interface describeKnowledgeSettingsResponse {
    result: KnowledgeSettings;
}

export interface describeDuplicateRules {
    sObjectType: string;
}

export interface describeDuplicateRulesResponse {
    result: DescribeDuplicateRuleResult[];
}

export interface ftestPatch {
}

export interface ftestPatchResponse {
    result: SaveResult;
}

export interface ftestPatchPreviousVersion {
}

export interface ftestPatchPreviousVersionResponse {
    result: SaveResult;
}

export interface describeFlexiPages {
    flexiPages: string[];
    contexts: FlexipageContext[];
}

export interface describeFlexiPagesResponse {
    result: DescribeFlexiPageResult[];
}

export interface describeAppMenu {
    appMenuType: AppMenuType;
    networkId?: ID;
}

export interface describeAppMenuResponse {
    result?: DescribeAppMenuResult;
}

export interface describeLayout {
    sObjectType: string;
    layoutName?: string;
    recordTypeIds: ID[];
}

export interface describeLayoutByUiType {
    sObjectType: string;
    layoutName?: string;
    recordTypeIds: ID[];
    uiType?: UiType;
}

export interface describeLayoutByUiTypeResponse {
    result?: DescribeLayoutResult;
}

export interface describeLayoutResponse {
    result?: DescribeLayoutResult;
}

export interface describeMiniLayout {
    sObjectType: string;
    layoutName?: string;
    recordTypeIds: ID[];
}

export interface describeMiniLayoutResponse {
    result?: DescribeMiniLayoutResult;
}

export interface describeCompactLayouts {
    sObjectType: string;
    recordTypeIds: ID[];
}

export interface describeCompactLayoutsResponse {
    result?: DescribeCompactLayoutsResult;
}

export interface describePrimaryCompactLayouts {
    sObjectTypes: string[];
}

export interface describePrimaryCompactLayoutsResponse {
    result: DescribeCompactLayout[];
}

export interface describePathAssistants {
    sObjectType: string;
    picklistValue?: string;
    recordTypeIds: ID[];
}

export interface describePathAssistantsResponse {
    result?: DescribePathAssistantsResult;
}

export interface describeApprovalLayout {
    sObjectType: string;
    approvalProcessNames: string[];
}

export interface describeApprovalLayoutResponse {
    result?: DescribeApprovalLayoutResult;
}

export interface describeSoftphoneLayout {
}

export interface describeSoftphoneLayoutResponse {
    result?: DescribeSoftphoneLayoutResult;
}

export interface describeListViews {
    sObjectType: string[];
}

export interface describeListViewsResponse {
    result?: DescribeListViewResult[];
}

export interface describeLookupLayouts {
    sObjectType: string[];
}

export interface describeLookupLayoutsResponse {
    result?: DescribeLookupLayoutResult[];
}

export interface describeSoqlListViews {
    request: DescribeSoqlListViewsRequest;
}

export interface describeSoqlListViewsResponse {
    result: DescribeSoqlListViewResult;
}

export interface executeListView {
    request: ExecuteListViewRequest;
}

export interface executeListViewResponse {
    result?: ExecuteListViewResult;
}

export interface describeSObjectListViews {
    sObjectType: string;
    recentsOnly: boolean;
    isSoqlCompatible: listViewIsSoqlCompatible;
    limit: number;
    offset: number;
}

export interface describeSObjectListViewsResponse {
    result: DescribeSoqlListViewResult;
}

export interface describeSearchLayouts {
    sObjectType: string[];
}

export interface describeSearchLayoutsResponse {
    result?: DescribeSearchLayoutResult[];
}

export interface describeSearchScopeOrder {
    includeRealTimeEntities?: boolean;
}

export interface describeSearchScopeOrderResponse {
    result: DescribeSearchScopeOrderResult[];
}

export interface describeSearchableEntities {
    includeOnlyEntitiesWithTabs: boolean;
}

export interface describeSearchableEntitiesResponse {
    result: DescribeSearchableEntityResult[];
}

export interface describeTabs {
}

export interface describeTabsResponse {
    result?: DescribeTabSetResult[];
}

export interface describeAllTabs {
}

export interface describeAllTabsResponse {
    result?: DescribeTab[];
}

export interface describeNouns {
    nouns?: string;
    onlyRenamed: boolean;
    includeFields: boolean;
}

export interface describeNounsResponse {
    result?: DescribeNounResult[];
}

export interface create {
    sObjects: sObject[];
}

export interface createResponse {
    result: SaveResult[];
}

export interface sendEmail {
    messages?: Email;
}

export interface sendEmailResponse {
    result?: SendEmailResult;
}

export interface renderEmailTemplate {
    renderRequests?: RenderEmailTemplateRequest;
}

export interface renderEmailTemplateResponse {
    result?: RenderEmailTemplateResult;
}

export interface renderStoredEmailTemplate {
    request: RenderStoredEmailTemplateRequest;
}

export interface renderStoredEmailTemplateResponse {
    result: RenderStoredEmailTemplateResult;
}

export interface sendEmailMessage {
    ids?: ID;
}

export interface sendEmailMessageResponse {
    result?: SendEmailResult;
}

export interface emailMerge {
    template: ID;
    id: ID[];
}

export interface emailMergeResponse {
    result: string[];
}

export interface update {
    sObjects: sObject[];
}

export interface updateResponse {
    result: SaveResult[];
}

export interface upsert {
    externalIDFieldName: string;
    sObjects: sObject[];
}

export interface upsertResponse {
    result: UpsertResult[];
}

export interface merge {
    request: MergeRequest[];
}

export interface mergeResponse {
    result: MergeResult[];
}

export interface delete_ {
    ids: ID[];
}

export interface deleteResponse {
    result: DeleteResult[];
}

export interface deleteByExample {
    sObjects: sObject[];
}

export interface deleteByExampleResponse {
    result: DeleteByExampleResult[];
}

export interface undelete {
    ids: ID[];
}

export interface undeleteResponse {
    result: UndeleteResult[];
}

export interface updateSettings {
    settingNames: string[];
    settingValues: string[];
}

export interface updateSettingsResponse {
    result: SaveResult[];
}

export interface emptyRecycleBin {
    ids: ID[];
}

export interface emptyRecycleBinResponse {
    result: EmptyRecycleBinResult[];
}

export interface process {
    actions: ProcessRequest[];
}

export interface processResponse {
    result: ProcessResult[];
}

export interface performQuickActions {
    quickActions: PerformQuickActionRequest[];
}

export interface performQuickActionsResponse {
    result: PerformQuickActionResult[];
}

export interface retrieveMassQuickActionTemplates {
    quickActionName: string;
    contextIds: ID[];
}

export interface retrieveMassQuickActionTemplatesResponse {
    result: QuickActionTemplateResult[];
}

export interface retrieveQuickActionTemplates {
    quickActionNames: string[];
    contextId?: ID;
}

export interface retrieveQuickActionTemplatesResponse {
    result: QuickActionTemplateResult[];
}

export interface describeQuickActions {
    quickActions: string[];
}

export interface describeQuickActionsResponse {
    result: DescribeQuickActionResult[];
}

export interface describeQuickActionsForRecordType {
    quickActions: string[];
    recordTypeId: string;
}

export interface describeQuickActionsForRecordTypeResponse {
    result: DescribeQuickActionResult[];
}

export interface describeAvailableQuickActions {
    contextType?: string;
}

export interface describeAvailableQuickActionsResponse {
    result: DescribeAvailableQuickActionResult[];
}

export interface describeVisualForce {
    includeAllDetails: boolean;
    namespacePrefix?: string;
}

export interface describeVisualForceResponse {
    result: DescribeVisualForceResult;
}

export interface describeWorkitemActions {
    workitemIds: ID[];
}

export interface describeWorkitemActionsResponse {
    result: DescribeWorkitemActionResult[];
}

export interface retrieve {
    fieldList: string;
    sObjectType: string;
    ids: ID[];
}

export interface retrieveResponse {
    result?: sObject[];
}

export interface retrieveDefaultValues {
    sObjectType: string;
    recordTypeId?: ID;
    fieldList?: string;
}

export interface retrieveDefaultValuesResponse {
    result?: sObject;
}

export interface convertLead {
    leadConverts: LeadConvert[];
}

export interface convertLeadResponse {
    result: LeadConvertResult[];
}

export interface addCampaignMember {
    AddCampaignMemberOptions: AddCampaignMemberOptions;
}

export interface addCampaignMemberResponse {
    result: AddCampaignMemberResult;
}

export interface getUpdated {
    sObjectType: string;
    startDate: Date;
    endDate: Date;
}

export interface getUpdatedResponse {
    result: GetUpdatedResult;
}

export interface getDeleted {
    sObjectType: string;
    startDate: Date;
    endDate: Date;
}

export interface getDeletedResponse {
    result: GetDeletedResult;
}

export interface impersonateUser {
    userIds: ID[];
}

export interface impersonateUserResponse {
    result: ImpersonateUserResult[];
}

export interface logout {
}

export interface logoutResponse {
}

export interface invalidateSessions {
    sessionIds: string[];
}

export interface invalidateSessionsResponse {
    result: InvalidateSessionsResult[];
}

export interface canViewFlow {
    input: FlowAccessInput;
}

export interface canViewFlowResponse {
    result: CanViewFlowResult;
}

export interface startFlowInterview {
    request: StartFlowInterviewRequest;
}

export interface startFlowInterviewResponse {
    result: NavigateFlowInterviewResult;
}

export interface resumeFlowInterview {
    request: ResumeFlowInterviewRequest;
}

export interface resumeFlowInterviewResponse {
    result: NavigateFlowInterviewResult;
}

export interface runFlowTest {
    request: RunFlowTestInput;
}

export interface runFlowTestResponse {
    result: RunFlowTestResult[];
}

export interface generateFlowTest {
    request: string;
}

export interface generateFlowTestResponse {
    result: GenerateFlowTestResult;
}

export interface getFlowInterviewHistory {
    request: GetFlowInterviewHistoryRequest;
}

export interface getFlowInterviewHistoryResponse {
    result: NavigateFlowInterviewResult;
}

export interface navigateFlowInterview {
    request: NavigateFlowInterviewRequest;
}

export interface navigateFlowInterviewResponse {
    result: NavigateFlowInterviewResult;
}

export interface query {
    queryString: string;
}

export interface queryResponse {
    result: QueryResult;
}

export interface queryAll {
    queryString: string;
}

export interface queryAllResponse {
    result: QueryResult;
}

export interface queryMore {
    queryLocator: QueryLocator;
}

export interface queryMoreResponse {
    result: QueryResult;
}

export interface setupBriefcase {
}

export interface setupBriefcaseResponse {
    result: SetupBriefcaseResult;
}

export interface search {
    searchString: string;
}

export interface searchResponse {
    result: SearchResult;
}

export interface outlookSearch {
    searchExpr: string;
    contextString: string;
}

export interface outlookSearchResponse {
    result: OutlookSearchResult;
}

export interface outlookDescribe {
}

export interface outlookDescribeResponse {
    result: OutlookDescribeResult;
}

export interface getServerTimestamp {
}

export interface getServerTimestampResponse {
    result: GetServerTimestampResult;
}

export interface setPassword {
    userId: ID;
    password: string;
}

export interface setPasswordResponse {
    result: SetPasswordResult;
}

export interface changeOwnPassword {
    oldPassword: string;
    newPassword: string;
}

export interface changeOwnPasswordResponse {
    result: ChangeOwnPasswordResult;
}

export interface resetPassword {
    userId: ID;
}

export interface resetPasswordResponse {
    result: ResetPasswordResult;
}

export interface getAccessInfo {
}

export interface getAccessInfoResponse {
    result: GetAccessInfoResult;
}

export interface getUserInfo {
}

export interface getUserInfoResponse {
    result: GetUserInfoResult;
}

export interface activate {
    ids: ID[];
}

export interface activateResponse {
    result: ActivateResult[];
}

export interface generateJwtToken {
    claims: ClaimsMapping[];
}

export interface generateJwtTokenResponse {
    result: string;
}

export interface SessionHeader {
    sessionId: string;
}

export interface LoginScopeHeader {
    organizationId: ID;
    portalId?: ID;
}

export interface CallOptions {
    client?: string;
    defaultNamespace?: string;
    returnFieldDataTypes?: boolean;
    clientLog: string;
    debugExceptions: boolean;
    platform: string;
    remoteApplication: string;
    uiRequestId: string;
    perfOption: PerfOption;
}

export interface QueryOptions {
    batchSize?: number;
    filterLanguage?: string;
    scope: queryOptionsScope;
}

export interface APIPerformanceInfo {
    encodedIntervalTimerTree?: string;
    handlerMetrics: NameValuePair[];
}

export interface MetadataVersionCheck {
    facts: Fact[];
    operation: Operation;
}

export interface DebuggingHeader {
    categories: LogInfo[];
    debugLevel: DebugLevel;
}

export interface DebuggingInfo {
    debugLog: string;
}

export interface PackageVersionHeader {
    packageVersions: PackageVersion[];
}

export interface AllowFieldTruncationHeader {
    allowFieldTruncation: boolean;
}

export interface DisableFeedTrackingHeader {
    disableFeedTracking: boolean;
}

export interface StreamingEnabledHeader {
    streamingEnabled: boolean;
}

export interface AllOrNoneHeader {
    allOrNone: boolean;
}

export interface CurrencyConversionHeader {
    skipCurrencyConversion: boolean;
}

export interface DuplicateRuleHeader {
    allowSave: boolean;
    includeRecordDetails: boolean;
    runAsCurrentUser: boolean;
}

export interface LimitInfoHeader {
    limitInfo: LimitInfo[];
}

export interface PatchHeader {
    patch: boolean;
}

export interface match {
    sObjects: sObject[];
    matchOptions: MatchOptions;
}

export interface matchResponse {
    result: MatchResult[];
}

export interface MruHeader {
    updateMru: boolean;
}

export interface EmailHeader {
    triggerAutoResponseEmail: boolean;
    triggerOtherEmail: boolean;
    triggerUserEmail: boolean;
}

export interface AssignmentRuleHeader {
    assignmentRuleId?: ID;
    useDefaultRule?: boolean;
}

export interface ConditionalRequestHeader {
    ifModifiedBefore?: Date;
    ifModifiedSince?: Date;
    ifModifiedBeforeArray?: Date[];
}

export interface UserTerritoryDeleteHeader {
    transferToUserId?: ID;
}

export interface PartnerNetworkHeader {
    connectionId?: ID;
    partnerEntityIds?: ID[];
    parentEntityIds?: ID[];
}

export interface LocaleOptions {
    language?: string;
    localizeErrors?: boolean;
}

export interface OwnerChangeOptions {
    options?: OwnerChangeOption[];
}

export interface CommonEventRequestInformation {
    appName: string;
    entityId: string;
    requestOrigin: RequestOrigin;
}

export interface fault {
}

export interface LoginFault extends ApiFault {}

export interface InvalidQueryLocatorFault extends ApiFault {}

export interface InvalidNewPasswordFault extends ApiFault {}

export interface InvalidOldPasswordFault extends ApiFault {}

export interface InvalidIdFault extends ApiFault {}

export interface UnexpectedErrorFault extends ApiFault {}

export interface InvalidFieldFault extends ApiQueryFault {}

export interface InvalidSObjectFault extends ApiQueryFault {}

export interface MalformedQueryFault extends ApiQueryFault {}

export interface MalformedSearchFault extends ApiQueryFault {}

export interface sObject {
    type: string;
    fieldsToNull?: string[];
    Id?: ID;
}

export interface address extends location {
    city?: string;
    country?: string;
    countryCode?: string;
    geocodeAccuracy?: string;
    postalCode?: string;
    state?: string;
    stateCode?: string;
    street?: string;
}

export interface location {
    latitude?: number;
    longitude?: number;
}

export interface QueryResult {
    done: boolean;
    queryLocator?: QueryLocator;
    records?: sObject[];
    size: number;
}

export interface SetupBriefcaseResult {
    briefcaseType?: briefcaseType;
}

export interface SearchResult {
    queryId?: string;
    searchRecords: SearchRecord[];
    searchResultsMetadata?: SearchResultsMetadata;
}

export interface SearchRecord {
    record: sObject;
    searchRecordMetadata?: SearchRecordMetadata;
    snippet?: SearchSnippet;
}

export interface SearchRecordMetadata {
    searchPromoted: boolean;
    spellCorrected: boolean;
}

export interface SearchSnippet {
    text?: string;
    wholeFields: NameValuePair[];
}

export interface SearchResultsMetadata {
    entityLabelMetadata?: LabelsSearchMetadata[];
    entityMetadata?: EntitySearchMetadata[];
    status?: SearchStatus;
}

export interface LabelsSearchMetadata {
    entityFieldLabels?: NameValuePair[];
    entityName?: string;
}

export interface EntitySearchMetadata {
    entityName?: string;
    errorMetadata?: EntityErrorMetadata;
    fieldMetadata?: FieldLevelSearchMetadata[];
    intentQueryMetadata?: EntityIntentQueryMetadata;
    searchPromotionMetadata?: EntitySearchPromotionMetadata;
    spellCorrectionMetadata?: EntitySpellCorrectionMetadata;
    status?: SearchStatus;
}

export interface FieldLevelSearchMetadata {
    label?: string;
    name?: string;
    type?: string;
}

export interface EntitySpellCorrectionMetadata {
    correctedQuery?: string;
    hasNonCorrectedResults?: boolean;
}

export interface EntitySearchPromotionMetadata {
    promotedResultCount?: number;
}

export interface EntityIntentQueryMetadata {
    intentQuery?: boolean;
    message?: string;
}

export interface EntityErrorMetadata {
    errorCode?: string;
    message?: string;
}

export interface SearchStatus {
    code?: string;
    message?: string;
}

export interface RelationshipReferenceTo {
    referenceTo: string[];
}

export interface RecordTypesSupported {
    recordTypeInfos: RecordTypeInfo[];
}

export interface JunctionIdListNames {
    names: string[];
}

export interface SearchLayoutButtonsDisplayed {
    applicable: boolean;
    buttons: SearchLayoutButton[];
}

export interface SearchLayoutButton {
    apiName: string;
    label: string;
}

export interface SearchLayoutFieldsDisplayed {
    applicable: boolean;
    fields: SearchLayoutField[];
}

export interface SearchLayoutField {
    apiName: string;
    label: string;
    sortable: boolean;
}

export interface NameValuePair {
    name: string;
    value: string;
}

export interface NameObjectValuePair {
    isVisible?: boolean;
    name: string;
    value: any[];
}

export interface NameValueTypeTriple {
    name: string;
    type: string;
    value: string;
}

export interface SimpleNameObjectValuePair {
    name: string;
    value: any;
}

export interface FlowInterviewWrapperContext {
    inputs: SimpleNameObjectValuePair[];
    wrapperContextType: string;
}

export interface StartFlowInterviewRequest {
    flowName: string;
    inputs: NameObjectValuePair[];
    versionId: string;
    debug?: FlowInterviewDebugInput;
    wrapperContext?: FlowInterviewWrapperContext;
}

export interface NavigateFlowInterviewRequest {
    action: string;
    screenInputs: NameObjectValuePair[];
    state: string;
    debug?: FlowInterviewDebugInput;
    lcErrors: NameValuePair[];
}

export interface ResumeFlowInterviewRequest {
    guid: string;
}

export interface RunFlowTestInput {
    testIdOrName: string[];
    showTrace?: boolean;
    flowVersionId: string;
}

export interface RunFlowTestResult {
    assertionResults: FlowTestAssertionResult[];
    endDateTime: Date;
    flowTestId: string;
    flowTestName: string;
    interviewErrors: string[];
    interviewStatus: string;
    startDateTime: Date;
    status: string;
    trace: string;
}

export interface GetFlowInterviewHistoryRequest {
    debug?: FlowInterviewDebugInput;
    guid: string;
}

export interface FlowAccessInput {
    flowEnumOrDefId: string;
    flowVersionId: string;
    isBasedOnCommUserAccessCheck: boolean;
}

export interface CanViewFlowResult {
    canView: boolean;
    errors?: Error[];
}

export interface FlowInterviewAction {
    id: string;
    label: string;
}

export interface FlowTest {
    description?: string;
    label: string;
    referenceFlow: string;
    testPoints: FlowTestPoint[];
}

export interface FlowTestPoint {
    asserts: FlowTestAssert[];
    elementDeveloperName: string;
    parameters: FlowTestParameter[];
}

export interface FlowTestAssert {
    assertErrorMessage?: string;
    conditions: FlowTestCondition[];
}

export interface FlowTestAssertionResult {
    conditionsText: string[];
    failMessage: string;
    errorMessage: string;
    status?: string;
}

export interface FlowTestCondition {
    leftValueReference: string;
    Operator?: string;
    rightValue?: FlowTestReferenceOrValue;
}

export interface FlowTestReferenceOrValue {
    booleanValue?: boolean;
    dateTimeValue?: Date;
    dateValue?: Date;
    numberValue?: number;
    sobjectValue?: string;
    stringValue?: string;
}

export interface FlowTestParameter {
    leftValueReference: string;
    type: string;
    value: FlowTestReferenceOrValue;
}

export interface GenerateFlowTestResult {
    flowTest?: FlowTest;
}

export interface NavigateFlowInterviewResult {
    activeStages: FlowInterviewStage[];
    apiVersionRuntime?: number;
    availableActions: FlowInterviewAction[];
    currentFlowVersionId?: string;
    currentStage?: FlowInterviewStage;
    customProperties: FlowInterviewCustomProperty[];
    debug?: FlowInterviewDebugOutput;
    errorMessages: string[];
    flowLabel: string;
    formulas: FlowInterviewReactiveFormula[];
    guid: string;
    helpText?: string;
    interviewStatus: string;
    isFirstVisit: boolean;
    localActionName?: string;
    localActionInputs: FlowInterviewLocalActionInput[];
    localActionOutputs: FlowInterviewLocalActionOutput[];
    locationName?: string;
    orchestrationStatus?: string;
    outputVariables: FlowInterviewOutputVariable[];
    pausedText?: string;
    reactiveActions: FlowInterviewReactiveAction[];
    reactiveAssignments: FlowInterviewReactiveAssignment[];
    reactiveFormulaEvaluations: FlowInterviewReactiveFormulaEvaluation[];
    reactiveDataProviders: FlowInterviewReactiveDataProvider[];
    reactiveTriggers: FlowInterviewReactiveTrigger[];
    reactiveValidations: FlowInterviewReactiveValidation[];
    referenceContextMap?: FlowInterviewReferenceContextMapEntry[];
    screenFields: FlowInterviewScreenField[];
    showFooter: boolean;
    showHeader: boolean;
    state?: string;
    supportedEngine?: string;
}

export interface FlowInterviewScreenField {
    choices: FlowInterviewChoice[];
    contextMap: NameValuePair[];
    dataType: string;
    errorDetails?: FlowInterviewErrorDetail[];
    errorMessages: string[];
    extensionName?: string;
    extensionType?: string;
    fields: FlowInterviewScreenField[];
    fieldType: string;
    helpText?: string;
    inputs: FlowInterviewScreenFieldInput[];
    isDisabled: boolean;
    isReactiveOnInit: boolean;
    isReadOnly: boolean;
    isRequired: boolean;
    isValidValue: boolean;
    label: string;
    metadataValues: FlowInterviewMetadataValue[];
    name: string;
    objectFieldReference?: FlowInterviewObjectFieldReference[];
    outputs: FlowInterviewScreenFieldOutput[];
    regionContainerType?: string;
    scale?: number;
    templateField?: FlowInterviewScreenField;
    triggersUpdate: boolean;
    value?: any;
    valueSources: string[];
    visibilityRule: string;
}

export interface FlowInterviewReactiveTrigger {
    eventHandlers: FlowInterviewReactiveHandler[];
    eventName: string;
    eventSources: string[];
}

export interface FlowInterviewReactiveHandler {
    actionName: string;
    actionType: string;
    conditionContextMap: NameValueTypeTriple[];
    conditionExpression: string;
    conditionSources: string[];
    initBehavior: string;
    lockLevel: string;
}

export interface FlowInterviewReactiveAction {
    actionName: string;
    actionType: string;
    inputs: FlowInterviewScreenFieldInput[];
    name: string;
    outputs: FlowInterviewScreenFieldOutput[];
    prefillValues: FlowInterviewScreenFieldInput[];
}

export interface FlowInterviewReactiveAssignment {
    assigmentType: string;
    name: string;
    source: string;
    target: string;
}

export interface FlowInterviewReactiveFormulaEvaluation {
    name: string;
    targetFormulaName: string;
}

export interface FlowInterviewReactiveValidation {
    errorMessage: string;
    errorMessageFormulaName: string;
    name: string;
    sourceFormulaName: string;
    target: string;
}

export interface FlowInterviewReactiveDataProvider {
    filterLogic: string;
    filters: FlowInterviewReactiveDataProviderFilter[];
    initBehavior: string;
    limit: number;
    name: string;
    objectSuperType?: string;
    objectType?: string;
    prefillValue: any[];
    sortFieldName: string;
    sortOrder: string;
}

export interface FlowInterviewReactiveDataProviderFilter {
    isRhsReference: boolean;
    lhsFieldName: string;
    operator: string;
    rhsDataType: string;
    rhsValue?: string;
}

export interface FlowInterviewReactiveFormula {
    contextMap: NameValueTypeTriple[];
    expression: string;
    formulaType: string;
    name: string;
    outputType: string;
    scale?: number;
    valueSources: string[];
}

export interface FlowInterviewReferenceContextMapEntry {
    isCollection: boolean;
    label: string;
    reference: string;
    scale?: number;
    type: string;
    value?: string;
}

export interface FlowInterviewScreenFieldInput {
    dataType: string;
    isCollection: boolean;
    name: string;
    objectType?: string;
    value: any[];
    valueSources: string[];
}

export interface FlowInterviewScreenFieldOutput {
    dataType: string;
    isCollection: boolean;
    name: string;
    objectType?: string;
}

export interface FlowInterviewLocalActionInput {
    dataType: string;
    isCollection: boolean;
    name: string;
    objectType?: string;
    value: any[];
}

export interface FlowInterviewLocalActionOutput {
    dataType: string;
    isCollection: boolean;
    name: string;
    objectType?: string;
}

export interface FlowInterviewErrorDetail {
    errorMessage: string;
    errorSource: string;
}

export interface FlowInterviewMetadataValue {
    name: string;
    value: any[];
}

export interface FlowInterviewReactiveChoiceSource {
    dataType: string;
    labelFieldName: string;
    name: string;
    sourceElement: string;
    valueFieldName: string;
}

export interface FlowInterviewChoice {
    choiceSource?: FlowInterviewReactiveChoiceSource;
    choiceValue?: string;
    isSelected: boolean;
    label: string;
    name: string;
    text?: string;
    userInput?: FlowInterviewChoiceUserInput;
}

export interface FlowInterviewChoiceUserInput {
    dataType: string;
    errorMessages: string[];
    isRequired: boolean;
    isValidValue: boolean;
    label: string;
    name: string;
    value?: any;
}

export interface FlowInterviewOutputVariable {
    dataType: string;
    description?: string;
    isCollection: boolean;
    name: string;
    objectType?: string;
    flowName: string;
    value: any[];
}

export interface FlowInterviewStage {
    label: string;
    name: string;
}

export interface FlowInterviewDebugInput {
    collectApexLimitUsage?: boolean;
    debugAsUserId?: string;
    debugWaitInput?: FlowInterviewDebugWaitInput;
    debugWaits?: boolean;
    enableRollbackMode?: boolean;
    enableTrace?: boolean;
    isForNewDebugging?: boolean;
    useLatestSubflow?: boolean;
    versionId?: string;
}

export interface FlowInterviewDebugWaitInput {
    eventOutputs: NameObjectValuePair[];
    waitEventName?: string;
}

export interface FlowInterviewDebugOutput {
    trace?: string;
    waitDebugOutput: FlowInterviewDebugWaitOutput[];
}

export interface FlowInterviewDebugWaitOutput {
    eventOutputs: NameObjectValuePair[];
    waitEventName?: string;
}

export interface FlowInterviewObjectFieldReference {
    objectFieldName?: string;
    objectName?: string;
    objectResourceName?: string;
    recordId?: string;
    recordTypeId?: string;
}

export interface FlowInterviewCustomProperty {
    name: string;
    attributes: NameValueTypeTriple[];
}

export interface ClaimsMapping {
    claimKey: string;
    claimValue: string;
}

export interface GetUpdatedResult {
    ids: ID[];
    latestDateCovered: Date;
}

export interface GetDeletedResult {
    deletedRecords: DeletedRecord[];
    earliestDateAvailable: Date;
    latestDateCovered: Date;
}

export interface DeletedRecord {
    deletedDate: Date;
    id: ID;
}

export interface OutlookSearchResult {
    records?: sObject[];
    size: number;
}

export interface OutlookDescribeResult {
    inboundEmailType?: string;
    outboundEmailType?: string;
    priority?: string;
    recordTypeId?: ID;
    status?: string;
}

export interface GetServerTimestampResult {
    timestamp: Date;
}

export interface ImpersonateUserResult {
    errors: Error[];
    sessionId?: string;
    success: boolean;
    userId?: ID;
}

export interface InvalidateSessionsResult {
    errors: Error[];
    success: boolean;
}

export interface SetPasswordResult {
}

export interface ChangeOwnPasswordResult {
}

export interface ResetPasswordResult {
    password: string;
}

export interface GetAccessInfoResult {
    accessMap: AccessMapping[];
}

export interface AccessMapping {
    accessName: string;
    accessible: boolean;
}

export interface GetUserInfoResult {
    accessibilityMode: boolean;
    chatterExternal: boolean;
    currencySymbol?: string;
    defaultAppIdForProfile?: ID;
    orgAttachmentFileSizeLimit: number;
    orgDefaultCurrencyIsoCode?: string;
    orgDefaultCurrencyLocale?: string;
    orgDisallowHtmlAttachments: boolean;
    orgHasPersonAccounts: boolean;
    organizationId: ID;
    organizationMultiCurrency: boolean;
    organizationName: string;
    profileId: ID;
    roleId?: ID;
    sessionSecondsValid: number;
    userDefaultCurrencyIsoCode?: string;
    userEmail: string;
    userFullName: string;
    userId: ID;
    userLanguage: string;
    userLocale: string;
    userName: string;
    userTimeZone: string;
    userType: string;
    userUiSkin: string;
}

export interface LoginResult {
    metadataServerUrl?: string;
    passwordExpired: boolean;
    sandbox: boolean;
    serverUrl?: string;
    sessionId?: string;
    upgradeMessage?: string;
    upgradeURL?: string;
    userId?: ID;
    userInfo?: GetUserInfoResult;
}

export interface ExtendedErrorDetails {
    extendedErrorCode: ExtendedErrorCode;
}

export interface Error {
    extendedErrorDetails?: ExtendedErrorDetails[];
    fields?: string[];
    message: string;
    statusCode: StatusCode;
}

export interface SendEmailError {
    fields?: string[];
    message: string;
    statusCode: StatusCode;
    targetObjectId?: ID;
}

export interface SaveResult {
    errors: Error[];
    id?: ID;
    success: boolean;
}

export interface RenderEmailTemplateError {
    fieldName: string;
    message: string;
    offset: number;
    statusCode: StatusCode;
}

export interface UpsertResult {
    created: boolean;
    errors: Error[];
    id?: ID;
    success: boolean;
}

export interface PerformQuickActionResult {
    contextId?: ID;
    created: boolean;
    errors: Error[];
    feedItemIds?: ID[];
    ids?: ID[];
    success: boolean;
    successMessage?: string;
}

export interface QuickActionTemplateResult {
    contextId?: string;
    defaultValueFormulas?: sObject;
    defaultValues?: sObject;
    errors: Error[];
    success: boolean;
}

export interface MergeRequest {
    additionalInformationMap: AdditionalInformationMap[];
    masterRecord: sObject;
    recordToMergeIds: ID[];
}

export interface MergeResult {
    errors: Error[];
    id?: ID;
    mergedRecordIds: ID[];
    success: boolean;
    updatedRelatedIds: ID[];
}

export interface ProcessRequest {
    comments?: string;
    nextApproverIds?: ID[];
}

export interface ProcessSubmitRequest extends ProcessRequest {
    objectId: ID;
    submitterId?: ID;
    processDefinitionNameOrId?: string;
    skipEntryCriteria?: boolean;
}

export interface ProcessWorkitemRequest extends ProcessRequest {
    action: string;
    workitemId: ID;
}

export interface PerformQuickActionRequest {
    contextId?: ID;
    quickActionName: string;
    records?: sObject[];
}

export interface DescribeAvailableQuickActionResult {
    actionEnumOrId: string;
    label: string;
    name: string;
    type: string;
}

export interface DescribeQuickActionResult {
    accessLevelRequired?: ShareAccessLevel;
    actionEnumOrId: string;
    canvasApplicationId?: ID;
    canvasApplicationName?: string;
    colors: DescribeColor[];
    contextSobjectType?: string;
    defaultValues?: DescribeQuickActionDefaultValue[];
    flowDevName?: string;
    flowRecordIdVar?: string;
    height?: number;
    iconName?: string;
    iconUrl?: string;
    icons: DescribeIcon[];
    label: string;
    layout?: DescribeLayoutSection;
    lightningComponentBundleId?: ID;
    lightningComponentBundleName?: string;
    lightningComponentQualifiedName?: string;
    lightningWebComponentBundleId?: ID;
    lightningWebComponentBundleName?: string;
    lightningWebComponentQualifiedName?: string;
    miniIconUrl?: string;
    mobileExtensionId?: string;
    name: string;
    parameters?: DescribeQuickActionParameter[];
    showQuickActionLcHeader: boolean;
    showQuickActionVfHeader: boolean;
    targetParentField?: string;
    targetRecordTypeId?: ID;
    targetSobjectType?: string;
    type: string;
    visualforcePageName?: string;
    visualforcePageUrl?: string;
    width?: number;
}

export interface DescribeQuickActionDefaultValue {
    defaultValue?: string;
    field?: string;
}

export interface DescribeQuickActionParameter {
    parameterName?: string;
    parameterType?: QuickActionParameterType;
    parameterValue?: string;
}

export interface DescribeVisualForceResult {
    domain: string;
}

export interface ProcessArticleRequest extends ProcessWorkitemRequest {
    version: string;
}

export interface ProcessResult {
    actorIds?: ID[];
    entityId?: ID;
    errors: Error[];
    instanceId?: ID;
    instanceStatus?: string;
    newWorkitemIds?: ID[];
    success: boolean;
}

export interface DescribeWorkitemActionResult {
    actions: AllowedWorkitemAction[];
    errors: Error[];
    success: boolean;
    targetObjectId: ID;
    workitemId: ID;
}

export interface AllowedWorkitemAction {
    versionRequired: boolean;
    commentsRequired: boolean;
    label: string;
    name: string;
    nextOwnerRequired: boolean;
}

export interface DeleteResult {
    errors?: Error[];
    id?: ID;
    success: boolean;
}

export interface UndeleteResult {
    errors: Error[];
    id?: ID;
    success: boolean;
}

export interface DeleteByExampleResult {
    entity?: sObject;
    errors?: Error[];
    rowCount?: number;
    success: boolean;
}

export interface EmptyRecycleBinResult {
    errors: Error[];
    id?: ID;
    success: boolean;
}

export interface LeadConvert {
    accountId?: ID;
    accountRecord?: sObject;
    bypassAccountDedupeCheck?: boolean;
    bypassContactDedupeCheck?: boolean;
    contactId?: ID;
    contactRecord?: sObject;
    convertedStatus: string;
    doNotCreateOpportunity: boolean;
    leadId: ID;
    opportunityId?: ID;
    opportunityName?: string;
    opportunityRecord?: sObject;
    overwriteLeadSource: boolean;
    ownerId?: ID;
    relatedPersonAccountId?: ID;
    relatedPersonAccountRecord?: sObject;
    sendNotificationEmail: boolean;
}

export interface LeadConvertResult {
    accountId?: ID;
    contactId?: ID;
    errors: Error[];
    leadId?: ID;
    opportunityId?: ID;
    relatedPersonAccountId?: ID;
    success: boolean;
}

export interface AddCampaignMemberOptions {
    campaignId?: ID;
    keepExistingStatus: boolean;
    leadOrContactIds?: ID;
    newStatus: string;
    reportId?: ID;
    reportMetadata: string;
}

export interface AddCampaignMemberResult {
    errors: Error[];
    numInserts: number;
    numUpdates: number;
    saveError: string;
    success: boolean;
}

export interface DescribeSObjectResult {
    actionOverrides?: ActionOverride[];
    activateable: boolean;
    associateEntityType?: string;
    associateParentEntity?: string;
    childRelationships: ChildRelationship[];
    compactLayoutable: boolean;
    createable: boolean;
    custom: boolean;
    customSetting: boolean;
    dataTranslationEnabled?: boolean;
    deepCloneable: boolean;
    defaultImplementation?: string;
    deletable: boolean;
    deprecatedAndHidden: boolean;
    feedEnabled: boolean;
    fields?: Field[];
    hasSubtypes: boolean;
    idEnabled: boolean;
    implementedBy?: string;
    implementsInterfaces?: string;
    isInterface: boolean;
    isSubtype: boolean;
    keyPrefix?: string;
    label: string;
    labelPlural: string;
    layoutable: boolean;
    listviewable?: boolean;
    lookupLayoutable?: boolean;
    mergeable: boolean;
    mruEnabled: boolean;
    name: string;
    namedLayoutInfos: NamedLayoutInfo[];
    networkScopeFieldName?: string;
    queryable: boolean;
    recordTypeInfos: RecordTypeInfo[];
    replicateable: boolean;
    retrieveable: boolean;
    searchLayoutable?: boolean;
    searchable: boolean;
    supportedScopes?: ScopeInfo[];
    triggerable?: boolean;
    undeletable: boolean;
    updateable: boolean;
    urlDetail?: string;
    urlEdit?: string;
    urlNew?: string;
}

export interface DescribePicklistResult {
    defaultValue?: PicklistEntry;
    multiSelectable: boolean;
    picklistValues: PicklistEntry[];
}

export interface DescribePicklistsParam {
    entityName: string;
    fieldNames: string;
    recordTypeId?: string;
}

export interface DescribeGlobalSObjectResult {
    activateable: boolean;
    associateEntityType?: string;
    associateParentEntity?: string;
    createable: boolean;
    custom: boolean;
    customSetting: boolean;
    dataTranslationEnabled?: boolean;
    deepCloneable: boolean;
    deletable: boolean;
    deprecatedAndHidden: boolean;
    feedEnabled: boolean;
    hasSubtypes: boolean;
    idEnabled: boolean;
    isInterface: boolean;
    isSubtype: boolean;
    keyPrefix?: string;
    label: string;
    labelPlural: string;
    layoutable: boolean;
    mergeable: boolean;
    mruEnabled: boolean;
    name: string;
    queryable: boolean;
    replicateable: boolean;
    retrieveable: boolean;
    searchable: boolean;
    triggerable: boolean;
    undeletable: boolean;
    updateable: boolean;
}

export interface ChildRelationship {
    cascadeDelete: boolean;
    childSObject: string;
    deprecatedAndHidden: boolean;
    field: string;
    junctionIdListNames?: string[];
    junctionReferenceTo?: string[];
    relationshipName?: string;
    restrictedDelete?: boolean;
}

export interface DescribeGlobalResult {
    encoding?: string;
    maxBatchSize: number;
    sobjects: DescribeGlobalSObjectResult[];
}

export interface DescribeGlobalTheme {
    global: DescribeGlobalResult;
    theme: DescribeThemeResult;
}

export interface DiscoverSchemasResult {
    schemas: Schema[];
}

export interface Schema {
    name: string;
}

export interface DescribeSchemaResult {
    fields: SchemaField[];
    keyPrefix?: string;
    name: string;
}

export interface SchemaField {
    digits: number;
    length: number;
    name: string;
    nillable: boolean;
    precision: number;
    scale: number;
    type: fieldType;
    unique: boolean;
}

export interface ScopeInfo {
    label: string;
    name: string;
}

export interface DurableIdList {
    ids: string[];
}

export interface StringList {
    values: string[];
}

export interface ChangeEventHeader {
    entityName: string;
    recordIds: string[];
    commitTimestamp: number;
    commitNumber: number;
    commitUser: string;
    diffFields: string[];
    changeType: changeEventType;
    changeOrigin: string;
    transactionKey: string;
    sequenceNumber: number;
    nulledFields: string[];
    changedFields: string[];
}

export interface FilteredLookupInfo {
    controllingFields: string[];
    dependent: boolean;
    optionalFilter: boolean;
}

export interface Field {
    aggregatable: boolean;
    aiPredictionField: boolean;
    autoNumber: boolean;
    byteLength: number;
    calculated: boolean;
    calculatedFormula?: string;
    cascadeDelete?: boolean;
    caseSensitive: boolean;
    compoundFieldName?: string;
    controllerName?: string;
    createable: boolean;
    custom: boolean;
    dataTranslationEnabled?: boolean;
    defaultValue?: any;
    defaultValueFormula?: string;
    defaultedOnCreate: boolean;
    dependentPicklist?: boolean;
    deprecatedAndHidden: boolean;
    digits: number;
    displayLocationInDecimal?: boolean;
    encrypted?: boolean;
    externalId?: boolean;
    extraTypeInfo?: string;
    filterable: boolean;
    filteredLookupInfo?: FilteredLookupInfo;
    formulaTreatNullNumberAsZero?: boolean;
    groupable: boolean;
    highScaleNumber?: boolean;
    htmlFormatted?: boolean;
    idLookup: boolean;
    inlineHelpText?: string;
    label: string;
    length: number;
    mask?: string;
    maskType?: string;
    name: string;
    nameField: boolean;
    namePointing?: boolean;
    nillable: boolean;
    permissionable: boolean;
    picklistValues?: PicklistEntry[];
    polymorphicForeignKey: boolean;
    precision: number;
    queryByDistance: boolean;
    referenceTargetField?: string;
    referenceTo?: string[];
    relationshipName?: string;
    relationshipOrder?: number;
    restrictedDelete?: boolean;
    restrictedPicklist: boolean;
    scale: number;
    searchPrefilterable: boolean;
    soapType: soapType;
    sortable?: boolean;
    type: fieldType;
    unique: boolean;
    updateable: boolean;
    writeRequiresMasterRead?: boolean;
}

export interface PicklistEntry {
    active: boolean;
    defaultValue: boolean;
    label?: string;
    validFor?: string;
    value: string;
}

export interface DescribeDataCategoryGroupResult {
    categoryCount: number;
    description: string;
    label: string;
    name: string;
    sobject: string;
}

export interface DescribeDataCategoryGroupStructureResult {
    description: string;
    label: string;
    name: string;
    sobject: string;
    topCategories: DataCategory[];
}

export interface DataCategoryGroupSobjectTypePair {
    dataCategoryGroupName: string;
    sobject: string;
}

export interface DataCategory {
    childCategories: DataCategory[];
    label: string;
    name: string;
}

export interface DescribeDataCategoryMappingResult {
    dataCategoryGroupId: string;
    dataCategoryGroupLabel: string;
    dataCategoryGroupName: string;
    dataCategoryId: string;
    dataCategoryLabel: string;
    dataCategoryName: string;
    id: string;
    mappedEntity: string;
    mappedField: string;
}

export interface CommonEventResult {
    success: boolean;
}

export interface KnowledgeSettings {
    defaultLanguage?: string;
    knowledgeEnabled: boolean;
    languages: KnowledgeLanguageItem[];
}

export interface KnowledgeLanguageItem {
    active: boolean;
    assigneeId?: string;
    name: string;
}

export interface FieldDiff {
    difference?: differenceType;
    name: string;
}

export interface AdditionalInformationMap {
    name: string;
    value: string;
}

export interface MatchRecord {
    additionalInformation: AdditionalInformationMap[];
    fieldDiffs: FieldDiff[];
    matchConfidence: number;
    record: sObject;
}

export interface MatchResult {
    entityType: string;
    errors: Error[];
    matchEngine: string;
    matchRecords: MatchRecord[];
    rule: string;
    size: number;
    success: boolean;
}

export interface DuplicateResult {
    allowSave: boolean;
    duplicateRule: string;
    duplicateRuleEntityType: string;
    errorMessage?: string;
    matchResults: MatchResult[];
}

export interface DuplicateError extends Error {
    duplicateResult: DuplicateResult;
}

export interface DescribeNounResult {
    caseValues: NameCaseValue[];
    developerName: string;
    gender?: Gender;
    name: string;
    pluralAlias?: string;
    startsWith?: StartsWith;
}

export interface NameCaseValue {
    article?: Article;
    caseType?: CaseType;
    number?: GrammaticalNumber;
    possessive?: Possessive;
    value?: string;
}

export interface ObjectMapping {
    inputObject?: string;
    objectMappingFields?: ObjectMappingField[];
    outputObject?: string;
}

export interface ObjectMappingField {
    inputField?: string;
    inputLookupObject?: string;
    outputField?: string;
    outputLookupObject?: string;
}

export interface DescribeDuplicateRuleResult {
    actionOnInsert?: DuplicateActionType;
    actionOnUpdate?: DuplicateActionType;
    active: boolean;
    alertMessage?: string;
    developerName: string;
    duplicateFilters: DuplicateRuleFilter[];
    duplicateRuleMatchInfos: DuplicateRuleMatchInfo[];
    name: string;
    operationsOnInsert?: string[];
    operationsOnUpdate?: string[];
    securityOption?: DuplicateSecurityOptionType;
    sortOrder: number;
}

export interface DuplicateRuleFilter {
    booleanFilter: string;
    filterItems: DuplicateRuleFilterItem[];
    ruleCritera: string;
}

export interface DuplicateRuleFilterItem {
    field: string;
    operation: string;
    sortOrder: number;
    value: string;
}

export interface DuplicateRuleMatchInfo {
    entityType?: string;
    mapped: boolean;
    matchEngine?: string;
    matchFields?: string[];
    matchRuleName?: string;
    objectMapping?: ObjectMapping;
}

export interface FindDuplicatesResult {
    duplicateResults: DuplicateResult[];
    errors: Error[];
    success: boolean;
}

export interface DescribeFlexiPageResult {
    id: ID;
    label: string;
    name: string;
    quickActionList?: DescribeQuickActionListResult;
    regions: DescribeFlexiPageRegion[];
    sobjectType?: string;
    template?: string;
    type: string;
}

export interface DescribeFlexiPageRegion {
    components: DescribeComponentInstance[];
    name: string;
}

export interface DescribeComponentInstance {
    properties: DescribeComponentInstanceProperty[];
    typeName: string;
    typeNamespace: string;
}

export interface DescribeComponentInstanceProperty {
    name: string;
    region?: DescribeFlexiPageRegion;
    type?: ComponentInstancePropertyTypeEnum;
    value?: string;
}

export interface FlexipageContext {
    type: FlexipageContextTypeEnum;
    value: string;
}

export interface DescribeAppMenuResult {
    appMenuItems: DescribeAppMenuItem[];
}

export interface DescribeAppMenuItem {
    colors: DescribeColor[];
    content: string;
    icons: DescribeIcon[];
    label: string;
    name: string;
    type: string;
    url: string;
}

export interface DescribeThemeResult {
    themeItems: DescribeThemeItem[];
}

export interface DescribeThemeItem {
    colors: DescribeColor[];
    icons: DescribeIcon[];
    name: string;
}

export interface DescribeSoftphoneLayoutResult {
    callTypes: DescribeSoftphoneLayoutCallType[];
    id: ID;
    name: string;
}

export interface DescribeSoftphoneLayoutCallType {
    infoFields: DescribeSoftphoneLayoutInfoField[];
    name: string;
    screenPopOptions: DescribeSoftphoneScreenPopOption[];
    screenPopsOpenWithin?: string;
    sections: DescribeSoftphoneLayoutSection[];
}

export interface DescribeSoftphoneScreenPopOption {
    matchType: string;
    screenPopData: string;
    screenPopType: string;
}

export interface DescribeSoftphoneLayoutInfoField {
    name: string;
}

export interface DescribeSoftphoneLayoutSection {
    entityApiName: string;
    items: DescribeSoftphoneLayoutItem[];
}

export interface DescribeSoftphoneLayoutItem {
    itemApiName: string;
}

export interface DescribeCompactLayoutsResult {
    compactLayouts: DescribeCompactLayout[];
    defaultCompactLayoutId: ID;
    recordTypeCompactLayoutMappings: RecordTypeCompactLayoutMapping[];
}

export interface DescribeCompactLayout {
    actions: DescribeLayoutButton[];
    fieldItems: DescribeLayoutItem[];
    id: ID;
    imageItems: DescribeLayoutItem[];
    label: string;
    name: string;
    objectType: string;
}

export interface RecordTypeCompactLayoutMapping {
    available: boolean;
    compactLayoutId?: ID;
    compactLayoutName: string;
    recordTypeId: ID;
    recordTypeName: string;
}

export interface DescribePathAssistantsResult {
    pathAssistants: DescribePathAssistant[];
}

export interface DescribePathAssistant {
    active: boolean;
    animationRule?: DescribeAnimationRule[];
    apiName: string;
    label: string;
    pathPicklistField: string;
    picklistsForRecordType?: PicklistForRecordType[];
    recordTypeId?: ID;
    steps: DescribePathAssistantStep[];
}

export interface DescribePathAssistantStep {
    closed: boolean;
    converted: boolean;
    fields: DescribePathAssistantField[];
    info?: string;
    layoutSection?: DescribeLayoutSection;
    picklistLabel: string;
    picklistValue: string;
    won: boolean;
}

export interface DescribePathAssistantField {
    apiName: string;
    label: string;
    readOnly: boolean;
    required: boolean;
}

export interface DescribeAnimationRule {
    animationFrequency: string;
    isActive: boolean;
    recordTypeContext: string;
    recordTypeId?: string;
    targetField: string;
    targetFieldChangeToValues: string;
}

export interface DescribeApprovalLayoutResult {
    approvalLayouts: DescribeApprovalLayout[];
}

export interface DescribeApprovalLayout {
    id: ID;
    label: string;
    layoutItems: DescribeLayoutItem[];
    name: string;
}

export interface DescribeLayoutResult {
    layouts: DescribeLayout[];
    recordTypeMappings: RecordTypeMapping[];
    recordTypeSelectorRequired: boolean;
}

export interface DescribeLayout {
    buttonLayoutSection?: DescribeLayoutButtonSection;
    detailLayoutSections: DescribeLayoutSection[];
    editLayoutSections: DescribeLayoutSection[];
    feedView?: DescribeLayoutFeedView;
    highlightsPanelLayoutSection?: DescribeLayoutSection;
    id?: ID;
    multirowEditLayoutSections: DescribeLayoutSection[];
    offlineLinks: OfflineLink[];
    quickActionList?: DescribeQuickActionListResult;
    relatedContent?: RelatedContent;
    relatedLists: RelatedList[];
    saveOptions: DescribeLayoutSaveOption[];
}

export interface DescribeMiniLayoutResult {
    layouts: DescribeLayout[];
    recordTypeMappings: RecordTypeMapping[];
    recordTypeSelectorRequired: boolean;
}

export interface DescribeQuickActionListResult {
    quickActionListItems: DescribeQuickActionListItemResult[];
}

export interface DescribeQuickActionListItemResult {
    accessLevelRequired?: ShareAccessLevel;
    colors: DescribeColor[];
    iconUrl?: string;
    icons: DescribeIcon[];
    label: string;
    miniIconUrl: string;
    quickActionName: string;
    targetSobjectType?: string;
    type: string;
}

export interface DescribeLayoutFeedView {
    feedFilters: DescribeLayoutFeedFilter[];
}

export interface DescribeLayoutFeedFilter {
    label: string;
    name: string;
    type: FeedLayoutFilterType;
}

export interface DescribeLayoutSaveOption {
    defaultValue: boolean;
    isDisplayed: boolean;
    label: string;
    name: string;
    restHeaderName: string;
    soapHeaderName: string;
}

export interface DescribeLayoutSection {
    collapsed: boolean;
    columns: number;
    heading?: string;
    layoutRows: DescribeLayoutRow[];
    layoutSectionId?: ID;
    parentLayoutId: ID;
    rows: number;
    tabOrder: TabOrderType;
    useCollapsibleSection: boolean;
    useHeading: boolean;
}

export interface DescribeLayoutButtonSection {
    detailButtons: DescribeLayoutButton[];
}

export interface DescribeLayoutRow {
    layoutItems: DescribeLayoutItem[];
    numItems: number;
}

export interface DescribeLayoutItem {
    editableForNew: boolean;
    editableForUpdate: boolean;
    label?: string;
    layoutComponents: DescribeLayoutComponent[];
    placeholder: boolean;
    required: boolean;
    uiBehavior?: UiBehavior[];
}

export interface DescribeLayoutButton {
    behavior?: WebLinkWindowType;
    colors: DescribeColor[];
    content?: string;
    contentSource?: WebLinkType;
    custom: boolean;
    encoding?: string;
    height?: number;
    icons: DescribeIcon[];
    label?: string;
    menubar?: boolean;
    name?: string;
    overridden: boolean;
    resizeable?: boolean;
    scrollbars?: boolean;
    showsLocation?: boolean;
    showsStatus?: boolean;
    toolbar?: boolean;
    url?: string;
    width?: number;
    windowPosition?: WebLinkPosition;
}

export interface DescribeLayoutComponent {
    displayLines: number;
    tabOrder: number;
    type: layoutComponentType;
    value?: string;
}

export interface FieldComponent extends DescribeLayoutComponent {
    field: Field;
}

export interface FieldLayoutComponent extends DescribeLayoutComponent {
    components: DescribeLayoutComponent[];
    fieldType: fieldType;
}

export interface VisualforcePage extends DescribeLayoutComponent {
    showLabel: boolean;
    showScrollbars: boolean;
    suggestedHeight: string;
    suggestedWidth: string;
    url: string;
}

export interface Canvas extends DescribeLayoutComponent {
    displayLocation: string;
    referenceId: string;
    showLabel: boolean;
    showScrollbars: boolean;
    suggestedHeight: string;
    suggestedWidth: string;
}

export interface ReportChartComponent extends DescribeLayoutComponent {
    cacheData: boolean;
    contextFilterableField: string;
    error: string;
    hideOnError: boolean;
    includeContext: boolean;
    showTitle: boolean;
    size: ReportChartSize;
}

export interface AnalyticsCloudComponent extends DescribeLayoutComponent {
    error: string;
    filter: string;
    height: string;
    hideOnError: boolean;
    showSharing: boolean;
    showTitle: boolean;
    width: string;
}

export interface FieldCriteria {
    criteria: FieldCriterion[];
}

export interface FieldCriterion {
    columnName: string;
    operand: string;
    operator: string;
}

export interface CustomLinkComponent extends DescribeLayoutComponent {
    customLink: DescribeLayoutButton;
}

export interface NamedLayoutInfo {
    name: string;
}

export interface RecordTypeInfo {
    active: boolean;
    available: boolean;
    defaultRecordTypeMapping: boolean;
    developerName: string;
    master: boolean;
    name: string;
    recordTypeId?: ID;
}

export interface RecordTypeMapping {
    active: boolean;
    available: boolean;
    defaultRecordTypeMapping: boolean;
    developerName: string;
    layoutId: ID;
    master: boolean;
    name: string;
    picklistsForRecordType?: PicklistForRecordType[];
    recordTypeId?: ID;
}

export interface PicklistForRecordType {
    picklistName: string;
    picklistValues?: PicklistEntry[];
}

export interface RelatedContent {
    relatedContentItems: DescribeRelatedContentItem[];
}

export interface DescribeRelatedContentItem {
    describeLayoutItem: DescribeLayoutItem;
}

export interface RelatedList {
    accessLevelRequiredForCreate?: ShareAccessLevel;
    buttons?: DescribeLayoutButton[];
    columns: RelatedListColumn[];
    custom: boolean;
    field?: string;
    label: string;
    limitRows: number;
    name: string;
    sobject?: string;
    sort: RelatedListSort[];
}

export interface RelatedListColumn {
    field?: string;
    fieldApiName: string;
    format?: string;
    label: string;
    lookupId?: string;
    name: string;
    sortable: boolean;
}

export interface RelatedListSort {
    ascending: boolean;
    column: string;
}

export interface OfflineLink {
    name: string;
    openType: string;
    position: string;
    properties: string;
    url: string;
    x: number;
    y: number;
}

export interface EmailAttachment {
    body?: string;
    contentId?: string;
    contentType: string;
    fileName: string;
}

export interface HandledEmailMessage {
    attachments: EmailAttachment[];
    headers: NameValuePair[];
    htmlBody: string;
    subject: string;
    textBody: string;
}

export interface EmailFileAttachment {
    body?: string;
    contentType?: string;
    fileName: string;
    id?: ID;
    inline?: boolean;
}

export interface Email {
    bccSender?: boolean;
    emailPriority?: EmailPriority;
    replyTo?: string;
    saveAsActivity?: boolean;
    senderDisplayName?: string;
    subject?: string;
    useSignature?: boolean;
}

export interface MassEmailMessage extends Email {
    description?: string;
    targetObjectIds?: ID;
    templateId: ID;
    whatIds?: ID;
}

export interface SingleEmailMessage extends Email {
    bccAddresses?: string;
    ccAddresses?: string;
    charset?: string;
    documentAttachments: ID[];
    entityAttachments: ID[];
    fileAttachments: EmailFileAttachment[];
    htmlBody?: string;
    inReplyTo?: string;
    oneClickPost?: boolean;
    optOutPolicy?: SendEmailOptOutPolicy;
    orgWideEmailAddressId?: ID;
    plainTextBody?: string;
    references?: string;
    targetObjectId?: ID;
    templateId?: ID;
    templateName?: string;
    toAddresses?: string;
    treatBodiesAsTemplate?: boolean;
    treatTargetObjectAsRecipient?: boolean;
    unsubscribeComment?: string;
    unsubscribeUrls?: string[];
    whatId?: ID;
}

export interface SendEmailResult {
    errors: SendEmailError[];
    success: boolean;
}

export interface DescribeListViewResult {
    listViews: DescribeListView[];
}

export interface DescribeListView {
    filterLanguage?: string;
    id: ID;
    limitRows: number;
    listViewAdvancedFilter?: string;
    listViewColumns: DescribeColumn[];
    listViewFilters: DescribeFilter[];
    listViewName: string;
    listViewScopeFilters: DescribeFilter[];
    relatedEntityId?: ID;
    scope?: queryOptionsScope;
    scopeEntityId?: ID;
    sobjectName?: string;
}

export interface DescribeFilter {
    column: string;
    negated: boolean;
    operator: string;
    value: string[];
    valueSeparator: string;
}

export interface DescribeColumn {
    field: string;
    format?: string;
    label: string;
    name: string;
}

export interface DescribeSort {
    ascending: boolean;
    column: string;
}

export interface DescribeLookupLayoutResult {
    label: string;
    limitRows: number;
    lookupColumns: DescribeColumn[];
}

export interface ListViewColumn {
    ascendingLabel?: string;
    descendingLabel?: string;
    fieldNameOrPath: string;
    hidden: boolean;
    label: string;
    searchable: boolean;
    selectListItem: string;
    sortDirection?: orderByDirection;
    sortIndex?: number;
    sortable: boolean;
    type: fieldType;
}

export interface ListViewOrderBy {
    fieldNameOrPath: string;
    nullsPosition?: orderByNullsPosition;
    sortDirection?: orderByDirection;
}

export interface DescribeSoqlListView {
    columns: ListViewColumn[];
    id: ID;
    orderBy: ListViewOrderBy[];
    query: string;
    relatedEntityId?: ID;
    scope?: string;
    scopeEntityId?: ID;
    sobjectType: string;
    whereCondition?: SoqlWhereCondition;
}

export interface DescribeSoqlListViewsRequest {
    listViewParams: DescribeSoqlListViewParams[];
}

export interface DescribeSoqlListViewParams {
    developerNameOrId: string;
    sobjectType?: string;
}

export interface DescribeSoqlListViewResult {
    describeSoqlListViews: DescribeSoqlListView[];
}

export interface ExecuteListViewRequest {
    developerNameOrId: string;
    limit?: number;
    offset?: number;
    orderBy: ListViewOrderBy[];
    sobjectType: string;
}

export interface ExecuteListViewResult {
    columns: ListViewColumn[];
    developerName: string;
    done: boolean;
    id: ID;
    label: string;
    records: ListViewRecord[];
    size: number;
}

export interface ListViewRecord {
    columns: ListViewRecordColumn[];
}

export interface ListViewRecordColumn {
    fieldNameOrPath: string;
    value?: string;
}

export interface SoqlWhereCondition {
}

export interface SoqlCondition extends SoqlWhereCondition {
    field: string;
    operator: soqlOperator;
    values: string[];
}

export interface SoqlNotCondition extends SoqlWhereCondition {
    condition: SoqlWhereCondition;
}

export interface SoqlConditionGroup extends SoqlWhereCondition {
    conditions: SoqlWhereCondition[];
    conjunction: soqlConjunction;
}

export interface SoqlSubQueryCondition extends SoqlWhereCondition {
    field: string;
    operator: soqlOperator;
    subQuery: string;
}

export interface DescribeSearchLayoutResult {
    errorMsg?: string;
    label?: string;
    limitRows?: number;
    objectType: string;
    searchColumns?: DescribeColumn[];
}

export interface DescribeSearchScopeOrderResult {
    keyPrefix: string;
    name: string;
}

export interface DescribeSearchableEntityResult {
    label: string;
    name: string;
    pluralLabel: string;
}

export interface DescribeTabSetResult {
    description: string;
    label: string;
    logoUrl: string;
    namespace?: string;
    selected: boolean;
    tabSetId: string;
    tabs: DescribeTab[];
}

export interface DescribeTab {
    colors: DescribeColor[];
    custom: boolean;
    iconUrl: string;
    icons: DescribeIcon[];
    label: string;
    miniIconUrl: string;
    name: string;
    sobjectName?: string;
    url: string;
}

export interface DescribeColor {
    color: string;
    context: string;
    theme: string;
}

export interface DescribeIcon {
    contentType: string;
    height?: number;
    theme: string;
    url: string;
    width?: number;
}

export interface ActionOverride {
    formFactor?: string;
    isAvailableInTouch: boolean;
    name: string;
    pageId: ID;
    url?: string;
}

export interface ActivateResult {
    errors: Error[];
    id?: ID;
    success: boolean;
}

export interface SnapshotItem {
    oid: ID;
    uid: ID;
}

export interface SnapshotResult {
    add: SnapshotItem[];
    fullSnapshot: boolean;
    id: ID;
    locator?: string;
    remove: SnapshotItem[];
}

export interface SyncOfflineDataResult {
    lastConfigChange: Date;
    lastFullQuery: Date;
    lastQuery: Date;
    lastReset: Date;
    removed: ID[];
    timestamp: Date;
    token: string;
    updates: QueryResult;
}

export interface EmailSyncAdvancedSetting {
    name: string;
    type: string;
    value: string;
}

export interface EmailSyncEntity {
    clientFolderName?: string;
    conflictResolution: EmailSyncConflictResolution;
    dataSetFilter?: string;
    fieldMapping: EmailSyncFieldMapping[];
    matchPreference?: EmailSyncMatchPreference;
    name: string;
    recordTypeId?: ID;
    syncDirection: EmailSyncDirection;
    syncFollowed: boolean;
}

export interface EmailSyncFieldMapping {
    clientName: string;
    clientType: EmailSyncClientFieldType;
    name: string;
    type: fieldType;
    usedForMatching: boolean;
    valueMapping: EmailSyncFieldValueMapping[];
}

export interface EmailSyncFieldValueMapping {
    clientValue: string;
    value: string;
}

export interface EmailSyncRoutingAddress {
    emailAddress: string;
    fromAddressFilter: string[];
    name: string;
}

export interface DescribeEmailSyncSettings {
    addCase: boolean;
    addEmail: boolean;
    addEmailAttachment: boolean;
    advancedSetting: EmailSyncAdvancedSetting[];
    attachmentSizeLimit?: number;
    automaticallySyncOutlookObjects: boolean;
    cannotChangeClientSyncSetting: boolean;
    clientVersionNumber?: string;
    emailToCaseRoutingAddress: EmailSyncRoutingAddress[];
    entitySetting: EmailSyncEntity[];
    expandedRecurringEventSyncWindow: boolean;
    isSyncThrottlingEnabled: boolean;
    logActivityEmailAddress?: string;
    personAccountRecordTypeId?: ID;
    recurringEvents: boolean;
    recurringTasks: boolean;
    showPersonAccountsAsAccounts: boolean;
    showPersonAccountsAsContacts: boolean;
    sidePanel: boolean;
    upgradeNotification: boolean;
}

export interface DescribeMobileResult {
    configured: boolean;
    defaultConfiguration: boolean;
    emailSyncSettings?: DescribeEmailSyncSettings;
    feedEnabledObjects: DescribeMobileSObject[];
    mobileSObject: DescribeMobileSObject[];
    mobileSettings?: DescribeMobileSettings;
    mobileView: DescribeMobileView[];
    mobileViewDispColumn: DescribeMobileViewDispColumn[];
    mobileViewFilter: DescribeMobileViewFilter[];
    mobileViewSortOrder: DescribeMobileViewSortOrder[];
    tabSet: DescribeTabSetResult[];
}

export interface DescribeMobileSObject {
    iconUrl?: string;
    layout?: DescribeLayoutResult;
    searchLayout?: DescribeSearchLayoutResult;
    sobject: DescribeSObjectResult;
}

export interface DescribeMobileView {
    SObject: string;
    matchAll: boolean;
    name: string;
    viewId: ID;
}

export interface DescribeMobileViewDispColumn {
    column: number;
    field: string;
    viewId: ID;
}

export interface DescribeMobileViewFilter {
    field: string;
    operator: string;
    value: string;
    viewId: ID;
}

export interface DescribeMobileViewSortOrder {
    ascending: boolean;
    field: string;
    order: number;
    viewId: ID;
}

export interface DescribeMobileSettings {
    lockUserToMobileDevice: boolean;
    mappingURL: string;
    maxTextFieldSize?: number;
    mobileDeviceHelpUrl?: string;
    mobileLite: boolean;
    mobilizeFollowed: boolean;
    multiDayEventsEnabled: boolean;
}

export interface RenderEmailTemplateRequest {
    escapeHtmlInMergeFields?: boolean;
    templateBodies?: string;
    whatId?: ID;
    whoId?: ID;
}

export interface RenderEmailTemplateBodyResult {
    errors: RenderEmailTemplateError[];
    mergedBody?: string;
    success: boolean;
}

export interface RenderEmailTemplateResult {
    bodyResults?: RenderEmailTemplateBodyResult;
    errors: Error[];
    success: boolean;
}

export interface RenderStoredEmailTemplateRequest {
    attachmentRetrievalOption?: AttachmentRetrievalOption;
    templateId?: ID;
    updateTemplateUsage?: boolean;
    whatId?: ID;
    whoId?: ID;
}

export interface RenderStoredEmailTemplateResult {
    errors: Error[];
    renderedEmail?: SingleEmailMessage;
    success: boolean;
}

export interface Fact {
    fact: MetadataVersionCheckFact;
    subject: string;
    token: string;
}

export interface LogInfo {
    category: LogCategory;
    level: LogCategoryLevel;
}

export interface PackageVersion {
    majorNumber: number;
    minorNumber: number;
    namespace: string;
    packageId: string;
}

export interface LimitInfo {
    appName?: string;
    current: number;
    limit: number;
    type: string;
}

export interface MatchOptions {
    fields: string;
    matchEngine: string;
    maxMatchResults: number;
    minMatchConfidence: number;
    rule: string;
    sObjectType: string;
}

export interface OwnerChangeOption {
    type: OwnerChangeOptionType;
    execute: boolean;
}

export interface ApiFault {
    exceptionCode: ExceptionCode;
    exceptionMessage: string;
    extendedErrorDetails?: ExtendedErrorDetails[];
    upgradeURL?: string;
    upgradeMessage?: string;
}

export interface ApiQueryFault extends ApiFault {
    row: number;
    column: number;
}

export interface ApiSchemaTypes {
	ID: ID;
	json: json;
	QueryLocator: QueryLocator;
	briefcaseType: briefcaseType;
	StatusCode: StatusCode;
	ExtendedErrorCode: ExtendedErrorCode;
	QuickActionParameterType: QuickActionParameterType;
	ShareAccessLevel: ShareAccessLevel;
	changeEventType: changeEventType;
	fieldType: fieldType;
	soapType: soapType;
	differenceType: differenceType;
	Article: Article;
	CaseType: CaseType;
	Gender: Gender;
	GrammaticalNumber: GrammaticalNumber;
	Possessive: Possessive;
	StartsWith: StartsWith;
	DuplicateActionType: DuplicateActionType;
	DuplicateSecurityOptionType: DuplicateSecurityOptionType;
	ComponentInstancePropertyTypeEnum: ComponentInstancePropertyTypeEnum;
	FlexipageContextTypeEnum: FlexipageContextTypeEnum;
	FeedLayoutFilterType: FeedLayoutFilterType;
	TabOrderType: TabOrderType;
	UiBehavior: UiBehavior;
	WebLinkWindowType: WebLinkWindowType;
	WebLinkPosition: WebLinkPosition;
	WebLinkType: WebLinkType;
	layoutComponentType: layoutComponentType;
	ReportChartSize: ReportChartSize;
	EmailPriority: EmailPriority;
	SendEmailOptOutPolicy: SendEmailOptOutPolicy;
	AttachmentRetrievalOption: AttachmentRetrievalOption;
	orderByDirection: orderByDirection;
	orderByNullsPosition: orderByNullsPosition;
	soqlOperator: soqlOperator;
	soqlConjunction: soqlConjunction;
	EmailSyncDirection: EmailSyncDirection;
	EmailSyncConflictResolution: EmailSyncConflictResolution;
	EmailSyncMatchPreference: EmailSyncMatchPreference;
	EmailSyncClientFieldType: EmailSyncClientFieldType;
	SchemaScope: SchemaScope;
	SchemaType: SchemaType;
	EventName: EventName;
	AppMenuType: AppMenuType;
	UiType: UiType;
	listViewIsSoqlCompatible: listViewIsSoqlCompatible;
	PerfOption: PerfOption;
	queryOptionsScope: queryOptionsScope;
	DebugLevel: DebugLevel;
	MetadataVersionCheckFact: MetadataVersionCheckFact;
	Operation: Operation;
	LogCategory: LogCategory;
	LogCategoryLevel: LogCategoryLevel;
	OwnerChangeOptionType: OwnerChangeOptionType;
	RequestOrigin: RequestOrigin;
	ExceptionCode: ExceptionCode;
	FaultCode: FaultCode;
	findDuplicates: findDuplicates;
	findDuplicatesByIds: findDuplicatesByIds;
	findDuplicatesByIdsResponse: findDuplicatesByIdsResponse;
	findDuplicatesResponse: findDuplicatesResponse;
	createSnapshot: createSnapshot;
	createSnapshotResponse: createSnapshotResponse;
	moreSnapshot: moreSnapshot;
	moreSnapshotResponse: moreSnapshotResponse;
	ackSnapshot: ackSnapshot;
	ackSnapshotResponse: ackSnapshotResponse;
	syncOfflineData: syncOfflineData;
	syncOfflineDataResponse: syncOfflineDataResponse;
	ackSyncOfflineData: ackSyncOfflineData;
	ackSyncOfflineDataResponse: ackSyncOfflineDataResponse;
	describeMobile: describeMobile;
	describeMobileResponse: describeMobileResponse;
	loginXi: loginXi;
	loginXiResponse: loginXiResponse;
	login: login;
	loginResponse: loginResponse;
	describeSObject: describeSObject;
	describeSObjectResponse: describeSObjectResponse;
	discoverSchemas: discoverSchemas;
	discoverSchemasResponse: discoverSchemasResponse;
	describeSchema: describeSchema;
	describeSchemaResponse: describeSchemaResponse;
	describePicklists: describePicklists;
	describePicklistsResponse: describePicklistsResponse;
	captureCommonEvent: captureCommonEvent;
	captureCommonEventResponse: captureCommonEventResponse;
	describeSObjects: describeSObjects;
	describeSObjectsResponse: describeSObjectsResponse;
	describeGlobal: describeGlobal;
	describeGlobalResponse: describeGlobalResponse;
	describeGlobalTheme: describeGlobalTheme;
	describeGlobalThemeResponse: describeGlobalThemeResponse;
	describeTheme: describeTheme;
	describeThemeResponse: describeThemeResponse;
	describeDataCategoryGroups: describeDataCategoryGroups;
	describeDataCategoryGroupsResponse: describeDataCategoryGroupsResponse;
	describeDataCategoryGroupStructures: describeDataCategoryGroupStructures;
	describeDataCategoryGroupStructuresResponse: describeDataCategoryGroupStructuresResponse;
	describeDataCategoryMappings: describeDataCategoryMappings;
	describeDataCategoryMappingsResponse: describeDataCategoryMappingsResponse;
	describeKnowledgeSettings: describeKnowledgeSettings;
	describeKnowledgeSettingsResponse: describeKnowledgeSettingsResponse;
	describeDuplicateRules: describeDuplicateRules;
	describeDuplicateRulesResponse: describeDuplicateRulesResponse;
	ftestPatch: ftestPatch;
	ftestPatchResponse: ftestPatchResponse;
	ftestPatchPreviousVersion: ftestPatchPreviousVersion;
	ftestPatchPreviousVersionResponse: ftestPatchPreviousVersionResponse;
	describeFlexiPages: describeFlexiPages;
	describeFlexiPagesResponse: describeFlexiPagesResponse;
	describeAppMenu: describeAppMenu;
	describeAppMenuResponse: describeAppMenuResponse;
	describeLayout: describeLayout;
	describeLayoutByUiType: describeLayoutByUiType;
	describeLayoutByUiTypeResponse: describeLayoutByUiTypeResponse;
	describeLayoutResponse: describeLayoutResponse;
	describeMiniLayout: describeMiniLayout;
	describeMiniLayoutResponse: describeMiniLayoutResponse;
	describeCompactLayouts: describeCompactLayouts;
	describeCompactLayoutsResponse: describeCompactLayoutsResponse;
	describePrimaryCompactLayouts: describePrimaryCompactLayouts;
	describePrimaryCompactLayoutsResponse: describePrimaryCompactLayoutsResponse;
	describePathAssistants: describePathAssistants;
	describePathAssistantsResponse: describePathAssistantsResponse;
	describeApprovalLayout: describeApprovalLayout;
	describeApprovalLayoutResponse: describeApprovalLayoutResponse;
	describeSoftphoneLayout: describeSoftphoneLayout;
	describeSoftphoneLayoutResponse: describeSoftphoneLayoutResponse;
	describeListViews: describeListViews;
	describeListViewsResponse: describeListViewsResponse;
	describeLookupLayouts: describeLookupLayouts;
	describeLookupLayoutsResponse: describeLookupLayoutsResponse;
	describeSoqlListViews: describeSoqlListViews;
	describeSoqlListViewsResponse: describeSoqlListViewsResponse;
	executeListView: executeListView;
	executeListViewResponse: executeListViewResponse;
	describeSObjectListViews: describeSObjectListViews;
	describeSObjectListViewsResponse: describeSObjectListViewsResponse;
	describeSearchLayouts: describeSearchLayouts;
	describeSearchLayoutsResponse: describeSearchLayoutsResponse;
	describeSearchScopeOrder: describeSearchScopeOrder;
	describeSearchScopeOrderResponse: describeSearchScopeOrderResponse;
	describeSearchableEntities: describeSearchableEntities;
	describeSearchableEntitiesResponse: describeSearchableEntitiesResponse;
	describeTabs: describeTabs;
	describeTabsResponse: describeTabsResponse;
	describeAllTabs: describeAllTabs;
	describeAllTabsResponse: describeAllTabsResponse;
	describeNouns: describeNouns;
	describeNounsResponse: describeNounsResponse;
	create: create;
	createResponse: createResponse;
	sendEmail: sendEmail;
	sendEmailResponse: sendEmailResponse;
	renderEmailTemplate: renderEmailTemplate;
	renderEmailTemplateResponse: renderEmailTemplateResponse;
	renderStoredEmailTemplate: renderStoredEmailTemplate;
	renderStoredEmailTemplateResponse: renderStoredEmailTemplateResponse;
	sendEmailMessage: sendEmailMessage;
	sendEmailMessageResponse: sendEmailMessageResponse;
	emailMerge: emailMerge;
	emailMergeResponse: emailMergeResponse;
	update: update;
	updateResponse: updateResponse;
	upsert: upsert;
	upsertResponse: upsertResponse;
	merge: merge;
	mergeResponse: mergeResponse;
	delete_: delete_;
	deleteResponse: deleteResponse;
	deleteByExample: deleteByExample;
	deleteByExampleResponse: deleteByExampleResponse;
	undelete: undelete;
	undeleteResponse: undeleteResponse;
	updateSettings: updateSettings;
	updateSettingsResponse: updateSettingsResponse;
	emptyRecycleBin: emptyRecycleBin;
	emptyRecycleBinResponse: emptyRecycleBinResponse;
	process: process;
	processResponse: processResponse;
	performQuickActions: performQuickActions;
	performQuickActionsResponse: performQuickActionsResponse;
	retrieveMassQuickActionTemplates: retrieveMassQuickActionTemplates;
	retrieveMassQuickActionTemplatesResponse: retrieveMassQuickActionTemplatesResponse;
	retrieveQuickActionTemplates: retrieveQuickActionTemplates;
	retrieveQuickActionTemplatesResponse: retrieveQuickActionTemplatesResponse;
	describeQuickActions: describeQuickActions;
	describeQuickActionsResponse: describeQuickActionsResponse;
	describeQuickActionsForRecordType: describeQuickActionsForRecordType;
	describeQuickActionsForRecordTypeResponse: describeQuickActionsForRecordTypeResponse;
	describeAvailableQuickActions: describeAvailableQuickActions;
	describeAvailableQuickActionsResponse: describeAvailableQuickActionsResponse;
	describeVisualForce: describeVisualForce;
	describeVisualForceResponse: describeVisualForceResponse;
	describeWorkitemActions: describeWorkitemActions;
	describeWorkitemActionsResponse: describeWorkitemActionsResponse;
	retrieve: retrieve;
	retrieveResponse: retrieveResponse;
	retrieveDefaultValues: retrieveDefaultValues;
	retrieveDefaultValuesResponse: retrieveDefaultValuesResponse;
	convertLead: convertLead;
	convertLeadResponse: convertLeadResponse;
	addCampaignMember: addCampaignMember;
	addCampaignMemberResponse: addCampaignMemberResponse;
	getUpdated: getUpdated;
	getUpdatedResponse: getUpdatedResponse;
	getDeleted: getDeleted;
	getDeletedResponse: getDeletedResponse;
	impersonateUser: impersonateUser;
	impersonateUserResponse: impersonateUserResponse;
	logout: logout;
	logoutResponse: logoutResponse;
	invalidateSessions: invalidateSessions;
	invalidateSessionsResponse: invalidateSessionsResponse;
	canViewFlow: canViewFlow;
	canViewFlowResponse: canViewFlowResponse;
	startFlowInterview: startFlowInterview;
	startFlowInterviewResponse: startFlowInterviewResponse;
	resumeFlowInterview: resumeFlowInterview;
	resumeFlowInterviewResponse: resumeFlowInterviewResponse;
	runFlowTest: runFlowTest;
	runFlowTestResponse: runFlowTestResponse;
	generateFlowTest: generateFlowTest;
	generateFlowTestResponse: generateFlowTestResponse;
	getFlowInterviewHistory: getFlowInterviewHistory;
	getFlowInterviewHistoryResponse: getFlowInterviewHistoryResponse;
	navigateFlowInterview: navigateFlowInterview;
	navigateFlowInterviewResponse: navigateFlowInterviewResponse;
	query: query;
	queryResponse: queryResponse;
	queryAll: queryAll;
	queryAllResponse: queryAllResponse;
	queryMore: queryMore;
	queryMoreResponse: queryMoreResponse;
	setupBriefcase: setupBriefcase;
	setupBriefcaseResponse: setupBriefcaseResponse;
	search: search;
	searchResponse: searchResponse;
	outlookSearch: outlookSearch;
	outlookSearchResponse: outlookSearchResponse;
	outlookDescribe: outlookDescribe;
	outlookDescribeResponse: outlookDescribeResponse;
	getServerTimestamp: getServerTimestamp;
	getServerTimestampResponse: getServerTimestampResponse;
	setPassword: setPassword;
	setPasswordResponse: setPasswordResponse;
	changeOwnPassword: changeOwnPassword;
	changeOwnPasswordResponse: changeOwnPasswordResponse;
	resetPassword: resetPassword;
	resetPasswordResponse: resetPasswordResponse;
	getAccessInfo: getAccessInfo;
	getAccessInfoResponse: getAccessInfoResponse;
	getUserInfo: getUserInfo;
	getUserInfoResponse: getUserInfoResponse;
	activate: activate;
	activateResponse: activateResponse;
	generateJwtToken: generateJwtToken;
	generateJwtTokenResponse: generateJwtTokenResponse;
	SessionHeader: SessionHeader;
	LoginScopeHeader: LoginScopeHeader;
	CallOptions: CallOptions;
	QueryOptions: QueryOptions;
	APIPerformanceInfo: APIPerformanceInfo;
	MetadataVersionCheck: MetadataVersionCheck;
	DebuggingHeader: DebuggingHeader;
	DebuggingInfo: DebuggingInfo;
	PackageVersionHeader: PackageVersionHeader;
	AllowFieldTruncationHeader: AllowFieldTruncationHeader;
	DisableFeedTrackingHeader: DisableFeedTrackingHeader;
	StreamingEnabledHeader: StreamingEnabledHeader;
	AllOrNoneHeader: AllOrNoneHeader;
	CurrencyConversionHeader: CurrencyConversionHeader;
	DuplicateRuleHeader: DuplicateRuleHeader;
	LimitInfoHeader: LimitInfoHeader;
	PatchHeader: PatchHeader;
	match: match;
	matchResponse: matchResponse;
	MruHeader: MruHeader;
	EmailHeader: EmailHeader;
	AssignmentRuleHeader: AssignmentRuleHeader;
	ConditionalRequestHeader: ConditionalRequestHeader;
	UserTerritoryDeleteHeader: UserTerritoryDeleteHeader;
	PartnerNetworkHeader: PartnerNetworkHeader;
	LocaleOptions: LocaleOptions;
	OwnerChangeOptions: OwnerChangeOptions;
	CommonEventRequestInformation: CommonEventRequestInformation;
	fault: fault;
	LoginFault: LoginFault;
	InvalidQueryLocatorFault: InvalidQueryLocatorFault;
	InvalidNewPasswordFault: InvalidNewPasswordFault;
	InvalidOldPasswordFault: InvalidOldPasswordFault;
	InvalidIdFault: InvalidIdFault;
	UnexpectedErrorFault: UnexpectedErrorFault;
	InvalidFieldFault: InvalidFieldFault;
	InvalidSObjectFault: InvalidSObjectFault;
	MalformedQueryFault: MalformedQueryFault;
	MalformedSearchFault: MalformedSearchFault;
	sObject: sObject;
	address: address;
	location: location;
	QueryResult: QueryResult;
	SetupBriefcaseResult: SetupBriefcaseResult;
	SearchResult: SearchResult;
	SearchRecord: SearchRecord;
	SearchRecordMetadata: SearchRecordMetadata;
	SearchSnippet: SearchSnippet;
	SearchResultsMetadata: SearchResultsMetadata;
	LabelsSearchMetadata: LabelsSearchMetadata;
	EntitySearchMetadata: EntitySearchMetadata;
	FieldLevelSearchMetadata: FieldLevelSearchMetadata;
	EntitySpellCorrectionMetadata: EntitySpellCorrectionMetadata;
	EntitySearchPromotionMetadata: EntitySearchPromotionMetadata;
	EntityIntentQueryMetadata: EntityIntentQueryMetadata;
	EntityErrorMetadata: EntityErrorMetadata;
	SearchStatus: SearchStatus;
	RelationshipReferenceTo: RelationshipReferenceTo;
	RecordTypesSupported: RecordTypesSupported;
	JunctionIdListNames: JunctionIdListNames;
	SearchLayoutButtonsDisplayed: SearchLayoutButtonsDisplayed;
	SearchLayoutButton: SearchLayoutButton;
	SearchLayoutFieldsDisplayed: SearchLayoutFieldsDisplayed;
	SearchLayoutField: SearchLayoutField;
	NameValuePair: NameValuePair;
	NameObjectValuePair: NameObjectValuePair;
	NameValueTypeTriple: NameValueTypeTriple;
	SimpleNameObjectValuePair: SimpleNameObjectValuePair;
	FlowInterviewWrapperContext: FlowInterviewWrapperContext;
	StartFlowInterviewRequest: StartFlowInterviewRequest;
	NavigateFlowInterviewRequest: NavigateFlowInterviewRequest;
	ResumeFlowInterviewRequest: ResumeFlowInterviewRequest;
	RunFlowTestInput: RunFlowTestInput;
	RunFlowTestResult: RunFlowTestResult;
	GetFlowInterviewHistoryRequest: GetFlowInterviewHistoryRequest;
	FlowAccessInput: FlowAccessInput;
	CanViewFlowResult: CanViewFlowResult;
	FlowInterviewAction: FlowInterviewAction;
	FlowTest: FlowTest;
	FlowTestPoint: FlowTestPoint;
	FlowTestAssert: FlowTestAssert;
	FlowTestAssertionResult: FlowTestAssertionResult;
	FlowTestCondition: FlowTestCondition;
	FlowTestReferenceOrValue: FlowTestReferenceOrValue;
	FlowTestParameter: FlowTestParameter;
	GenerateFlowTestResult: GenerateFlowTestResult;
	NavigateFlowInterviewResult: NavigateFlowInterviewResult;
	FlowInterviewScreenField: FlowInterviewScreenField;
	FlowInterviewReactiveTrigger: FlowInterviewReactiveTrigger;
	FlowInterviewReactiveHandler: FlowInterviewReactiveHandler;
	FlowInterviewReactiveAction: FlowInterviewReactiveAction;
	FlowInterviewReactiveAssignment: FlowInterviewReactiveAssignment;
	FlowInterviewReactiveFormulaEvaluation: FlowInterviewReactiveFormulaEvaluation;
	FlowInterviewReactiveValidation: FlowInterviewReactiveValidation;
	FlowInterviewReactiveDataProvider: FlowInterviewReactiveDataProvider;
	FlowInterviewReactiveDataProviderFilter: FlowInterviewReactiveDataProviderFilter;
	FlowInterviewReactiveFormula: FlowInterviewReactiveFormula;
	FlowInterviewReferenceContextMapEntry: FlowInterviewReferenceContextMapEntry;
	FlowInterviewScreenFieldInput: FlowInterviewScreenFieldInput;
	FlowInterviewScreenFieldOutput: FlowInterviewScreenFieldOutput;
	FlowInterviewLocalActionInput: FlowInterviewLocalActionInput;
	FlowInterviewLocalActionOutput: FlowInterviewLocalActionOutput;
	FlowInterviewErrorDetail: FlowInterviewErrorDetail;
	FlowInterviewMetadataValue: FlowInterviewMetadataValue;
	FlowInterviewReactiveChoiceSource: FlowInterviewReactiveChoiceSource;
	FlowInterviewChoice: FlowInterviewChoice;
	FlowInterviewChoiceUserInput: FlowInterviewChoiceUserInput;
	FlowInterviewOutputVariable: FlowInterviewOutputVariable;
	FlowInterviewStage: FlowInterviewStage;
	FlowInterviewDebugInput: FlowInterviewDebugInput;
	FlowInterviewDebugWaitInput: FlowInterviewDebugWaitInput;
	FlowInterviewDebugOutput: FlowInterviewDebugOutput;
	FlowInterviewDebugWaitOutput: FlowInterviewDebugWaitOutput;
	FlowInterviewObjectFieldReference: FlowInterviewObjectFieldReference;
	FlowInterviewCustomProperty: FlowInterviewCustomProperty;
	ClaimsMapping: ClaimsMapping;
	GetUpdatedResult: GetUpdatedResult;
	GetDeletedResult: GetDeletedResult;
	DeletedRecord: DeletedRecord;
	OutlookSearchResult: OutlookSearchResult;
	OutlookDescribeResult: OutlookDescribeResult;
	GetServerTimestampResult: GetServerTimestampResult;
	ImpersonateUserResult: ImpersonateUserResult;
	InvalidateSessionsResult: InvalidateSessionsResult;
	SetPasswordResult: SetPasswordResult;
	ChangeOwnPasswordResult: ChangeOwnPasswordResult;
	ResetPasswordResult: ResetPasswordResult;
	GetAccessInfoResult: GetAccessInfoResult;
	AccessMapping: AccessMapping;
	GetUserInfoResult: GetUserInfoResult;
	LoginResult: LoginResult;
	ExtendedErrorDetails: ExtendedErrorDetails;
	Error: Error;
	SendEmailError: SendEmailError;
	SaveResult: SaveResult;
	RenderEmailTemplateError: RenderEmailTemplateError;
	UpsertResult: UpsertResult;
	PerformQuickActionResult: PerformQuickActionResult;
	QuickActionTemplateResult: QuickActionTemplateResult;
	MergeRequest: MergeRequest;
	MergeResult: MergeResult;
	ProcessRequest: ProcessRequest;
	ProcessSubmitRequest: ProcessSubmitRequest;
	ProcessWorkitemRequest: ProcessWorkitemRequest;
	PerformQuickActionRequest: PerformQuickActionRequest;
	DescribeAvailableQuickActionResult: DescribeAvailableQuickActionResult;
	DescribeQuickActionResult: DescribeQuickActionResult;
	DescribeQuickActionDefaultValue: DescribeQuickActionDefaultValue;
	DescribeQuickActionParameter: DescribeQuickActionParameter;
	DescribeVisualForceResult: DescribeVisualForceResult;
	ProcessArticleRequest: ProcessArticleRequest;
	ProcessResult: ProcessResult;
	DescribeWorkitemActionResult: DescribeWorkitemActionResult;
	AllowedWorkitemAction: AllowedWorkitemAction;
	DeleteResult: DeleteResult;
	UndeleteResult: UndeleteResult;
	DeleteByExampleResult: DeleteByExampleResult;
	EmptyRecycleBinResult: EmptyRecycleBinResult;
	LeadConvert: LeadConvert;
	LeadConvertResult: LeadConvertResult;
	AddCampaignMemberOptions: AddCampaignMemberOptions;
	AddCampaignMemberResult: AddCampaignMemberResult;
	DescribeSObjectResult: DescribeSObjectResult;
	DescribePicklistResult: DescribePicklistResult;
	DescribePicklistsParam: DescribePicklistsParam;
	DescribeGlobalSObjectResult: DescribeGlobalSObjectResult;
	ChildRelationship: ChildRelationship;
	DescribeGlobalResult: DescribeGlobalResult;
	DescribeGlobalTheme: DescribeGlobalTheme;
	DiscoverSchemasResult: DiscoverSchemasResult;
	Schema: Schema;
	DescribeSchemaResult: DescribeSchemaResult;
	SchemaField: SchemaField;
	ScopeInfo: ScopeInfo;
	DurableIdList: DurableIdList;
	StringList: StringList;
	ChangeEventHeader: ChangeEventHeader;
	FilteredLookupInfo: FilteredLookupInfo;
	Field: Field;
	PicklistEntry: PicklistEntry;
	DescribeDataCategoryGroupResult: DescribeDataCategoryGroupResult;
	DescribeDataCategoryGroupStructureResult: DescribeDataCategoryGroupStructureResult;
	DataCategoryGroupSobjectTypePair: DataCategoryGroupSobjectTypePair;
	DataCategory: DataCategory;
	DescribeDataCategoryMappingResult: DescribeDataCategoryMappingResult;
	CommonEventResult: CommonEventResult;
	KnowledgeSettings: KnowledgeSettings;
	KnowledgeLanguageItem: KnowledgeLanguageItem;
	FieldDiff: FieldDiff;
	AdditionalInformationMap: AdditionalInformationMap;
	MatchRecord: MatchRecord;
	MatchResult: MatchResult;
	DuplicateResult: DuplicateResult;
	DuplicateError: DuplicateError;
	DescribeNounResult: DescribeNounResult;
	NameCaseValue: NameCaseValue;
	ObjectMapping: ObjectMapping;
	ObjectMappingField: ObjectMappingField;
	DescribeDuplicateRuleResult: DescribeDuplicateRuleResult;
	DuplicateRuleFilter: DuplicateRuleFilter;
	DuplicateRuleFilterItem: DuplicateRuleFilterItem;
	DuplicateRuleMatchInfo: DuplicateRuleMatchInfo;
	FindDuplicatesResult: FindDuplicatesResult;
	DescribeFlexiPageResult: DescribeFlexiPageResult;
	DescribeFlexiPageRegion: DescribeFlexiPageRegion;
	DescribeComponentInstance: DescribeComponentInstance;
	DescribeComponentInstanceProperty: DescribeComponentInstanceProperty;
	FlexipageContext: FlexipageContext;
	DescribeAppMenuResult: DescribeAppMenuResult;
	DescribeAppMenuItem: DescribeAppMenuItem;
	DescribeThemeResult: DescribeThemeResult;
	DescribeThemeItem: DescribeThemeItem;
	DescribeSoftphoneLayoutResult: DescribeSoftphoneLayoutResult;
	DescribeSoftphoneLayoutCallType: DescribeSoftphoneLayoutCallType;
	DescribeSoftphoneScreenPopOption: DescribeSoftphoneScreenPopOption;
	DescribeSoftphoneLayoutInfoField: DescribeSoftphoneLayoutInfoField;
	DescribeSoftphoneLayoutSection: DescribeSoftphoneLayoutSection;
	DescribeSoftphoneLayoutItem: DescribeSoftphoneLayoutItem;
	DescribeCompactLayoutsResult: DescribeCompactLayoutsResult;
	DescribeCompactLayout: DescribeCompactLayout;
	RecordTypeCompactLayoutMapping: RecordTypeCompactLayoutMapping;
	DescribePathAssistantsResult: DescribePathAssistantsResult;
	DescribePathAssistant: DescribePathAssistant;
	DescribePathAssistantStep: DescribePathAssistantStep;
	DescribePathAssistantField: DescribePathAssistantField;
	DescribeAnimationRule: DescribeAnimationRule;
	DescribeApprovalLayoutResult: DescribeApprovalLayoutResult;
	DescribeApprovalLayout: DescribeApprovalLayout;
	DescribeLayoutResult: DescribeLayoutResult;
	DescribeLayout: DescribeLayout;
	DescribeMiniLayoutResult: DescribeMiniLayoutResult;
	DescribeQuickActionListResult: DescribeQuickActionListResult;
	DescribeQuickActionListItemResult: DescribeQuickActionListItemResult;
	DescribeLayoutFeedView: DescribeLayoutFeedView;
	DescribeLayoutFeedFilter: DescribeLayoutFeedFilter;
	DescribeLayoutSaveOption: DescribeLayoutSaveOption;
	DescribeLayoutSection: DescribeLayoutSection;
	DescribeLayoutButtonSection: DescribeLayoutButtonSection;
	DescribeLayoutRow: DescribeLayoutRow;
	DescribeLayoutItem: DescribeLayoutItem;
	DescribeLayoutButton: DescribeLayoutButton;
	DescribeLayoutComponent: DescribeLayoutComponent;
	FieldComponent: FieldComponent;
	FieldLayoutComponent: FieldLayoutComponent;
	VisualforcePage: VisualforcePage;
	Canvas: Canvas;
	ReportChartComponent: ReportChartComponent;
	AnalyticsCloudComponent: AnalyticsCloudComponent;
	FieldCriteria: FieldCriteria;
	FieldCriterion: FieldCriterion;
	CustomLinkComponent: CustomLinkComponent;
	NamedLayoutInfo: NamedLayoutInfo;
	RecordTypeInfo: RecordTypeInfo;
	RecordTypeMapping: RecordTypeMapping;
	PicklistForRecordType: PicklistForRecordType;
	RelatedContent: RelatedContent;
	DescribeRelatedContentItem: DescribeRelatedContentItem;
	RelatedList: RelatedList;
	RelatedListColumn: RelatedListColumn;
	RelatedListSort: RelatedListSort;
	OfflineLink: OfflineLink;
	EmailAttachment: EmailAttachment;
	HandledEmailMessage: HandledEmailMessage;
	EmailFileAttachment: EmailFileAttachment;
	Email: Email;
	MassEmailMessage: MassEmailMessage;
	SingleEmailMessage: SingleEmailMessage;
	SendEmailResult: SendEmailResult;
	DescribeListViewResult: DescribeListViewResult;
	DescribeListView: DescribeListView;
	DescribeFilter: DescribeFilter;
	DescribeColumn: DescribeColumn;
	DescribeSort: DescribeSort;
	DescribeLookupLayoutResult: DescribeLookupLayoutResult;
	ListViewColumn: ListViewColumn;
	ListViewOrderBy: ListViewOrderBy;
	DescribeSoqlListView: DescribeSoqlListView;
	DescribeSoqlListViewsRequest: DescribeSoqlListViewsRequest;
	DescribeSoqlListViewParams: DescribeSoqlListViewParams;
	DescribeSoqlListViewResult: DescribeSoqlListViewResult;
	ExecuteListViewRequest: ExecuteListViewRequest;
	ExecuteListViewResult: ExecuteListViewResult;
	ListViewRecord: ListViewRecord;
	ListViewRecordColumn: ListViewRecordColumn;
	SoqlWhereCondition: SoqlWhereCondition;
	SoqlCondition: SoqlCondition;
	SoqlNotCondition: SoqlNotCondition;
	SoqlConditionGroup: SoqlConditionGroup;
	SoqlSubQueryCondition: SoqlSubQueryCondition;
	DescribeSearchLayoutResult: DescribeSearchLayoutResult;
	DescribeSearchScopeOrderResult: DescribeSearchScopeOrderResult;
	DescribeSearchableEntityResult: DescribeSearchableEntityResult;
	DescribeTabSetResult: DescribeTabSetResult;
	DescribeTab: DescribeTab;
	DescribeColor: DescribeColor;
	DescribeIcon: DescribeIcon;
	ActionOverride: ActionOverride;
	ActivateResult: ActivateResult;
	SnapshotItem: SnapshotItem;
	SnapshotResult: SnapshotResult;
	SyncOfflineDataResult: SyncOfflineDataResult;
	EmailSyncAdvancedSetting: EmailSyncAdvancedSetting;
	EmailSyncEntity: EmailSyncEntity;
	EmailSyncFieldMapping: EmailSyncFieldMapping;
	EmailSyncFieldValueMapping: EmailSyncFieldValueMapping;
	EmailSyncRoutingAddress: EmailSyncRoutingAddress;
	DescribeEmailSyncSettings: DescribeEmailSyncSettings;
	DescribeMobileResult: DescribeMobileResult;
	DescribeMobileSObject: DescribeMobileSObject;
	DescribeMobileView: DescribeMobileView;
	DescribeMobileViewDispColumn: DescribeMobileViewDispColumn;
	DescribeMobileViewFilter: DescribeMobileViewFilter;
	DescribeMobileViewSortOrder: DescribeMobileViewSortOrder;
	DescribeMobileSettings: DescribeMobileSettings;
	RenderEmailTemplateRequest: RenderEmailTemplateRequest;
	RenderEmailTemplateBodyResult: RenderEmailTemplateBodyResult;
	RenderEmailTemplateResult: RenderEmailTemplateResult;
	RenderStoredEmailTemplateRequest: RenderStoredEmailTemplateRequest;
	RenderStoredEmailTemplateResult: RenderStoredEmailTemplateResult;
	Fact: Fact;
	LogInfo: LogInfo;
	PackageVersion: PackageVersion;
	LimitInfo: LimitInfo;
	MatchOptions: MatchOptions;
	OwnerChangeOption: OwnerChangeOption;
	ApiFault: ApiFault;
	ApiQueryFault: ApiQueryFault;
}
